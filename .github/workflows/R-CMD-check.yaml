# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main, master]
  pull_request:

name: R-CMD-check.yaml

permissions: read-all

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,   r: 'release'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - name: Install JAGS on Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y jags

      - name: Install JAGS on macOS
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install jags

          JAGS_PREFIX="$(brew --prefix jags)"
          echo "Homebrew JAGS prefix: $JAGS_PREFIX"

          # 1) Symlink the shared library into /usr/local/lib
          sudo mkdir -p /usr/local/lib
          sudo ln -sfn "$JAGS_PREFIX/lib/libjags.4.dylib" /usr/local/lib/libjags.4.dylib

          # 2) Symlink the headers into /usr/local/include/JAGS (for pkg-config, compile-time)
          sudo mkdir -p /usr/local/include/JAGS
          sudo ln -sfn "$JAGS_PREFIX/include/JAGS" /usr/local/include/JAGS

          # 3) Symlink the modules directory so rjags can find basemod.so, bayesglm.so, etc.
          sudo mkdir -p /usr/local/lib/JAGS
          sudo ln -sfn "$JAGS_PREFIX/lib/JAGS/modules-4" /usr/local/lib/JAGS/modules-4

          # Sanity check
          ls -l /usr/local/lib/JAGS/modules-4

      - name: Install JAGS on Windows
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          # Force TLS1.2 so SourceForge serves the binary
          [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12

          # Download the real JAGS-4.3.1 installer via the /download URL
          $url           = 'https://sourceforge.net/projects/mcmc-jags/files/JAGS/4.x/Windows/JAGS-4.3.1.exe/download'
          $installerPath = "$PWD\jags-installer.exe"
          (New-Object System.Net.WebClient).DownloadFile($url, $installerPath)

          # Check we got something that looks like an EXE
          if (-not (Test-Path $installerPath)) { throw "JAGS installer not found!" }
          if ((Get-Item $installerPath).Length -lt 5MB) { throw "Downloaded file too small; did not get the real installer." }

          # Run it silently
          Start-Process -FilePath $installerPath `
            -ArgumentList '/VERYSILENT','/SUPPRESSMSGBOXES','/NORESTART' `
            -NoNewWindow -Wait

          # Add JAGS bin folder to PATH for rjags
          $jagsBin = 'C:\Program Files\JAGS\JAGS-4.3.1\bin'
          if (-not (Test-Path $jagsBin)) { throw "Expected JAGS bin at $jagsBin, but it was not found." }
          Write-Host "Adding $jagsBin to PATH"
          Write-Host $jagsBin | Out-File -FilePath $Env:GITHUB_PATH -Encoding utf8

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      - name: Build source tarball
        run: R CMD build . --no-manual

      - name: Install package
        run: R CMD INSTALL MOSAIC_*.tar.gz

      - name: Smoke-test load
        run: Rscript -e "library(MOSAIC)"


