[{"path":[]},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/01-intro.html","id":"history","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Introduction","what":"History","title":"","text":"Vibrio cholerae introduced African continent Asia 1970s since become endemic many countries.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/01-intro.html","id":"recent-surge","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Introduction","what":"Recent Surge","title":"","text":"Although sporadic cholera outbreaks past five decades, significant surge cases since 2021. increase likely due factors climate change disruptions municipal services COVID-19 pandemic.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/01-intro.html","id":"gtfcc-goals","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Introduction","what":"GTFCC Goals","title":"","text":"Global Task Force Cholera Control (GTFCC) aims reduce cholera deaths 90% 2030.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/01-intro.html","id":"ocv-stockpiles","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Introduction","what":"OCV Stockpiles","title":"","text":"major concern recent surge cases depletion oral cholera vaccine (OCV) stockpiles. response, officials shifted single-dose OCV strategies. Efforts underway replenish stockpiles, key question best allocate reduce transmission regionally support GTFCC’s goal.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/01-intro.html","id":"climate-change","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Introduction","what":"Climate Change","title":"","text":"Environmental factors play significant role cholera outbreaks, warmer wetter conditions creating favorable environment Vibrio cholerae. conditions likely exacerbate already challenging endemic outbreak settings. Models incorporate climatic forcing can provide insights future cholera dynamics due climate change aid achieving GTFCC goal.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/02-rationale.html","id":"rationale","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"","what":"Rationale","title":"","text":"significant challenge controlling cholera transmission Sub-Saharan Africa (SSA) lack comprehensive datasets dynamic models designed support ongoing policy-making. persistent endemic nature cholera SSA presents complex quantitative challenge, requiring sophisticated models produce meaningful inferences. Models incorporate necessary natural history disease dynamics, operate adequate spatial temporal scales, crucial providing timely actionable information address ongoing future cholera outbreaks. Although developing data models scales challenging, goal iteratively create landscape-scale transmission model cholera SSA can provide weekly predictions key epidemiological metrics. modeling methods leverage wide array --date data sources, including incidence mortality reports, patterns human movement, vaccination history schedules, environmental factors. Key questions address include administer limited supply oral cholera vaccine (OCV) severe weather events climate change impact future outbreaks. landscape-scale model accounts endemic transmission patterns valuable tool addressing questions.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/03-data.html","id":"data","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"","what":"Data","title":"","text":"MOSAIC model requires diverse set data sources, directly used define model parameters (e.g., birth death rates), others help fit models priori provide informative priors transmission model. additional data sources become available, future versions model adapt incorporate . now, following data sources represent minimum requirements initiate viable first model.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/03-data.html","id":"historical-incidence-and-deaths","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Data","what":"Historical Incidence and Deaths","title":"","text":"Data historical cholera incidence deaths crucial establishing baseline transmission patterns. compiled annual total reported cases deaths AFRO region countries January 1970 August 2024. data comes several sources include: World Data (1970-2021): Number Reported Cases Cholera (1949-2021) Number Reported Deaths Cholera (1949-2021). World Data group compiled data previously published annual reports. Annual Report 2022: data manually extracted World Health Organization’s Weekly Epidemiological Record 38, 2023, 98, 431–452. Global Cholera Acute Watery Diarrhea Dashboard (2023-2024): Unofficial tallies reported cases deaths 2023 part 2024 available Global Cholera AWD Dashboard.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/03-data.html","id":"recent-incidence-and-deaths","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Data","what":"Recent Incidence and Deaths","title":"","text":"capture recent cholera trends, retrieved reported cases deaths data Global Cholera Acute Watery Diarrhea Dashboard REST API. data provide weekly incidence deaths January 2023 August 2024 provides --date counts country level.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/03-data.html","id":"vaccinations","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Data","what":"Vaccinations","title":"","text":"Accurate data oral cholera vaccine (OCV) campaigns vaccination history vital understanding impact vaccination efforts. data come : Cholera Vaccine Dashboard: resource (link) provides detailed information OCV distribution vaccination campaigns 2016 2024. GTFCC OCV Dashboard: Managed Médecins Sans Frontières, dashboard (link) tracks OCV deployments globally, offering granular insights vaccination efforts 2013 2024.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/03-data.html","id":"human-mobility-data","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Data","what":"Human Mobility Data","title":"","text":"Human mobility patterns significantly influence cholera transmission. Relevant data include: OAG Passenger Booking Data: dataset (link) offers insights air passenger movements, can used model spread cholera across regions. Namibia Call Data Records: additional source Giles et al. (2020) (link) provides detailed mobility data based mobile phone records, useful localized modeling.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/03-data.html","id":"climate-data","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Data","what":"Climate Data","title":"","text":"Climate conditions, including temperature, precipitation, extreme weather events, play critical role cholera dynamics. captured : OpenMeteo Historical Weather Data API: API (link) offers access historical climate data, essential modeling environmental factors influencing cholera outbreaks.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/03-data.html","id":"storms-and-floods","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Data > Climate Data","what":"Storms and Floods","title":"","text":"Data extreme weather events, specifically storms floods, obtained : EM-DAT International Disaster Database: Maintained Centre Research Epidemiology Disasters (CRED) UCLouvain, database (link) provides comprehensive records disasters 2000 present, including affecting African countries.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/03-data.html","id":"wash-water-sanitation-and-hygiene","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Data","what":"WASH (Water, Sanitation, and Hygiene)","title":"","text":"Data water, sanitation, hygiene (WASH) critical understanding environmental infrastructural factors influence cholera transmission. data sourced : UNICEF Joint Monitoring Program (JMP) Database: resource (link) offers detailed information household-level access clean water sanitation, integral cholera prevention efforts.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/03-data.html","id":"demographics","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Data","what":"Demographics","title":"","text":"Demographic data, including population size, birth rates, death rates, foundational accurate disease modeling. data sourced : UN World Population Prospects 2024: database (link) provides probabilistic projections key demographic metrics, essential estimating population-level impacts cholera.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/04-model-description.html","id":"model-description","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"","what":"Model description","title":"","text":"describe methods MOSAIC beta version 0.1. model version provides starting point understanding cholera transmission Sub-Saharan Africa, incorporating important drivers disease dynamics human mobility, environmental conditions, vaccination schedules. MOSAIC continues evolve, future iterations refine model components based available data improved model mechanisms, hope increase applicability real-world scenarios. model operates weekly time steps January 2023 August 2024 includes 46 countries Sub-Saharan Africa (SSA) shown Figure @ref(fig:map). map Sub-Saharan Africa countries experienced cholera outbreak past 5 10 years highlighted green.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/04-model-description.html","id":"transmission-dynamics","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Model description","what":"Transmission dynamics","title":"","text":"model metapopulation structure familiar compartments Susceptible, Infected, Recovered individuals SIRS dynamics. model also contains compartments vaccinated individuals (V) Water & environment based transmission (W) refer SVIWRS. diagram SVIWRS (Susceptible-Vaccinated-Infected-Water/environmental-Recovered-Susceptible) model shows model compartments circles rate parameters displayed. primary data sources model fit shown square nodes (Vaccination data, reported cases deaths). SVIWRS metapopulation model, shown Figure @ref(fig:diagram), governed following difference equations: \\[\\begin{equation} \\begin{aligned} S_{j,t+1} &= b_j N_{jt} + S_{jt} - \\phi \\nu_{jt} S_{jt} + \\omega V_{jt} - \\Lambda_{j,t+1} - \\Psi_{j,t+1} + \\varepsilon R_{jt} - d_j S_{jt}\\\\[11pt] V_{j,t+1} &= V_{jt} + \\phi \\nu_{jt} S_{jt} - \\omega V_{jt} - d_j V_{jt}\\\\[11pt] I_{j,t+1} &= I_{jt} + \\Lambda_{j,t+1} + \\Psi_{j,t+1} - \\gamma I_{jt} - \\mu \\sigma I_{jt} - d_j I_{jt}\\\\[11pt] W_{j,t+1} &= W_{jt} + \\zeta I_{jt} - \\delta_{jt} W_{jt}\\\\[11pt] R_{j,t+1} &= R_{jt} + \\gamma I_{jt} - \\varepsilon R_{jt} - d_j R_{jt}\\\\[11pt] \\end{aligned} (\\#eq:system) \\end{equation}\\] descriptions parameters Equation @ref(eq:system), see Table (@ref(tab:params)). Transmission dynamics driven two force infection terms, \\(\\Lambda_{jt}\\) \\(\\Psi_{jt}\\). force infection due human--human (\\(\\Lambda_{jt}\\)) : \\[\\begin{equation} \\begin{aligned} \\Lambda_{j,t+1} &= \\frac{ \\beta_{jt}^{\\text{hum}} \\Big(\\big(S_{jt}(1-\\tau_{j})\\big)  \\big(I_{jt}(1-\\tau_{j}) + \\sum_{\\forall \\= j} (\\pi_{ij}\\tau_iI_{}) \\big)\\Big)^\\alpha}{N_{jt}}.\\\\[11pt] \\end{aligned} (\\#eq:foi-human) \\end{equation}\\] \\(\\beta_{jt}^{\\text{hum}}\\) rate human--human transmission. Movement within among metapopulations governed \\(\\tau_i\\), probability departing origin location \\(\\), \\(\\pi_{ij}\\) relative probability travel origin \\(\\) destination \\(j\\) (see section spatial dynamics). include environmental effects, force infection due environment--human transmission (\\(\\Psi_{jt}\\)) defined : \\[\\begin{equation} \\begin{aligned} \\Psi_{j,t+1} &= \\frac{\\beta_{jt}^{\\text{env}} \\big(S_{jt}(1-\\tau_{j})\\big) (1-\\theta_j) W_{jt}}{\\kappa+W_{jt}},\\\\[11pt] \\end{aligned} (\\#eq:foi-environment) \\end{equation}\\] \\(\\beta_{jt}^{\\text{env}}\\) rate environment--human transmission \\(\\theta_j\\) proportion population location \\(j\\) least basic access Water, Sanitation, Hygiene (WASH). environmental compartment model also scaled concentration (cells per mL) V. cholerae required 50% probability infection Fung 2014. See section environmental transmission water/environment compartment climatic drivers transmission. Note model processes stochastic. Transition rates converted probabilities commonly used formula \\(p(t) = 1-e^{-rt}\\) (see Ross 2007), integer quantities moved model compartments time step according binomial process like example recovery infected individuals (\\(\\gamma I_{jt}\\)): \\[\\begin{equation} \\frac{\\partial R}{\\partial t} \\sim \\text{Binom}(I_{jt}, 1-\\exp(-\\gamma)) (\\#eq:stoch) \\end{equation}\\]","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/04-model-description.html","id":"seasonality","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Model description","what":"Seasonality","title":"","text":"Cholera transmission seasonal typically associated rainy season, transmission rate terms \\(\\beta_{jt}^{\\text{*}}\\) temporally forced. human--human transmission used truncated sine-cosine form Fourier series two harmonic features flexibility capture seasonal transmission dynamics driven extended rainy seasons /biannual trends: \\[\\begin{equation} \\beta_{jt}^{\\text{hum}} = \\beta_{j0}^{\\text{hum}} + a_1 \\cos\\left(\\frac{2\\pi t}{p}\\right) + b_1 \\sin\\left(\\frac{2\\pi t}{p}\\right) + a_2 \\cos\\left(\\frac{4\\pi t}{p}\\right) + b_2 \\sin\\left(\\frac{4\\pi t}{p}\\right) (\\#eq:beta1) \\end{equation}\\] , \\(\\beta_{j0}^{\\text{hum}}\\) mean human--human transmission rate location \\(j\\) time steps. Seasonal dynamics determined parameters \\(a_1\\), \\(b_1\\) \\(a_2\\), \\(b_2\\) gives amplitude first second waves respectively. periodic cycle \\(p\\) 52, function controls temporal variation \\(\\beta_{jt}^{\\text{hum}}\\) 52 weeks year. example temporal distribution human--human transmission rate across 52 weeks year given cosine wave function. wave function fitted country designed align rainy season indicated shaded region figure. estimated parameters Fourier series (\\(a_1\\), \\(b_1\\), \\(a_2\\), \\(b_2\\)) using Levenberg–Marquardt algorithm minpack.lm R library. Given lack reported cholera case data many countries SSA association cholera transmission rainy season, leveraged seasonal precipitation data help fit Fourier wave function countries. first gathered weekly precipitation values 1994 2024 30 uniformly distributed points within country Open-Meteo Historical Weather Data API. fit Fourier series weekly precipitation data used parameters starting values fitting model sparse cholera case data. Example grid 30 uniformly distributed points within Mozambique (). scatterplot shows weekly summed precipitation values 30 grid points cholera cases plotted scale Z-Score shows variance around mean terms standard deviation. Fitted Fourier series fucntions shown blue (fit precipitation data) red (fit cholera case data) lines. countries reported case data, inferred seasonal dynamics using fitted wave function neighboring country available case data. selected neighbor chosen cluster countries (grouped hierarchically four clusters based precipitation seasonality using Ward’s method; see Figure @ref(fig:seasonal-cluster)) highest correlation seasonal precipitation country lacking case data. rare event country reported case data found within seasonal cluster, expanded search 10 nearest neighbors continued expanding adding next nearest neighbor match found.  Map showing clustering African countries based seasonal precipitation patterns (1994-2024). Countries colored according cluster assignments, identified using hierarchical clustering. B) Fourier series fitted weekly precipitation country. line plot shows seasonal pattern countries within given cluster. Clusteres used infer seasonal transmission dynamics countries reported cholera cases. Using model fitting methods described , cluster-based approach inferring seasonal Fourier series pattern countries without reported cholera cases, modeled seasonal dynamics 41 countries MOSAIC framework. dynamics visualized Figure @ref(fig:seasonal-), corresponding Fourier model coefficients presented Table @ref(tab:seasonal-table). Seasonal transmission patterns countries modeled MOSAIC modeled truncated Fourier series Equation @ref(eq:beta1). Blues lines give Fourier series model fits precipitation (1994-2024) red lines give models fits reported cholera cases (2023-2024). countries reported case data available, Fourier model inferred nearest country similar seasonal precipitation patterns determined hierarchical clustering. Countries inferred case data neighboring locations annotated red. X-axis represents weeks year (1-52), Y-axis shows Z-score weekly precipitation cholera cases. Estimated coefficients truncated Fourier model Equation @ref(eq:beta1) fit countries reported cholera cases. Model fits shown Figure @ref(fig:seasonal-).","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/04-model-description.html","id":"environmental-transmission","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Model description","what":"Environmental transmission","title":"","text":"Environmental transmission critical factor cholera spread consists several key components: rate infected individuals shed V. cholerae environment, pathogen’s survival rate environmental conditions, overall suitability environment sustaining bacteria time.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/04-model-description.html","id":"climate-driven-transmission","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Model description > Environmental transmission","what":"Climate-driven transmission","title":"","text":"capture impacts climate-drivers cholera transmission, included parameter \\(\\psi_{jt}\\), represents current state environmental suitability respect : ) survival time V. cholerae environment , ii) rate environment--human transmission contributes overall force infection. \\[\\begin{equation} \\beta_{jt}^{\\text{env}} = \\beta_{j0}^{\\text{env}} \\Bigg(1 + \\frac{\\psi_{jt}-\\bar\\psi_j}{\\bar\\psi_j} \\Bigg) \\quad \\text{} \\quad \\bar\\psi_j = \\frac{1}{T} \\sum_{t=1}^{T} \\psi_{jt} (\\#eq:beta2) \\end{equation}\\] formulation effectively scales base environmental transmission rate \\(\\beta_{jt}^{\\text{env}}\\) varies time according climatically driven model suitability. Note , unlike cosine wave function \\(\\beta_{jt}^{\\text{hum}}\\), temporal term can increase decrease time following multi-annual cycles. [Fig: Example temporal forcing environment--human transmission] Environmental suitability (\\(\\psi_{jt}\\)) also impacts survival rate V. cholerae environment (\\(\\delta_{jt}\\)) form: \\[\\begin{equation} \\delta_{jt} = \\delta_{\\text{min}} + \\psi_{jt} \\times (\\delta_{\\text{max}} - \\delta_{\\text{min}}) (\\#eq:delta) \\end{equation}\\] normalizes variance suitability parameter bounded within minimum (\\(\\delta_{\\text{min}}\\)) maximum (\\(\\delta_{\\text{max}}\\)) survival times V. cholerae. Relationship environmental suitability (\\(\\psi_{jt}\\)) rate V. cholerae decay environment (\\(\\delta_j\\)). green line shows mildest penalty V. cholerae survival, survival environment \\(1/\\delta_{\\text{min}}\\) = 3 days suitability = 0 \\(1/\\delta_{\\text{max}}\\) = 90 days suitability = 1.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/04-model-description.html","id":"modeling-suitability","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Model description > Environmental transmission","what":"Modeling suitability","title":"","text":"environmental suitability (\\(\\psi_{jt}\\)) V. cholerae modeled time series location, using covariates include environmental factors, past present climate measures, severe weather events, large-scale regional climate drivers. factors influenced climate change, source data projects covariate future different climate change scenarios. Environmental suitability, \\(\\psi_{jt}\\), generally defined : \\[ \\psi_{jt} = f(\\text{temperature, precipitation, humidity, wind speed, soil moisture}) \\] function \\(f(\\cdot)\\) can modeled using various approaches, including Generalized Linear Models (GLMs), Generalized Additive Models (GAMs), Boosted Regression Trees (BRTs), machine learning methods Recurrent Neural Networks (RNNs) Long Short-Term Memory Networks (LSTMs). simpler approach might involve Bayesian variable selection using BAS R package. model fitted available data, projections suitability location. Implementing rolling-window validation across time series help assess model performance. model can directly fitted reported case counts converted binary threshold, depending analysis needs. primary goal explain portion variance reported case counts proxy environmental suitability. Covariates include historical climate variables predicted climate change scenarios. example, MRI-AGCM3-2-S EC_Earth3P_HR models provide weather variables ~20km resolution, including temperature, relative humidity, wind, precipitation, solar radiation, cloud cover, soil moisture. covariates time-lagged short-term cumulative versions. initial version model likely use data OpenMeteo Historical Weather Data API. Additional data sources integrated subsequent versions suitability model. instance, flood cyclone data incorporated later, though initial version model. also seek data ENSO (El Niño, Neutral, La Niña) Indian Ocean sea surface temperature index. Open-source projections variables near future (months year two) likely available.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/04-model-description.html","id":"shedding","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Model description > Environmental transmission","what":"Shedding","title":"","text":"rate infected individuals shed V. cholerae environment (\\(\\zeta\\)) critical factor influencing cholera transmission. Shedding rates can vary widely depending severity infection, immune response individual, environmental factors. According Fung 2014, shedding rate estimated range 0.01 10 cells per mL per person per day. studies support findings, indicating shedding rates can indeed fluctuate significantly. instance, Nelson et al (2009) note , depending phase infection, individuals can shed \\(10^3\\) (asymptomatic cases) \\(10^12\\) (severe cases) V. cholerae cells per gram stool. Future version model may attempt capture nuances shedding dynamics, make simplifying assumption shedding constant across infected individuals wide range variability prior distributional assumptions: \\[ \\zeta \\sim \\text{Uniform}(0.01, 10). \\]","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/04-model-description.html","id":"water-sanitation-and-hygiene-wash","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Model description > Environmental transmission","what":"WAter, Sanitation, and Hygiene (WASH)","title":"","text":"Since V. cholerae transmitted fecal contamination water consumables, level exposure contaminated substrates significantly impacts transmission rates. Interventions involving Water, Sanitation, Hygiene (WASH) long first line defense reducing cholera transmission, context, WASH variables can serve proxy rate contact environmental risk factors. MOSAIC model, WASH variables incorporated mechanistically, allowing intervention scenarios include changes WASH. However, necessary distill available WASH variables single parameter represents WASH-determined contact rate contaminated substrates location \\(j\\), define \\(\\theta_j\\). parameterize \\(\\theta_j\\), calculated weighted mean 8 WASH variables Sikder et al 2023 originally modeled Local Burden Disease WaSH Collaborators 2020. 8 WASH variables (listed Table @ref(tab:wash-weights)) provide population-weighted measures proportion population either: ) access WASH resources (e.g., piped water, septic sewer sanitation), ii) exposed risk factors (e.g. surface water, open defecation). risk associated WASH variables, used complement (\\(1-\\text{value}\\)) give proportion population exposed risk factor. used optim function R L-BFGS-B algorithm estimate set optimal weights (Table @ref(tab:wash-weights)) maximize correlation weighted mean 8 WASH variables reported cholera incidence per 1000 population across 40 SSA countries 2000 2016. optimal weighted mean correlation coefficient \\(r =\\) -0.33 (-0.51 -0.09 95% CI) higher basic mean correlations provided individual WASH variables (see Figure @ref(fig:wash-incidence)). weighted mean provides single variable 0 1 represents overall proportion population access WASH /exposed environmental risk factors. Thus, WASH-mediated contact rate sources environmental transmission represented (\\(1-\\theta_j\\)) environment--human force infection (\\(\\Psi_{jt}\\)). Values \\(\\theta_j\\) countries shown Figure @ref(fig:wash-country). Table optimized weights used calculate single mean WASH index countries. Relationship WASH variables cholera incidences. optimized weighted mean WASH variables AFRO countries","code":""},{"path":[]},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/04-model-description.html","id":"immunity-from-vaccination","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Model description > Immune dynamics","what":"Immunity from vaccination","title":"","text":"impacts Oral Cholera Vaccine (OCV) campaigns incorporated model Vaccinated compartment (V). rate individuals effectively vaccinated defined \\(\\phi\\nu_tS_{jt}\\), \\(S_{jt}\\) available number susceptible individuals location \\(j\\) time \\(t\\), \\(\\nu_t\\) number OCV doses administered time \\(t\\) \\(\\phi\\) estimated vaccine effectiveness. Note just one vaccinated compartment time, though future model versions may include \\(V_1\\) \\(V_2\\) compartments explore two dose vaccination strategies emulate complex waning patterns. vaccination rate \\(\\nu_t\\) estimated quantity. Rather, directly defined reported number OCV doses administered OCV dashboard : https://www..int/groups/icg/cholera. \\[ \\nu_t := \\text{Reported rate OCV administration}          \\] evidence waning immunity comes 4 cohort studies (Table @ref(tab:effectiveness-papers)) Bangladesh (Qadri et al 2016 2018), South Sudan (Azman et al 2016), Democratic Republic Congo (Malembaka et al 2024). Summary Effectiveness Data estimated vaccine effectiveness waning immunity fitting exponential decay model reported effectiveness one dose OCV studies using following formulation: \\[\\begin{equation} \\text{Proportion immune}\\ t \\ \\text{days vaccination} = \\phi \\times (1 - \\omega) ^ {t-t_{\\text{vaccination}}} (\\#eq:omega) \\end{equation}\\] \\(\\phi\\) effectiveness one dose OCV, based specification, also initial proportion immune directly vaccination. decay rate parameter \\(\\omega\\) rate initial vaccine derived immunity decays per day post vaccination, \\(t\\) \\(t_{\\text{vaccination}}\\) time (days) function evaluated time vaccination respectively. fitted model data cohort studies shown Table (@ref(tab:effectiveness-papers)) found \\(\\omega = 0.00057\\) (\\(0-0.0019\\) 95% CI), gives mean estimate 4.8 years vaccine derived immune duration unreasonably large confidence intervals (1.4 years infinite immunity). However, point estimate 4.8 years consistent anecdotes one dose OCV effective least 3 years. wide confidence intervals likely due wide range reported estimates proportion immune short duration 7–90 days range (Azman et al 2016 Qadri et al 2016). Therefore, chose use point estimate \\(\\omega\\) incorporate uncertainty based initial proportion immune (.e. vaccine effectiveness \\(\\phi\\)) shortly vaccination. Using decay model Equation @ref(eq:omega) estimated \\(\\phi\\) \\(0.64\\) (\\(0.32-0.96\\) 95% CI). fit Beta distribution quantiles \\(\\phi\\) minimizing sums squares using Nelder-Mead optimization algorithm render following distribution (shown Figure @ref(fig:effectiveness)B): \\[\\begin{equation} \\phi \\sim \\text{Beta}(4.57, 2.41). (\\#eq:effectiveness) \\end{equation}\\] vaccine effectiveness","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/04-model-description.html","id":"immunity-from-natural-infection","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Model description > Immune dynamics","what":"Immunity from natural infection","title":"","text":"duration immunity natural infection likely longer lasting vaccination OCV (especially given current one dose strategy). SIR-type models, rate individuals leave Recovered compartment governed immune decay parameter \\(\\varepsilon\\). estimated durability immunity natural infection based two cohort studies fit following exponential decay model estimate rate immunity decay time: \\[ \\text{Proportion immune}\\ t \\ \\text{days infection} = 0.99 \\times (1 - \\varepsilon) ^ {t-t_{\\text{infection}}} \\] make necessary simplifying assumption within 0–90 days natural infection V. cholerae, individuals 95–99% immune. fit model reported data Ali et al (2011) Clemens et al (1991) (see Table @ref(tab:immunity-sources)). Sources duration immunity fro natural infection. estimated mean immune decay \\(\\bar\\varepsilon = 3.9 \\times 10^{-4}\\) (\\(1.7 \\times 10^{-4}-1.03 \\times 10^{-3}\\) 95% CI) equivalent immune duration \\(7.21\\) years (\\(2.66-16.1\\) years 95% CI) shown Figure @ref(fig:immune-decay). slightly longer previous modeling work estimating duration immunity ~5 years (King et al 2008). Uncertainty around \\(\\varepsilon\\) model represented Log-Normal distribution shown Figure @ref(fig:immune-decay)B: \\[ \\varepsilon \\sim \\text{Lognormal}(\\bar\\varepsilon+\\frac{\\sigma^2}{2}, 0.25) \\] duration immunity natural infection V. cholerae.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/04-model-description.html","id":"spatial-dynamics","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Model description","what":"Spatial dynamics","title":"","text":"parameters model diagram Figure @ref(fig:diagram) \\(jt\\) subscript denote spatial structure model. country modeled independent metapopulation connected others via spatial force infection \\(\\Lambda_{jt}\\) moves contagion among metapopulations according connectivity provided parameters \\(\\tau_i\\) (probability departure) \\(\\pi_{ij}\\) (probability diffusion destination \\(j\\)). parameters estimated using departure-diffusion model fitted average weekly air traffic volume 41 countries included MOSAIC framework (Figure @ref(fig:mobility-data)). average number air passengers per week 2017 among countries.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/04-model-description.html","id":"human-mobility-model","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Model description > Spatial dynamics","what":"Human mobility model","title":"","text":"departure-diffusion model estimates diagonal -diagonal elements mobility matrix (\\(M\\)) separately combines using conditional probability rules. model first estimates probability travel outside origin location \\(\\)—departure process—distribution travel origin location \\(\\) normalizing connectivity values across \\(j\\) destinations—diffusion process. values \\(\\pi_{ij}\\) sum unity along row, diagonal included, indicating relative quantity. say, \\(\\pi_{ij}\\) gives probability going \\(\\) \\(j\\) given travel outside origin \\(\\) occurs. Therefore, can use basic conditional probability rules define travel routes diagonal elements (trips made within origin \\(\\)) \\[ \\Pr( \\neg \\text{depart}_i ) =  1 - \\tau_i \\] -diagonal elements (trips made outside origin \\(\\)) \\[ \\Pr( \\text{depart}_i, \\text{diffuse}_{\\rightarrow j}) = \\Pr( \\text{diffuse}_{\\rightarrow j} \\mid \\text{depart}_i ) \\Pr(\\text{depart}_i ) = \\pi_{ij} \\tau_i. \\] expected mean number trips route \\(\\rightarrow j\\) : \\[\\begin{equation} M_{ij} = \\begin{cases} \\theta N_i (1-\\tau_i) \\ & \\text{} \\ = j \\\\ \\theta N_i \\tau_i \\pi_{ij} \\ & \\text{} \\ \\ne j. \\end{cases} (\\#eq:M) \\end{equation}\\] , \\(\\theta\\) proportionality constant representing overall number trips per person origin population size \\(N_i\\), \\(\\tau_i\\) probability leaving origin \\(\\), \\(\\pi_{ij}\\) probability travel destination \\(j\\) given travel outside origin \\(\\) occurs.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/04-model-description.html","id":"estimating-the-departure-process","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Model description > Spatial dynamics","what":"Estimating the departure process","title":"","text":"probability travel outside origin estimated location \\(\\) give location-specific departure probability \\(\\tau_i\\). \\[ \\tau_i \\sim \\text{Beta}(1+s, 1+r) \\] Binomial probabilities origin \\(\\tau_i\\) drawn Beta distributed prior shape (\\(s\\)) rate (\\(r\\)) parameters. \\[ \\begin{aligned} s &\\sim \\text{Gamma}(0.01, 0.01)\\\\ r &\\sim \\text{Gamma}(0.01, 0.01) \\end{aligned} \\]","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/04-model-description.html","id":"estimating-the-diffusion-process","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Model description > Spatial dynamics","what":"Estimating the diffusion process","title":"","text":"use normalized formulation power law gravity model defined diffusion process, probability travelling destination \\(j\\) given travel outside origin \\(\\) (\\(\\pi_{ij}\\)) defined : \\[\\begin{equation} \\pi_{ij} = \\frac{ N_j^\\omega d_{ij}^{-\\gamma} }{ \\sum\\limits_{\\forall j \\ne } N_j^\\omega d_{ij}^{-\\gamma} } (\\#eq:gravity) \\end{equation}\\] , \\(\\omega\\) scales attractive force \\(j\\) destination based population size \\(N_j\\). kernel function \\(d_{ij}^{-\\gamma}\\) serves penalty proportion travel \\(\\) \\(j\\) based distance. Prior distributions diffusion model parameters defined : \\[ \\begin{aligned} \\omega &\\sim \\text{Gamma}(1, 1)\\\\ \\gamma &\\sim \\text{Gamma}(1, 1) \\end{aligned} \\] models \\(\\tau_i\\) \\(\\pi_{ij}\\) fitted air traffic data OAG using mobility R package (Giles 2020). Estimates mobility model parameters shown Figures @ref(fig:mobility-departure) @ref(fig:mobility-diffusion). estimated weekly probability travel outside origin location \\(\\tau_i\\) 95% confidence intervals shown panel population mean indicated red dashed line. Panel B shows estimated total number travelers leaving origin \\(\\) week. diffusion process \\(\\pi_{ij}\\) gives estimated probability travel origin \\(\\) destination \\(j\\) given travel outside origin \\(\\) occurred.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/04-model-description.html","id":"the-probability-of-spatial-transmission","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Model description > Spatial dynamics","what":"The probability of spatial transmission","title":"","text":"likelihood introductions cholera disparate locations major concern cholera outbreaks. However, can difficult characterize given endemic dynamics patterns human movement. include measures spatial heterogeneity first simple importation probability based connectivity possibility incoming infections. basic probability transmission origin \\(\\) particular destination \\(j\\) time \\(t\\) defined : \\[\\begin{equation} p(,j,t) = 1 - e^{-\\beta_{jt}^{\\text{hum}} (((1-\\tau_j)S_{jt})/N_{jt}) \\pi_{ij}\\tau_iI_{}} (\\#eq:prob) \\end{equation}\\]","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/04-model-description.html","id":"the-spatial-hazard","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Model description > Spatial dynamics","what":"The spatial hazard","title":"","text":"Although concerned endemic dynamics , likely periods time early rainy season cholera cases rate transmission low enough spatial spread resemble epidemic dynamics time. times periods, can estimate arrival time contagion location cases yet reported. estimating spatial hazard transmission: \\[\\begin{equation} h(j,t) = \\frac{ \\beta_{jt}^{\\text{hum}} \\Big(1 - \\exp\\big(-((1-\\tau_j)S_{jt}/N_{jt}) \\sum_{\\forall \\= j} \\pi_{ij}\\tau_i (I_{}/N_{}) \\big) \\Big) }{ 1/\\big(1 + \\beta_{jt}^{\\text{hum}} (1-\\tau_j)S_{jt}\\big) }. (\\#eq:hazard) \\end{equation}\\] normalizing give waiting time distribution locations: \\[\\begin{equation} w(j,t) = h(j,T) \\prod_{t=1}^{T-1}1-h(j,t). (\\#eq:waiting) \\end{equation}\\]","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/04-model-description.html","id":"coupling-among-locations","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Model description > Spatial dynamics","what":"Coupling among locations","title":"","text":"Another measure spatial heterogeneity quantify coupling disease dynamics among metapopulations using correlation coefficient. , use definition spatial correlation locations \\(\\) \\(j\\) \\(C_{ij}\\) described Keeling Rohani (2002), gives measure similar infection dynamics locations. \\[\\begin{equation} C_{ij} = \\frac{ ( y_{} - \\bar{y}_i )( y_{jt} - \\bar{y}_j ) }{ \\sqrt{\\text{var}(y_i) \\text{var}(y_j)} } (\\#eq:correlation) \\end{equation}\\] \\(y_{} = I_{}/N_i\\) \\(y_{jt} = I_{jt}/N_j\\). Mean prevalence location \\(\\bar{y_i} = \\frac{1}{T} \\sum_{t=1}^{T} y_{}\\) \\(\\bar{y_j} = \\frac{1}{T} \\sum_{t=1}^{T} y_{jt}\\).","code":""},{"path":[]},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/04-model-description.html","id":"rate-of-symptomatic-infection","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Model description > The observation process","what":"Rate of symptomatic infection","title":"","text":"presentation infection V. cholerae can extremely variable. severity infection depends many factors amount infectious dose, age host, level immunity host either vaccination previous infection, naivety particular strain V. cholerae. Additional circumstantial factors nutritional status overall pathogen burden may also impact infection severity. population level, observed proportion infections symptomatic also dependent endemicity cholera region. Highly endemic areas (e.g. parts Bangladesh; Hegde et al 2024) may low proportion symptomatic infections due many previous exposures. Inversely, populations largely naive V. cholerae exhibit relatively higher proportion symptomatic infections (e.g. Haiti; Finger et al 2024). Accounting nuances first version model possible, can past studies contain information can help set sensible bounds definition proportion infections symptomatic (\\(\\sigma\\)). compiled short list studies done sero-surveys cohort studies assess likelihood symptomatic infections different locations displayed results Table (@ref(tab:symptomatic-table)). provide reasonably informed prior proportion infections symptomatic, calculated combine mean confidence intervals studies Table @ref(tab:symptomatic-table) fit Beta distribution corresponds quantiles using least-squares Nelder-Mead algorithm. resulting prior distribution symptomatic proportion \\(\\sigma\\) : \\[\\begin{equation} \\sigma \\sim \\text{Beta}(4.30, 13.51) \\end{equation}\\] Summary Studies Cholera Immunity prior distribution \\(\\sigma\\) plotted Figure @ref(fig:symptomatic-fig)reported values proportion symptomatic previous studies shown @ref(fig:symptomatic-fig)B. Proportion infections symptomatic.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/04-model-description.html","id":"suspected-cases","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Model description > The observation process","what":"Suspected cases","title":"","text":"clinical presentation diarrheal diseases often similar across various pathogens, can lead systematic biases reported number cholera cases. anticipated number suspected cholera cases related actual number infections factor \\(1/\\rho\\), \\(\\rho\\) represents proportion suspected cases true infections. adjust bias, use estimates meta-analysis Weins et al. (2023), suggests suspected cholera cases outnumber true infections approximately 2 1, mean across studies indicating 52% (24-80% 95% CI) suspected cases actual cholera infections. higher estimate reported ourbreak settings (78%, 40-99% 95% CI). account variability estimate, fit Beta distribution reported quantiles using least squares approach Nelder-Mead algorithm, resulting prior distribution shown Figure @ref(fig:rho)B: \\[\\begin{equation} \\rho \\sim \\text{Beta}(4.79, 1.53). \\end{equation}\\] Proportion suspected cholera cases true infections. Panel shows ‘low’ assumption estimates across settings: \\(\\rho \\sim \\text{Beta}(5.43, 5.01)\\). Panel B shows ‘high’ assumption estimate reflects high-quality studies outbreaks: \\(\\rho \\sim \\text{Beta}(4.79, 1.53)\\)","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/04-model-description.html","id":"case-fatality-rate","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Model description > The observation process","what":"Case fatality rate","title":"","text":"Case Fatality Rate (CFR) among symptomatic infections calculated using reported cases deaths data January 2021 August 2024. data collated various issues Weekly Epidemiological Record Global Cholera Acute Watery Diarrhea (AWD) Dashboard (see Data section) provide annual aggregations reported cholera cases deaths. used Binomial exact test (binom.test R) calculate mean probability number deaths (successes) given number reported cases (sample size), Clopper-Pearson method calculating binomial confidence intervals. fit Beta distributions mean CFR 95% confidence intervals calculated country using least squares Nelder-Mead algorithm give distributional uncertainty around CFR estimate country (\\(\\mu_j\\)). \\[ \\mu_j \\sim \\text{Beta}(s_{1,j}, s_{2,j}) \\] \\(s_{1,}\\) \\(s_{2,j}\\) two positive shape parameters Beta distribution estimated destination \\(j\\). definition \\(\\mu_j\\) CFR reported cases subset total number infections. Therefore, infer total number deaths attributable cholera infection, assume CFR observed cases proportionally equivalent CFR cases calculate total deaths \\(D\\) follows: \\[\\begin{equation} \\begin{aligned} \\text{CFR}_{\\text{observed}} &= \\text{CFR}_{\\text{total}}\\\\ \\\\[3pt] \\frac{[\\text{observed deaths}]}{[\\text{observed cases}]} &= \\frac{[\\text{total deaths}]}{[\\text{infections}]}\\\\ \\\\[3pt] \\text{total deaths} &= \\frac{[\\text{observed deaths}] \\times [\\text{true infections}]}{[\\text{observed cases}]}\\\\ \\\\[3pt] D_{jt} &= \\frac{ [\\sigma\\rho\\mu_j I_{jt}] \\times [I_{jt}] }{ [\\sigma\\rho I_{jt}] } \\end{aligned} \\end{equation}\\] CFR Values Beta Shape Parameters AFRO Countries Case Fatality Rate (CFR) Total Cases Country AFRO Region 2014 2024. Panel : Case Fatality Ratio (CFR) 95% confidence intervals. Panel B: total number cholera cases. AFRO Region highlighted black, countries less 3/0.2 = 150 total reported cases assigned mean CFR AFRO. Beta distributions overall Case Fatality Rate (CFR) 2014 2024. Examples show overall CFR AFRO region (2%) black, Congo highest CFR (7%) red, South Sudan lowest CFR (0.1%) blue.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/04-model-description.html","id":"demographics","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Model description","what":"Demographics","title":"","text":"model includes basic demographic change using reported birth death rates \\(j\\) countries, \\(b_j\\) \\(d_j\\) respectively. rates static defined United Nations Department Economic Social Affairs Population Division World Population Prospects 2024. Values \\(b_j\\) \\(d_j\\) derived crude rates converted birth rate per day death rate per day (shown Table @ref(tab:demographics)). Demographic AFRO countries 2023. Data include: total population January 1, 2023, daily birth rate, daily death rate. Values calculate crude birth death rates UN World Population Prospects 2024.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/04-model-description.html","id":"the-reproductive-number","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Model description","what":"The reproductive number","title":"","text":"reproductive number common metric epidemic growth represents average number secondary cases generated primary case specific time epidemic. track \\(R\\) changes time estimating instantaneous reproductive number \\(R_t\\) described Cori et al 2013. track \\(R_t\\) across metapopulations model give \\(R_{jt}\\) using following formula: \\[\\begin{equation} R_{jt} = \\frac{I_{jt}}{\\sum_{\\Delta t=1}^{t} g(\\Delta t) I_{j,t-\\Delta t}} (\\#eq:R) \\end{equation}\\] \\(I_{jt}\\) number new infections destination \\(j\\) time \\(t\\), \\(g(\\Delta t)\\) represents probability value generation time distribution cholera. accomplished using weighed sum denominator highly influenced generation time distribution.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/04-model-description.html","id":"the-generation-time-distribution","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Model description > The reproductive number","what":"The generation time distribution","title":"","text":"generation time distribution gives time individual infected infect subsequent individuals. parameterized quantity using Gamma distribution mean 5 days: \\[\\begin{equation} g(\\cdot) \\sim \\text{Gamma}(0.5, 0.1). (\\#eq:generation-time) \\end{equation}\\] , shape=0.5, rate=0.1, mean given shape/rate. Previous studies use mean 5 days (Kahn et al 2020 Azman 2016), however mean 3, 5, 7, 10 days may admissible (Azman 2012). generation time Generation Time Weeks","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/04-model-description.html","id":"initial-conditions","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Model description","what":"Initial conditions","title":"","text":"Since first version model begin Jan 2023 (take advantage available weekly data), initial conditions surrounding population immunity must estimated. set initial conditions, use historical data find total number reported cases location previous X years, multiply \\(1/\\sigma\\) estimate total infections symptomatic cases reported, adjust based waning immunity. also sum total number vaccinations past X years adjust vaccine efficacy \\(\\phi\\) waning immunity vaccination \\(\\omega\\). total number infected? reported cases… back symptomatic asymptomatic Total number immune due natural infections past X years total number immune due past vaccinations X years Use deconvolution based immune decay estimated vaccine section","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/04-model-description.html","id":"model-calibration","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Model description","what":"Model calibration","title":"","text":"model calibrated using Latin hypercube sampling hyper-parameters model likelihoods fit incidence deaths. important challenge flexibly fitting data often missing available aggregated forms. [Fig: different spatial temporal scales available data]","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/04-model-description.html","id":"caveats","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Model description","what":"Caveats","title":"","text":"Simplest model start. Easier initial spatial structure minimum additional compartments calibrate available data (vaccination, cases, deaths). Country level aggregations. First generation data 2023/24… Assumes vaccinating susceptible individuals. climate, summarizing whole country.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/04-model-description.html","id":"table-of-parameters","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Model description","what":"Table of parameters","title":"","text":"Descriptions model parameters along prior distributions sources applicable.","code":""},{"path":[]},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/05-scenarios.html","id":"scenarios","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"","what":"Scenarios","title":"","text":"key aim MOSAIC model provide near-term forecasts cholera transmission Sub-Saharan Africa (SSA) using current data available. However, MOSAIC just forecasting tool; dynamic model designed explore various scenarios influence critical factors vaccination, environmental conditions, Water, Sanitation, Hygiene (WASH) interventions.","code":""},{"path":[]},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/05-scenarios.html","id":"spatial-and-temporal-strategies","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Scenarios > Vaccination","what":"Spatial and Temporal Strategies","title":"","text":"Understanding spatial temporal distribution cholera vaccination efforts crucial effective outbreak control. Key resources include: Stockpile Status: availability oral cholera vaccine emergency stockpiles can tracked UNICEF’s Emergency Stockpile Availability. OCV Dashboard: dashboard (link) provides insights deployment oral cholera vaccines (OCV) across different regions.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/05-scenarios.html","id":"reactive-vaccination","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Scenarios > Vaccination","what":"Reactive Vaccination","title":"","text":"timing logistics reactive vaccination campaigns critical controlling ongoing outbreaks. Relevant resources include: Recommended Timing: Guidelines recommendations timing reactive OCV campaigns available (link). Requests Delay Time Distributions: Information vaccine request processes distribution delays vaccine deployment can accessed GTFCC OCV Dashboard (link).","code":""},{"path":[]},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/05-scenarios.html","id":"severe-weather-events","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Scenarios > Impacts of Climate Change","what":"Severe Weather Events","title":"","text":"Projections climate shocks, including frequency severity cyclones floods, essential modeling future impacts climate change cholera transmission. Key references include: Chen Chavas 2020: study cyclone season dynamics climate change scenarios (link). Sparks Toumi 2024: Research projected flood frequencies due climate change (link). Switzer et al. 2023: analysis climate shock impacts cholera outbreaks (link).","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/05-scenarios.html","id":"long-term-trends","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"Scenarios > Impacts of Climate Change","what":"Long-Term Trends","title":"","text":"Long-term trends weather variables various climate change scenarios can explored using following resource: Weather Variables Climate Change: OpenMeteo Climate API provides access projected weather data different climate change scenarios (link).","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/06-code.html","id":"usage","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"","what":"Usage","title":"","text":"open-source code used run MOSAIC currently development presented future.","code":""},{"path":[]},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/07-news.html","id":"past-versions-of-mosaic","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"News","what":"Past versions of MOSAIC","title":"","text":"Current future planned model versions brief descriptions.","code":""},{"path":[]},{"path":[]},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/index.html","id":"welcome","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"","what":"Welcome","title":"MOSAIC: a spatial model of endemic cholera","text":"Welcome Metapopulation Outbreak Simulation Agent-based Implementation Cholera (MOSAIC). MOSAIC framework simulates transmission dynamics cholera Sub-Saharan Africa (SSA) provides tools understand impact interventions, vaccination, well large-scale drivers like climate change. MOSAIC built using Light-agent Spatial Model ERadication (LASER) platform, site serves documentation model’s methods associated analyses. Please note MOSAIC currently development, content may change regularly. sharing increase visibility welcome feedback aspect model.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/index.html","id":"contact","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"","what":"Contact","title":"MOSAIC: a spatial model of endemic cholera","text":"MOSAIC developed team researchers Institute Disease Modeling (IDM) dedicated developing modeling methods software tools help decision-makers understand respond infectious disease outbreaks. website currently maintained John Giles (@gilesjohnr). general questions, contact John Giles (john.giles@gatesfoundation.org), Jillian Gauld (jillian.gauld@gatesfoundation.org), /Rajiv Sodhi (rajiv.sodhi@gatesfoundation.org).","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/MOSAIC/MOSAIC-docs/index.html","id":"funding","dir":"Articles > MOSAIC > MOSAIC-docs","previous_headings":"","what":"Funding","title":"MOSAIC: a spatial model of endemic cholera","text":"work developed Institute Disease Modeling support funded research grants made Bill & Melinda Gates Foundation.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/articles/Project-setup.html","id":"instructions-to-setup-a-mosaic-project-programmatically","dir":"Articles","previous_headings":"","what":"Instructions to setup a MOSAIC project programmatically","title":"Project setup","text":"following instructions guide setting MOSAIC project directory programmatically cloning necessary repositories using Bash script.","code":"#!/bin/bash  # Set the MOSAIC parent directory MOSAIC_DIR=\"MOSAIC\"  # Create the MOSAIC directory if it doesn't exist if [ ! -d \"$MOSAIC_DIR\" ]; then     mkdir \"$MOSAIC_DIR\"     echo \"Created directory: $MOSAIC_DIR\" fi  # Change to the MOSAIC directory cd \"$MOSAIC_DIR\"  # Function to clone or update a repository clone_or_update_repo() {     REPO_NAME=$1     REPO_URL=$2      if [ ! -d \"$REPO_NAME\" ]; then         git clone \"$REPO_URL\"         echo \"Cloned $REPO_NAME repository.\"     else         echo \"$REPO_NAME repository already exists. Pulling latest changes.\"         cd \"$REPO_NAME\"         git pull         cd ..     fi }  # Clone or update the MOSAIC-data repository clone_or_update_repo \"MOSAIC-data\" \"git@github.com:InstituteforDiseaseModeling/MOSAIC-data.git\"  # Clone or update the MOSAIC-pkg repository clone_or_update_repo \"MOSAIC-pkg\" \"git@github.com:InstituteforDiseaseModeling/MOSAIC-pkg.git\"  # Clone or update the MOSAIC-docs repository clone_or_update_repo \"MOSAIC-docs\" \"git@github.com:InstituteforDiseaseModeling/MOSAIC-docs.git\"  # Clone or update the ees-cholera-mapping repository clone_or_update_repo \"ees-cholera-mapping\" \"git@github.com:InstituteforDiseaseModeling/ees-cholera-mapping.git\"  echo \"MOSAIC project setup complete.\" Created directory: MOSAIC Cloning into 'MOSAIC-data'... remote: Enumerating objects: 282, done. remote: Counting objects: 100% (282/282), done. remote: Compressing objects: 100% (218/218), done. remote: Total 282 (delta 61), reused 280 (delta 59), pack-reused 0 (from 0) Receiving objects: 100% (282/282), 30.82 MiB | 21.81 MiB/s, done. Resolving deltas: 100% (61/61), done. Cloned MOSAIC-data repository. Cloning into 'MOSAIC-pkg'... remote: Enumerating objects: 695, done. remote: Counting objects: 100% (695/695), done. remote: Compressing objects: 100% (388/388), done. remote: Total 695 (delta 422), reused 569 (delta 296), pack-reused 0 (from 0) Receiving objects: 100% (695/695), 4.24 MiB | 6.23 MiB/s, done. Resolving deltas: 100% (422/422), done. Cloned MOSAIC-pkg repository. Cloning into 'MOSAIC-docs'... remote: Enumerating objects: 330, done. remote: Total 330 (delta 0), reused 0 (delta 0), pack-reused 330 (from 1) Receiving objects: 100% (330/330), 53.60 MiB | 19.46 MiB/s, done. Resolving deltas: 100% (102/102), done. Cloned MOSAIC-docs repository. Cloning into 'ees-cholera-mapping'... remote: Enumerating objects: 281, done. remote: Counting objects: 100% (24/24), done. remote: Compressing objects: 100% (19/19), done. remote: Total 281 (delta 6), reused 9 (delta 4), pack-reused 257 (from 1) Receiving objects: 100% (281/281), 169.76 KiB | 1.40 MiB/s, done. Resolving deltas: 100% (122/122), done. Cloned ees-cholera-mapping repository. MOSAIC project setup complete."},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"John R Giles. Author, maintainer.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Giles J (2025). MOSAIC: Metapopulation Outbreak Simulation Interventions Cholera (MOSAIC). R package version 0.0.1.","code":"@Manual{,   title = {MOSAIC: Metapopulation Outbreak Simulation And Interventions for Cholera (MOSAIC)},   author = {John R Giles},   year = {2025},   note = {R package version 0.0.1}, }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/index.html","id":"mosaic-the-metapopulation-outbreak-simulation-with-agent-based-implementation-for-cholera-","dir":"","previous_headings":"","what":"Metapopulation Outbreak Simulation And Interventions for Cholera (MOSAIC)","title":"Metapopulation Outbreak Simulation And Interventions for Cholera (MOSAIC)","text":"  Welcome R package MOSAIC framework. MOSAIC R package provides tools simulating cholera transmission dynamics using metapopulation models, estimating mobility patterns drivers transmission environmental forcing, visualizing disease dynamics outbreak projections. Note repo holds code data models , full documentation see: https://institutefordiseasemodeling.github.io/MOSAIC-docs/.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/index.html","id":"mosaic-project-directory-structure","dir":"","previous_headings":"","what":"MOSAIC Project Directory Structure","title":"Metapopulation Outbreak Simulation And Interventions for Cholera (MOSAIC)","text":"MOSAIC R package designed used within triad Github repos functions documented MOSAIC-pkg. package downloads processes required data saved MOSAIC-data prepares model quantities run MOSAIC saved MOSAIC-pkg/model/input. package also produces figures tables used make documentation located MOSAIC-docs. directory structure MOSAIC project. See ./src/mosiac_setup.sh project setup script.","code":"MOSAIC/               # Local parent directory to hold 3 repositories, root directory in get_paths() ├── MOSAIC-data/       │   ├── raw/          # Raw data files supplied to MOSAIC-pkg │   └── processed/    # Processed data files supplied to MOSAIC-pkg ├── MOSAIC-pkg/        │   ├── [R package]   # Contents of MOSAIC R package: https://gilesjohnr.github.io/MOSAIC-pkg/ │   └── model/ │       ├── input/    # Files used as input to MOSAIC framework │       ├── output/   # Location of output from MOSAIC framework │       └── LAUNCH.R  # LAUNCH.R file runs data acquisition functions, a priori models, and runs MOSAIC └── MOSAIC-docs/           ├── [Website]     # Documentation and model description: https://gilesjohnr.github.io/MOSAIC-docs/     ├── figures/      # Output images and figures from MOSAIC-pkg used in documentation     └── tables/       # Output data and parameter values from MOSAIC-pkg used in documentation"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"Metapopulation Outbreak Simulation And Interventions for Cholera (MOSAIC)","text":"questions information MOSAIC project, please contact: John Giles: john.giles@gatesfoundation.org Jillian Gauld: jillian.gauld@gatesfoundation.org Rajiv Sodhi: rajiv.sodhi@gatesfoundation.org","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/calc_affine_normalization.html","id":null,"dir":"Reference","previous_headings":"","what":"Affine Normalization of a Numeric Vector (Zero-Centered Min-Max Scaling) — calc_affine_normalization","title":"Affine Normalization of a Numeric Vector (Zero-Centered Min-Max Scaling) — calc_affine_normalization","text":"Transforms numeric vector centering zero scaling minimum value becomes -1. Specifically, affine normalization defined :","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/calc_affine_normalization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Affine Normalization of a Numeric Vector (Zero-Centered Min-Max Scaling) — calc_affine_normalization","text":"","code":"calc_affine_normalization(x)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/calc_affine_normalization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Affine Normalization of a Numeric Vector (Zero-Centered Min-Max Scaling) — calc_affine_normalization","text":"x numeric vector normalized. vector may contain NA values.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/calc_affine_normalization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Affine Normalization of a Numeric Vector (Zero-Centered Min-Max Scaling) — calc_affine_normalization","text":"numeric vector length x affine normalized.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/calc_affine_normalization.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Affine Normalization of a Numeric Vector (Zero-Centered Min-Max Scaling) — calc_affine_normalization","text":"$$x_{\\text{scaled}} = \\frac{x - \\mu}{\\mu - \\min(x)}$$ \\(\\mu\\) mean x. transformation produces vector mean approximately zero (ignoring NA values), minimum -1, maximum zero original maximum exceeds mean. function computes mean minimum x na.rm = TRUE. mean equals minimum (nearly equal within machine precision), function issues warning returns vector NA values avoid division zero.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/calc_affine_normalization.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Affine Normalization of a Numeric Vector (Zero-Centered Min-Max Scaling) — calc_affine_normalization","text":"","code":"# Example vector with NA values x <- c(3, 5, 7, NA, 10, 12)  # Apply affine normalization normalized_x <- calc_affine_normalization(x)  # The normalized vector should have a mean of approximately zero, # a minimum of -1, and a maximum above zero (if the original maximum exceeds the mean)."},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/check_affine_normalization.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Affine Normalization (Zero-Centered Min-Max Scaling) — check_affine_normalization","title":"Check Affine Normalization (Zero-Centered Min-Max Scaling) — check_affine_normalization","text":"Verifies numeric vector affine normalized zero-centered minimum value least -1. Specifically, function checks :","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/check_affine_normalization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Affine Normalization (Zero-Centered Min-Max Scaling) — check_affine_normalization","text":"","code":"check_affine_normalization(x, verbose = FALSE)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/check_affine_normalization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Affine Normalization (Zero-Centered Min-Max Scaling) — check_affine_normalization","text":"x numeric vector affine normalized. vector may contain NA values. verbose Logical; TRUE, function prints details check console.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/check_affine_normalization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Affine Normalization (Zero-Centered Min-Max Scaling) — check_affine_normalization","text":"Invisibly returns NULL check passes. Otherwise, function stops error message detailing failed condition(s).","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/check_affine_normalization.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check Affine Normalization (Zero-Centered Min-Max Scaling) — check_affine_normalization","text":"mean vector (ignoring NAs) approximately zero. minimum value (ignoring NAs) greater equal -1. maximum value (ignoring NAs) zero. conditions fail, function stops execution returns informative error message. check uses tolerance 1e-8 account floating point precision. conditions verified correspond transformation defined : $$x_{\\text{scaled}} = \\frac{x - \\mu}{\\mu - \\min(x)}$$ \\(\\mu\\) mean x. Note transformation forces zero-centered result, minimum value need exactly -1 less -1.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/check_affine_normalization.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Affine Normalization (Zero-Centered Min-Max Scaling) — check_affine_normalization","text":"","code":"# Example vector after affine normalization x <- c(-1, 0, 0.5, 1.2, NA)  # Check without printing details: if (FALSE) {   check_affine_normalization(x) }  # Check with verbose output: if (FALSE) {   check_affine_normalization(x, verbose = TRUE) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/check_dependencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Installed R and Python Dependencies for MOSAIC — check_dependencies","title":"Check Installed R and Python Dependencies for MOSAIC — check_dependencies","text":"function checks MOSAIC Python virtual environment, installed Python packages, verifies keras3 tensorflow R packages installed configured correctly. prints currently active Python environment confirms whether backend working.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/check_dependencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Installed R and Python Dependencies for MOSAIC — check_dependencies","text":"","code":"check_dependencies()"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/check_dependencies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Installed R and Python Dependencies for MOSAIC — check_dependencies","text":"return value. Prints diagnostic messages environment status package versions.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/check_installed_dependencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Installed R and Python Dependencies for MOSAIC — check_installed_dependencies","title":"Check Installed R and Python Dependencies for MOSAIC — check_installed_dependencies","text":"function checks MOSAIC Python virtual environment, installed Python packages, verifies keras3 tensorflow R packages installed configured correctly. prints currently active Python environment confirms whether backend working.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/check_installed_dependencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Installed R and Python Dependencies for MOSAIC — check_installed_dependencies","text":"","code":"check_installed_dependencies(pkgname = \"MOSAIC\")"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/check_installed_dependencies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Installed R and Python Dependencies for MOSAIC — check_installed_dependencies","text":"return value. Prints diagnostic messages environment status package versions.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/compile_ENSO_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile ENSO and DMI Data (Historical and Forecast) — compile_ENSO_data","title":"Compile ENSO and DMI Data (Historical and Forecast) — compile_ENSO_data","text":"function compiles historical forecast data DMI ENSO (Niño3, Niño3.4, Niño4) single data frame. data filtered include years specified year_start onwards. function also allows disaggregation monthly data daily weekly values using either linear interpolation spline interpolation.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/compile_ENSO_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile ENSO and DMI Data (Historical and Forecast) — compile_ENSO_data","text":"","code":"compile_ENSO_data(year_start = NULL, frequency = \"monthly\", method = \"linear\")"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/compile_ENSO_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compile ENSO and DMI Data (Historical and Forecast) — compile_ENSO_data","text":"year_start integer representing start year filtering data. data year onward included compiled data. value must greater equal 1870. frequency character string specifying time resolution output data. Valid options \"daily\", \"weekly\", \"monthly\". method character string specifying interpolation method use. Valid options \"linear\" (linear interpolation using zoo::na.approx()) \"spline\" (spline interpolation using zoo::na.spline()).","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/compile_ENSO_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compile ENSO and DMI Data (Historical and Forecast) — compile_ENSO_data","text":"data frame combined historical forecast data DMI, ENSO3, ENSO34, ENSO4. data frame includes following columns: date: date data (daily, weekly, monthly) YYYY-MM-DD format. variable: variable name, can \"DMI\", \"ENSO3\", \"ENSO34\", \"ENSO4\". value: value variable (sea surface temperature anomaly). year: year corresponding date. month: month corresponding date. week: week year (\"weekly\" \"daily\" frequency). doy: day year (\"daily\" frequency).","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/compile_ENSO_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compile ENSO and DMI Data (Historical and Forecast) — compile_ENSO_data","text":"","code":"if (FALSE) { # Compile the ENSO and DMI data from the year 2000 onwards compiled_enso_data <- compile_ENSO_data(2010, \"monthly\")  # Display the compiled data head(compiled_enso_data) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/convert_country_to_iso.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Country Names to ISO3 or ISO2 Country Codes — convert_country_to_iso","title":"Convert Country Names to ISO3 or ISO2 Country Codes — convert_country_to_iso","text":"function converts country names corresponding ISO3 ISO2 country codes. function uses countrycode package, allows multiple spellings variations country names.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/convert_country_to_iso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Country Names to ISO3 or ISO2 Country Codes — convert_country_to_iso","text":"","code":"convert_country_to_iso(x, iso3 = TRUE)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/convert_country_to_iso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Country Names to ISO3 or ISO2 Country Codes — convert_country_to_iso","text":"x character vector country names (e.g., \"United States\", \"UK\", \"Democratic Republic Congo\"). iso3 logical value. TRUE (default), returns ISO3 country codes. FALSE, returns ISO2 country codes.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/convert_country_to_iso.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Country Names to ISO3 or ISO2 Country Codes — convert_country_to_iso","text":"character vector ISO3 ISO2 country codes corresponding country names.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/convert_country_to_iso.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert Country Names to ISO3 or ISO2 Country Codes — convert_country_to_iso","text":"function converts country names ISO3 ISO2 codes using countrycode package. handles various common alternative spellings country names.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/convert_country_to_iso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Country Names to ISO3 or ISO2 Country Codes — convert_country_to_iso","text":"","code":"# Convert a single country name to ISO3 convert_country_to_iso(\"United States\") #> [1] \"USA\"  # Convert a vector of country names to ISO2 convert_country_to_iso(c(\"United States\", \"UK\", \"Democratic Republic of Congo\"), iso3 = FALSE) #> [1] \"US\" \"GB\" \"CD\""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/convert_iso_codes.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert ISO3 to ISO2 or ISO2 to ISO3 Country Codes — convert_iso_codes","title":"Convert ISO3 to ISO2 or ISO2 to ISO3 Country Codes — convert_iso_codes","text":"function converts vector scalar ISO3 country codes ISO2 country codes, vice versa, based input. function uses countrycode package auto-detects input format.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/convert_iso_codes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert ISO3 to ISO2 or ISO2 to ISO3 Country Codes — convert_iso_codes","text":"","code":"convert_iso_codes(iso_codes)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/convert_iso_codes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert ISO3 to ISO2 or ISO2 to ISO3 Country Codes — convert_iso_codes","text":"iso_codes vector scalar ISO2 ISO3 country codes (e.g., \"USA\", \"GBR\", \"ZA\", \"GB\").","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/convert_iso_codes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert ISO3 to ISO2 or ISO2 to ISO3 Country Codes — convert_iso_codes","text":"character vector converted ISO2 ISO3 country codes corresponding provided input.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/convert_iso_codes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert ISO3 to ISO2 or ISO2 to ISO3 Country Codes — convert_iso_codes","text":"function detects whether input ISO2 ISO3 format based code length converts accordingly using countrycode package.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/convert_iso_codes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert ISO3 to ISO2 or ISO2 to ISO3 Country Codes — convert_iso_codes","text":"","code":"# Convert a vector of ISO3 codes to ISO2 codes convert_iso_codes(c(\"USA\", \"GBR\", \"DZA\")) #> [1] \"US\" \"GB\" \"DZ\"  # Convert a vector of ISO2 codes to ISO3 codes convert_iso_codes(c(\"US\", \"GB\", \"DZ\")) #> [1] \"USA\" \"GBR\" \"DZA\""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/convert_iso_to_country.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert ISO2 or ISO3 Country Codes to Country Names — convert_iso_to_country","title":"Convert ISO2 or ISO3 Country Codes to Country Names — convert_iso_to_country","text":"function converts vector scalar ISO2 ISO3 country codes corresponding country names using countrycode package.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/convert_iso_to_country.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert ISO2 or ISO3 Country Codes to Country Names — convert_iso_to_country","text":"","code":"convert_iso_to_country(iso)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/convert_iso_to_country.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert ISO2 or ISO3 Country Codes to Country Names — convert_iso_to_country","text":"iso vector scalar ISO2 ISO3 country codes (e.g., \"USA\", \"GB\", \"DZA\").","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/convert_iso_to_country.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert ISO2 or ISO3 Country Codes to Country Names — convert_iso_to_country","text":"character vector country names corresponding provided ISO2 ISO3 country codes.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/convert_iso_to_country.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert ISO2 or ISO3 Country Codes to Country Names — convert_iso_to_country","text":"function automatically detects input ISO2 ISO3 format returns corresponding country names. Special handling applied Congo Democratic Republic Congo.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/convert_iso_to_country.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert ISO2 or ISO3 Country Codes to Country Names — convert_iso_to_country","text":"","code":"# Convert a vector of ISO3 and ISO2 codes to country names convert_iso_to_country(c(\"USA\", \"GBR\", \"DZA\", \"COD\")) #> [1] \"United States\"                \"United Kingdom\"               #> [3] \"Algeria\"                      \"Democratic Republic of Congo\""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/download_africa_shapefile.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and Save Africa Shapefile — download_africa_shapefile","title":"Download and Save Africa Shapefile — download_africa_shapefile","text":"function downloads shapefile African countries using rnaturalearth package saves specified directory. output directory exist, created.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/download_africa_shapefile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and Save Africa Shapefile — download_africa_shapefile","text":"","code":"download_africa_shapefile(PATHS)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/download_africa_shapefile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and Save Africa Shapefile — download_africa_shapefile","text":"PATHS list environment containing path structure, PATHS$DATA_PROCESSED specifies directory save processed shapefile.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/download_africa_shapefile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and Save Africa Shapefile — download_africa_shapefile","text":"message indicating shapefile saved, including full path saved file.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/download_africa_shapefile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download and Save Africa Shapefile — download_africa_shapefile","text":"function uses rnaturalearth package download shapefile African continent. shapefile saved AFRICA_ADM0.shp directory specified PATHS$DATA_PROCESSED/shapefiles. function create directory already exist.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/download_africa_shapefile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and Save Africa Shapefile — download_africa_shapefile","text":"","code":"if (FALSE) {   # Example PATHS object   PATHS <- list(DATA_PROCESSED = \"path/to/processed/data\")    # Download and save the Africa shapefile   download_africa_shapefile(PATHS) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/download_all_country_shapefiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and Save Shapefiles for All African Countries — download_all_country_shapefiles","title":"Download and Save Shapefiles for All African Countries — download_all_country_shapefiles","text":"function downloads shapefiles African country saves specified directory. function iterates ISO3 country codes Africa (MOSAIC framework) saves country's shapefile individually.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/download_all_country_shapefiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and Save Shapefiles for All African Countries — download_all_country_shapefiles","text":"","code":"download_all_country_shapefiles(PATHS)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/download_all_country_shapefiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and Save Shapefiles for All African Countries — download_all_country_shapefiles","text":"PATHS list containing paths processed data saved. PATHS typically output get_paths() function include: DATA_PROCESSED: Path directory processed shapefiles saved.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/download_all_country_shapefiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and Save Shapefiles for All African Countries — download_all_country_shapefiles","text":"function return value. downloads shapefiles African country saves individual shapefiles processed data directory.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/download_all_country_shapefiles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download and Save Shapefiles for All African Countries — download_all_country_shapefiles","text":"function performs following steps: Creates output directory shapefiles exist. Loops list ISO3 country codes African countries. Downloads country's shapefile using MOSAIC::get_country_shp(). Saves shapefile processed data directory ISO3_ADM0.shp.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/download_all_country_shapefiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and Save Shapefiles for All African Countries — download_all_country_shapefiles","text":"","code":"if (FALSE) { # Define paths for processed data using get_paths() PATHS <- get_paths()  # Download and save shapefiles for all African countries download_all_country_shapefiles(PATHS) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/download_climate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and Save Climate Data for Multiple Countries (Parquet Format, Multiple Models and Variables) — download_climate_data","title":"Download and Save Climate Data for Multiple Countries (Parquet Format, Multiple Models and Variables) — download_climate_data","text":"function downloads daily climate data list specified countries, saving data Parquet files. data includes historical future climate variables grid points within country specified set climate models variables.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/download_climate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and Save Climate Data for Multiple Countries (Parquet Format, Multiple Models and Variables) — download_climate_data","text":"","code":"download_climate_data(   PATHS,   iso_codes,   n_points,   date_start,   date_stop,   climate_models,   climate_variables,   api_key )"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/download_climate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and Save Climate Data for Multiple Countries (Parquet Format, Multiple Models and Variables) — download_climate_data","text":"PATHS list containing paths raw processed data stored. PATHS typically output get_paths() function include: DATA_SHAPEFILES: Path directory containing country shapefiles. DATA_CLIMATE: Path directory processed climate data saved. iso_codes character vector ISO3 country codes climate data downloaded. n_points integer specifying number grid points generate within country climate data downloaded. date_start character string representing start date climate data (\"YYYY-MM-DD\" format). date_stop character string representing end date climate data (\"YYYY-MM-DD\" format). climate_models character vector climate models use. Available models include: CMCC_CM2_VHR4 FGOALS_f3_H HiRAM_SIT_HR MRI_AGCM3_2_S EC_Earth3P_HR MPI_ESM1_2_XR NICAM16_8S climate_variables character vector climate variables retrieve. See details available variables. api_key character string representing API key required access climate data API.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/download_climate_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and Save Climate Data for Multiple Countries (Parquet Format, Multiple Models and Variables) — download_climate_data","text":"function return value. downloads climate data country, climate model, climate variable, saving results Parquet files specified directory.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/download_climate_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download and Save Climate Data for Multiple Countries (Parquet Format, Multiple Models and Variables) — download_climate_data","text":"function uses country shapefiles generate grid points within country, climate data downloaded. function retrieves climate data specified date range (date_start date_stop) specified climate models variables. data saved country, climate model, climate variable Parquet file named climate_data_{climate_model}_{climate_variable}_{date_start}_{date_stop}_{ISO3}.parquet. available climate variables include: temperature_2m_mean, temperature_2m_max, temperature_2m_min wind_speed_10m_mean, wind_speed_10m_max cloud_cover_mean shortwave_radiation_sum relative_humidity_2m_mean, relative_humidity_2m_max, relative_humidity_2m_min dew_point_2m_mean, dew_point_2m_min, dew_point_2m_max precipitation_sum, rain_sum, snowfall_sum pressure_msl_mean soil_moisture_0_to_10cm_mean et0_fao_evapotranspiration_sum","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/download_climate_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and Save Climate Data for Multiple Countries (Parquet Format, Multiple Models and Variables) — download_climate_data","text":"","code":"if (FALSE) { # Define paths for raw and processed data using get_paths() PATHS <- get_paths()  # ISO3 country codes for African countries iso_codes <- c(\"ZAF\", \"KEN\", \"NGA\")  # API key for climate data API api_key <- \"your-api-key-here\"  # Download climate data for multiple models and variables and save it for the specified countries download_climate_data(PATHS, iso_codes, n_points = 5,                       date_start = \"1970-01-01\", date_stop = \"2030-12-31\",                       climate_models = c(\"MRI_AGCM3_2_S\", \"EC_Earth3P_HR\"),                       climate_variables = c(\"temperature_2m_mean\", \"precipitation_sum\"), api_key) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/download_country_DEM.html","id":null,"dir":"Reference","previous_headings":"","what":"Download 1km DEM Raster for Multiple Countries and Save to Files — download_country_DEM","title":"Download 1km DEM Raster for Multiple Countries and Save to Files — download_country_DEM","text":"function downloads 1km resolution DEM (Digital Elevation Model) raster data given vector ISO3 country codes, writes raster GeoTIFF file.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/download_country_DEM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download 1km DEM Raster for Multiple Countries and Save to Files — download_country_DEM","text":"","code":"download_country_DEM(PATHS, iso_codes, zoom_level = 6)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/download_country_DEM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download 1km DEM Raster for Multiple Countries and Save to Files — download_country_DEM","text":"PATHS list containing paths DEM data saved. Typically generated get_paths() function include: DATA_DEM: Path directory DEM rasters saved. iso_codes character vector ISO3 country codes DEM data downloaded. zoom_level integer representing zoom level DEM data. Zoom levels 6-8 recommended 1km resolution (default = 6).","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/download_country_DEM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download 1km DEM Raster for Multiple Countries and Save to Files — download_country_DEM","text":"function return value. downloads DEM data country saves results GeoTIFF files specified directory.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/download_country_DEM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download 1km DEM Raster for Multiple Countries and Save to Files — download_country_DEM","text":"","code":"if (FALSE) { # Define the ISO3 country codes iso_codes <- c(\"ZAF\", \"KEN\", \"NGA\")  # Get paths for data storage PATHS <- get_paths()  # Download DEM rasters for the countries download_country_DEM(iso_codes, PATHS) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_WASH_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate, Visualize, and Impute WASH Coverage and Correlation with Cholera Incidence — est_WASH_coverage","title":"Estimate, Visualize, and Impute WASH Coverage and Correlation with Cholera Incidence — est_WASH_coverage","text":"function processes Water, Sanitation, Hygiene (WASH) coverage data African countries, optimizes weights WASH variables, calculates weighted means, examines correlation cholera incidence, imputes missing WASH values using similarity matrix. function generates plots tables showing relationships saves results specified paths.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_WASH_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate, Visualize, and Impute WASH Coverage and Correlation with Cholera Incidence — est_WASH_coverage","text":"","code":"est_WASH_coverage(PATHS)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_WASH_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate, Visualize, and Impute WASH Coverage and Correlation with Cholera Incidence — est_WASH_coverage","text":"PATHS list containing paths WASH data, figures, model inputs saved. Typically generated get_paths() function include: DATA_WASH: Path WASH data CSV file. DOCS_FIGURES: Path save output figures. MODEL_INPUT: Path save model input data. DOCS_TABLES: Path save tables used documentation. DATA_SIMILARITY_MATRIX: Path similarity matrix CSV file imputation.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_WASH_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate, Visualize, and Impute WASH Coverage and Correlation with Cholera Incidence — est_WASH_coverage","text":"function return value, generates saves plots CSV files showing WASH coverage estimates, optimized weights WASH variables, correlation cholera incidence, imputed values missing data.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_WASH_coverage.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate, Visualize, and Impute WASH Coverage and Correlation with Cholera Incidence — est_WASH_coverage","text":"WASH coverage data first normalized (0-1 scale). Risk-related WASH variables (unimproved water sources, surface water, unimproved sanitation, open defecation) converted protective factors taking complement (1 - value). , function: Optimizes weights WASH variable maximize correlation cholera incidence using L-BFGS-B method. Calculates weighted mean WASH variables country. Imputes missing WASH data based country similarity matrix. Missing WASH values estimated using weighted average top 3 similar countries. Generates multiple plots showing relationships WASH variables cholera incidence. Saves tables optimized weights, weighted mean WASH indices, imputed WASH values. Data Source: Sikder et al. (2023). Water, Sanitation, Hygiene Coverage Cholera Incidence Sub-Saharan Africa. doi:10.1021/acs.est.3c01317 .","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_WASH_coverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate, Visualize, and Impute WASH Coverage and Correlation with Cholera Incidence — est_WASH_coverage","text":"","code":"if (FALSE) { # Define paths for saving WASH data, figures, and tables PATHS <- get_paths()  # Estimate WASH coverage and correlation with cholera incidence est_WASH_coverage(PATHS) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_demographic_rates.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Daily Demographic Rates from UN World Population Prospects Data — est_demographic_rates","title":"Estimate Daily Demographic Rates from UN World Population Prospects Data — est_demographic_rates","text":"function estimates daily population, birth rates, death rates countries MOSAIC framework based UN World Population Prospects data. function interpolates annual demographic data daily values applies optional smoothing method generate continuous time-series estimates. function can produce smoothed times series length 1967 2100 (extent processed UN data model projections).","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_demographic_rates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Daily Demographic Rates from UN World Population Prospects Data — est_demographic_rates","text":"","code":"est_demographic_rates(PATHS, date_start, date_stop, smooth_method)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_demographic_rates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Daily Demographic Rates from UN World Population Prospects Data — est_demographic_rates","text":"PATHS list containing paths raw processed data stored. PATHS typically output get_paths() function include following components: DATA_RAW: Path directory containing raw UN World Population Prospects data. DATA_PROCESSED: Path directory processed demographic data saved. DATA_WHO_ANNUAL: Path directory containing annual cholera mortality data. MODEL_INPUT: Path directory model input parameter files saved. date_start starting date demographic parameters. Accepts Date class objects valid character strings. date_stop ending date data demographic parameters. Must valid date format (date_start). smooth_method method used smooth annual demographic rates converting daily time scale. Must one following: \"none\": smoothing applied (annual values transposed daily time scale). \"linear\": Applies simple moving average smoothing. \"spline\": Uses cubic spline interpolation smoothing.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_demographic_rates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Daily Demographic Rates from UN World Population Prospects Data — est_demographic_rates","text":"function return value. estimates demographic rates saves results CSV files containing population size, birth rates, death rates time.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_demographic_rates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate Daily Demographic Rates from UN World Population Prospects Data — est_demographic_rates","text":"function performs following steps: Filters demographic data specified date range. Converts annual birth death rates daily estimates. Removes reported cholera deaths -cause mortality estimates. Applies chosen smoothing method daily demographic rates. Saves processed data model parameters specified directory. processed data file saved PATHS$DATA_PROCESSED/demographics/, model input parameters stored PATHS$MODEL_INPUT/. Data Source: United Nations World Population Prospects","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_demographic_rates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate Daily Demographic Rates from UN World Population Prospects Data — est_demographic_rates","text":"","code":"if (FALSE) { # Define paths for raw and processed data PATHS <- get_paths()  # Estimate demographic rates from 2000-01-01 to 2023-12-31 using spline smoothing est_demographic_rates(PATHS, date_start = \"2000-01-01\", date_stop = \"2023-12-31\", smooth_method = \"spline\") }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_immune_decay.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Immune Decay — est_immune_decay","title":"Estimate Immune Decay — est_immune_decay","text":"function estimates immune durability fitting proportional decay model data. uses nonlinear least squares fitting (NLS) estimate decay parameters generates plots predicted immune durability decay rate distributions.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_immune_decay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Immune Decay — est_immune_decay","text":"","code":"est_immune_decay(PATHS)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_immune_decay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Immune Decay — est_immune_decay","text":"PATHS list containing paths data figures saved. Typically generated get_paths() function include: DATA_IMMUNE_DURABILITY: Path directory containing immune durability data. DOCS_FIGURES: Path directory plots saved.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_immune_decay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate Immune Decay — est_immune_decay","text":"","code":"if (FALSE) { # Assuming PATHS is generated from get_paths() PATHS <- get_paths() est_immune_decay(PATHS) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_mobility.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Mobility Model Using Flight Data and Distance Matrices — est_mobility","title":"Fit Mobility Model Using Flight Data and Distance Matrices — est_mobility","text":"function estimates departure probability (tau_i) diffusion model (pi_ij) using flight data, distance matrices, population sizes. processes flight data, builds mobility distance matrices, fits mobility model, saves results CSV format.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_mobility.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Mobility Model Using Flight Data and Distance Matrices — est_mobility","text":"","code":"est_mobility(PATHS)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_mobility.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Mobility Model Using Flight Data and Distance Matrices — est_mobility","text":"PATHS list containing paths data, models, figures stored. Typically generated get_paths() function include: DATA_OAG: Path directory containing flight data (OAG). DATA_SHAPEFILES: Path directory containing shapefiles African countries. DATA_DEMOGRAPHICS: Path directory containing demographic data. MODEL_INPUT: Path directory model input files saved. DOCS_FIGURES: Path directory figures saved.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_mobility.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Mobility Model Using Flight Data and Distance Matrices — est_mobility","text":"function saves mobility matrices (M, D, N), travel probabilities (tau_j), diffusion matrices (pi_ij) CSV files specified directory. also generates saves visualizations PNG files.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_seasonal_dynamics.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Seasonal Dynamics for Cholera and Precipitation Using Fourier Series — est_seasonal_dynamics","title":"Estimate Seasonal Dynamics for Cholera and Precipitation Using Fourier Series — est_seasonal_dynamics","text":"function retrieves historical precipitation data, processes cholera case data, fits seasonal dynamics models using double Fourier series. results saved CSV file, including parameter estimates, fitted values, processed data.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_seasonal_dynamics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Seasonal Dynamics for Cholera and Precipitation Using Fourier Series — est_seasonal_dynamics","text":"","code":"est_seasonal_dynamics(   PATHS,   date_start,   date_stop,   min_obs = 30,   clustering_method,   k )"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_seasonal_dynamics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Seasonal Dynamics for Cholera and Precipitation Using Fourier Series — est_seasonal_dynamics","text":"PATHS list containing paths raw processed data stored. Typically generated get_paths() function include: DATA_CLIMATE: Path directory climate data stored. DATA_SHAPEFILES: Path directory containing country shapefiles. DATA_WHO_WEEKLY: Path directory containing cholera data. MODEL_INPUT: Path directory model input files saved. date_start date YYYY-MM-DD format indicating start date precipitation data (1970-01-01 earliest) date_stop date YYYY-MM-DD format indicating stop date precipitation date min_obs minimum number observations required fit fourier series cholera case data (default 30) clustering_method name clustering method use grouping countries seasonality (.e. \"kmeans\", \"hierarchical\", \"ward.D2\", \"knn\") k number clusters group countries seasonality","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_seasonal_dynamics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Seasonal Dynamics for Cholera and Precipitation Using Fourier Series — est_seasonal_dynamics","text":"function saves parameter estimates, fitted values, processed data CSV file.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_suitability.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Environmental Suitability (psi) for Cholera Transmission — est_suitability","title":"Estimate Environmental Suitability (psi) for Cholera Transmission — est_suitability","text":"function loads climate data, ENSO data, weekly cholera cases data estimate environmental suitability cholera transmission based various environmental factors. uses lagged climate covariates, scales , fits LSTM-based RNN model predict cholera outbreaks. model trained using past cholera case data climate conditions, predictions made environmental suitability (psi) based climate covariates.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_suitability.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Environmental Suitability (psi) for Cholera Transmission — est_suitability","text":"","code":"est_suitability(PATHS, include_lagged_covariates = FALSE)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_suitability.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Environmental Suitability (psi) for Cholera Transmission — est_suitability","text":"PATHS list containing paths data stored. Typically generated get_paths() function include: DATA_CLIMATE: Path directory processed climate data stored. DATA_ENSO: Path directory ENSO data stored. DATA_WHO_WEEKLY: Path directory containing processed weekly cholera cases data. MODEL_INPUT: Path save processed model inputs outputs. DOCS_FIGURES: Path save generated plots.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_suitability.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Environmental Suitability (psi) for Cholera Transmission — est_suitability","text":"function processes climate cholera case data, fits LSTM model, makes predictions environmental suitability (psi), saves predictions covariate data. also generates plot showing model fit (accuracy loss training epochs) saves specified directory.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_suitability.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate Environmental Suitability (psi) for Cholera Transmission — est_suitability","text":"function performs following steps: Loads processed climate cholera data. Creates lagged versions relevant climate variables (e.g., temperature, precipitation, ENSO data). Scales climate covariates. Splits data training test sets. Builds LSTM-based recurrent neural network (RNN) model predicting cholera outbreaks. Trains model training set evaluates performance test set. Makes predictions test set full dataset. Saves predictions, covariate data, model fit plots specified directories.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_suitability.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Estimate Environmental Suitability (psi) for Cholera Transmission — est_suitability","text":"LSTM model uses climate variables predict cholera suitability. model's predictions saved CSV file plot showing model fit (accuracy loss) generated.","code":""},{"path":[]},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_suitability.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate Environmental Suitability (psi) for Cholera Transmission — est_suitability","text":"","code":"if (FALSE) { # Assuming PATHS is defined and points to the correct data directories: est_suitability(PATHS) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_symptomatic_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate and Visualize Symptomatic Proportion Data — est_symptomatic_prop","title":"Estimate and Visualize Symptomatic Proportion Data — est_symptomatic_prop","text":"function reads symptomatic proportion data, fits Beta distribution simulate proportion infections symptomatic, generates visualizations comparing estimates previous studies.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_symptomatic_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate and Visualize Symptomatic Proportion Data — est_symptomatic_prop","text":"","code":"est_symptomatic_prop(PATHS)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_symptomatic_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate and Visualize Symptomatic Proportion Data — est_symptomatic_prop","text":"PATHS list containing paths symptomatic proportion data figures saved. Typically generated get_paths() function include: DATA_PROCESSED: Path symptomatic proportion data. DOCS_FIGURES: Path save generated plots.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_symptomatic_prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate and Visualize Symptomatic Proportion Data — est_symptomatic_prop","text":"function return value generates saves plots PNG file.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_symptomatic_prop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate and Visualize Symptomatic Proportion Data — est_symptomatic_prop","text":"","code":"if (FALSE) { # Estimate and visualize symptomatic proportion data PATHS <- get_paths() est_symptomatic_prop(PATHS) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_vaccination_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate OCV Vaccination Rates — est_vaccination_rate","title":"Estimate OCV Vaccination Rates — est_vaccination_rate","text":"function processes vaccination data GTFCC, redistributes doses based maximum daily rate, calculates vaccination parameters use MOSAIC cholera model. processed data includes redistributed daily doses, cumulative doses, proportion population vaccinated. results saved CSV files downstream modeling.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_vaccination_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate OCV Vaccination Rates — est_vaccination_rate","text":"","code":"est_vaccination_rate(   PATHS,   date_start = NULL,   date_stop = NULL,   max_rate_per_day,   data_source )"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_vaccination_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate OCV Vaccination Rates — est_vaccination_rate","text":"PATHS list containing file paths, including: DATA_SCRAPE_WHO_VACCINATION path folder containing vaccination data. DATA_DEMOGRAPHICS path folder containing demographic data. MODEL_INPUT path folder processed data saved. date_start start date vaccination data range (\"YYYY-MM-DD\" format). Defaults earliest date data. date_stop stop date vaccination data range (\"YYYY-MM-DD\" format). Defaults latest date data. max_rate_per_day maximum vaccination rate per day used redistribute doses. Default 100,000 doses/day. data_source source vaccination data. Must one \"\" \"GTFCC\".","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_vaccination_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate OCV Vaccination Rates — est_vaccination_rate","text":"function return R object saves following files directory specified PATHS$MODEL_INPUT: redistributed vaccination data file named \"data_vaccinations_<data_source>_redistributed.csv\". parameter data frame vaccination rate (nu) named \"param_nu_vaccination_rate.csv\".","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_vaccination_rate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate OCV Vaccination Rates — est_vaccination_rate","text":"function performs following steps: Load Vaccination Data: - Reads processed vaccination data GTFCC filters relevant columns (iso_code, campaign_date, doses_shipped). Redistribute Doses: - Redistributes shipped doses day day based maximum daily rate (max_rate_per_day). - Ensures duplication distribution_date within iso_code. Validate Redistribution: - Checks redistributed doses sum total shipped doses. Ensure Full Coverage: - Ensures ISO codes data across full date range (date_start date_stop), filling missing dates zero doses. Calculate Population Metrics: - Merges population data 2023, calculates cumulative doses, computes proportion population vaccinated. Save Outputs: - Saves redistributed vaccination data vaccination rate parameter data frame.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_vaccination_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate OCV Vaccination Rates — est_vaccination_rate","text":"","code":"if (FALSE) { PATHS <- list(   DATA_SCRAPE_WHO_VACCINATION = \"path/to/who_vaccination_data\",   DATA_DEMOGRAPHICS = \"path/to/demographics\",   MODEL_INPUT = \"path/to/save/processed/data\" ) est_vaccination_rate(PATHS, max_rate_per_day = 100000, data_source = \"WHO\") }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_vaccine_effectiveness.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate Vaccine Effectiveness Decay Model — est_vaccine_effectiveness","title":"Estimate Vaccine Effectiveness Decay Model — est_vaccine_effectiveness","text":"function fits proportional decay model vaccine effectiveness data estimates parameters model, saving results CSV files. model assumes vaccine effectiveness decays time according proportional decay function. Additionally, fits beta distribution initial vaccine effectiveness capture uncertainty estimate.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_vaccine_effectiveness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate Vaccine Effectiveness Decay Model — est_vaccine_effectiveness","text":"","code":"est_vaccine_effectiveness(PATHS)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_vaccine_effectiveness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate Vaccine Effectiveness Decay Model — est_vaccine_effectiveness","text":"PATHS list containing paths parameter data predictions saved. Typically generated get_paths() function include: MODEL_INPUT: Path directory parameter estimates predictions saved. DATA_VACCINE_EFFECTIVENESS: Path directory vaccine effectiveness data located.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_vaccine_effectiveness.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate Vaccine Effectiveness Decay Model — est_vaccine_effectiveness","text":"function return values saves following CSV files: param_vaccine_effectiveness.csv: Parameter estimates initial vaccine effectiveness decay rate, including beta distribution parameters uncertainty. pred_vaccine_effectiveness.csv: Predicted vaccine effectiveness time (days vaccination).","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_vaccine_effectiveness.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate Vaccine Effectiveness Decay Model — est_vaccine_effectiveness","text":"function uses non-linear least squares (NLS) approach, specifically Levenberg-Marquardt algorithm nls.lm function minpack.lm package, fit vaccine effectiveness decay model. model defined two parameters: \\(\\phi\\): Initial vaccine effectiveness time zero. \\(\\omega\\): Decay rate vaccine effectiveness time. standard errors parameter estimates extracted covariance matrix fitted model. Confidence intervals initial vaccine effectiveness used fit beta distribution capture uncertainty estimate. fitting model, function generates prediction vaccine effectiveness time saves predictions, along parameter estimates beta distribution parameters, CSV files specified MODEL_INPUT directory.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/est_vaccine_effectiveness.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate Vaccine Effectiveness Decay Model — est_vaccine_effectiveness","text":"","code":"if (FALSE) { # Assuming PATHS is generated from get_paths() PATHS <- get_paths()  # Estimate vaccine effectiveness and save results est_vaccine_effectiveness(PATHS) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/fourier_series_double.html","id":null,"dir":"Reference","previous_headings":"","what":"Fourier Series Model with Two Harmonics (Sine-Cosine Form) — fourier_series_double","title":"Fourier Series Model with Two Harmonics (Sine-Cosine Form) — fourier_series_double","text":"function implements generalized Fourier series model two harmonics sine-cosine form. model often used capture seasonal periodic dynamics time series data, temperature, precipitation, disease cases.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/fourier_series_double.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fourier Series Model with Two Harmonics (Sine-Cosine Form) — fourier_series_double","text":"","code":"fourier_series_double(t, beta0, a1, b1, a2, b2, p)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/fourier_series_double.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fourier Series Model with Two Harmonics (Sine-Cosine Form) — fourier_series_double","text":"t numeric vector representing time points (e.g., day year week year). beta0 numeric value representing intercept term (fixed 0 default). a1 numeric value representing amplitude first cosine term (first harmonic). b1 numeric value representing amplitude first sine term (first harmonic). a2 numeric value representing amplitude second cosine term (second harmonic). b2 numeric value representing amplitude second sine term (second harmonic). p numeric value representing period seasonal cycle (e.g., 52 weekly data year).","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/fourier_series_double.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fourier Series Model with Two Harmonics (Sine-Cosine Form) — fourier_series_double","text":"numeric vector predicted values based Fourier series model.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/fourier_series_double.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fourier Series Model with Two Harmonics (Sine-Cosine Form) — fourier_series_double","text":"model defined follows: $$\\beta_t = \\beta_0 + a_1 \\cos\\left(\\frac{2 \\pi t}{p}\\right) + b_1 \\sin\\left(\\frac{2 \\pi t}{p}\\right) + a_2 \\cos\\left(\\frac{4 \\pi t}{p}\\right) + b_2 \\sin\\left(\\frac{4 \\pi t}{p}\\right)$$ model includes intercept term beta0 (set 0 default) two harmonics coefficients a1, b1, a2, b2. period p controls periodicity series. function based sine-cosine form Fourier series. details, see Wikipedia page Fourier series. function commonly used modeling seasonal dynamics environmental epidemiological data, periodic patterns observed.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/fourier_series_double.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fourier Series Model with Two Harmonics (Sine-Cosine Form) — fourier_series_double","text":"","code":"if (FALSE) { # Example usage with weekly data (p = 52 weeks in a year) time_points <- 1:52 beta0 <- 0 a1 <- 1.5 b1 <- -0.5 a2 <- 0.8 b2 <- 0.3 p <- 52  predictions <- fourier_series_double(time_points, beta0, a1, b1, a2, b2, p) print(predictions) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/generate_country_grid_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Grid of Points Within a Country's Shapefile Based on Distance — generate_country_grid_dist","title":"Generate a Grid of Points Within a Country's Shapefile Based on Distance — generate_country_grid_dist","text":"function generates grid points within country's shapefile, points spaced specified distance kilometers.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/generate_country_grid_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Grid of Points Within a Country's Shapefile Based on Distance — generate_country_grid_dist","text":"","code":"generate_country_grid_dist(country_shp, distance_km)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/generate_country_grid_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Grid of Points Within a Country's Shapefile Based on Distance — generate_country_grid_dist","text":"country_shp sf object representing country's shapefile. distance_km numeric value specifying distance (kilometers) grid points.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/generate_country_grid_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Grid of Points Within a Country's Shapefile Based on Distance — generate_country_grid_dist","text":"sf object containing generated grid points within country boundary.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/generate_country_grid_dist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a Grid of Points Within a Country's Shapefile Based on Distance — generate_country_grid_dist","text":"function creates regular grid points within polygon defined country's shapefile, spaced according specified distance kilometers.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/generate_country_grid_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Grid of Points Within a Country's Shapefile Based on Distance — generate_country_grid_dist","text":"","code":"if (FALSE) { # Example usage with distance in kilometers grid_points_sf <- generate_country_grid_dist(country_shapefile, distance_km = 50) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/generate_country_grid_n.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Grid of Points Within a Country's Shapefile Based on Number of Points — generate_country_grid_n","title":"Generate a Grid of Points Within a Country's Shapefile Based on Number of Points — generate_country_grid_n","text":"function generates grid points within country's shapefile, grid contains specified number evenly spaced points.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/generate_country_grid_n.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Grid of Points Within a Country's Shapefile Based on Number of Points — generate_country_grid_n","text":"","code":"generate_country_grid_n(country_shp, n_points)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/generate_country_grid_n.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Grid of Points Within a Country's Shapefile Based on Number of Points — generate_country_grid_n","text":"country_shp sf object representing country's shapefile. n_points numeric value specifying total number evenly spaced points generate within country boundary.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/generate_country_grid_n.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a Grid of Points Within a Country's Shapefile Based on Number of Points — generate_country_grid_n","text":"sf object containing generated grid points within country boundary.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/generate_country_grid_n.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a Grid of Points Within a Country's Shapefile Based on Number of Points — generate_country_grid_n","text":"function creates regular grid points within polygon defined country's shapefile, containing specified number points.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/generate_country_grid_n.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a Grid of Points Within a Country's Shapefile Based on Number of Points — generate_country_grid_n","text":"","code":"if (FALSE) { # Example usage with a specified number of points grid_points_sf <- generate_country_grid_n(country_shapefile, n_points = 100) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_DMI_forecast.html","id":null,"dir":"Reference","previous_headings":"","what":"Get DMI (Dipole Mode Index) Forecast Data — get_DMI_forecast","title":"Get DMI (Dipole Mode Index) Forecast Data — get_DMI_forecast","text":"function retrieves manually extracted Dipole Mode Index (DMI) forecast data Bureau Meteorology's IOD forecast page.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_DMI_forecast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get DMI (Dipole Mode Index) Forecast Data — get_DMI_forecast","text":"","code":"get_DMI_forecast()"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_DMI_forecast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get DMI (Dipole Mode Index) Forecast Data — get_DMI_forecast","text":"data frame columns year, month (numeric), month_name, variable (DMI), value. DMI measure difference sea surface temperature anomalies western eastern Indian Ocean used describe Indian Ocean Dipole (IOD).","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_DMI_forecast.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get DMI (Dipole Mode Index) Forecast Data — get_DMI_forecast","text":"IOD forecast manually extracted Bureau Meteorology's IOD forecast page: http://www.bom.gov.au/climate/ocean/outlooks/#region=IOD. data includes DMI values series months years, representing forecasts sea surface temperature anomalies. Negative DMI values indicate cooler waters west, positive DMI values indicate warmer waters west Indian Ocean.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_DMI_forecast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get DMI (Dipole Mode Index) Forecast Data — get_DMI_forecast","text":"","code":"if (FALSE) { # Get the DMI forecast data dmi_forecast <- get_DMI_forecast()  # Display the DMI forecast data print(dmi_forecast) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_DMI_historical.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and Process Historical DMI Data — get_DMI_historical","title":"Download and Process Historical DMI Data — get_DMI_historical","text":"function downloads historical Dipole Mode Index (DMI) data NOAA processes data frame columns year, month (1-12), month_name, variable (DMI), value.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_DMI_historical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and Process Historical DMI Data — get_DMI_historical","text":"","code":"get_DMI_historical()"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_DMI_historical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and Process Historical DMI Data — get_DMI_historical","text":"data frame columns year, month, month_name, variable (DMI), value.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_DMI_historical.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download and Process Historical DMI Data — get_DMI_historical","text":"DMI data downloaded NOAA's historical DMI data page: https://psl.noaa.gov/gcos_wgsp/Timeseries/Data/dmi..long.data. data includes DMI values representing difference sea surface temperature anomalies western eastern Indian Ocean.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_DMI_historical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and Process Historical DMI Data — get_DMI_historical","text":"","code":"if (FALSE) { # Get the historical DMI data dmi_historical <- get_DMI_historical()  # Display the historical DMI data print(dmi_historical) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_ENSO_forecast.html","id":null,"dir":"Reference","previous_headings":"","what":"Get ENSO (Niño3, Niño3.4, and Niño4) Forecast Data — get_ENSO_forecast","title":"Get ENSO (Niño3, Niño3.4, and Niño4) Forecast Data — get_ENSO_forecast","text":"function retrieves manually extracted ENSO forecast data, including Niño3, Niño3.4, Niño4 sea surface temperature (SST) anomalies, Bureau Meteorology.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_ENSO_forecast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get ENSO (Niño3, Niño3.4, and Niño4) Forecast Data — get_ENSO_forecast","text":"","code":"get_ENSO_forecast()"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_ENSO_forecast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get ENSO (Niño3, Niño3.4, and Niño4) Forecast Data — get_ENSO_forecast","text":"data frame columns year, month (numeric), month_name, variable (ENSO3, ENSO34, ENSO4), value.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_ENSO_forecast.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get ENSO (Niño3, Niño3.4, and Niño4) Forecast Data — get_ENSO_forecast","text":"ENSO forecast manually extracted Bureau Meteorology's ocean outlook page. data includes SST anomalies Niño3, Niño3.4, Niño4 regions. Negative values indicate cooler sea surface temperatures, positive values indicate warmer temperatures.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_ENSO_forecast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get ENSO (Niño3, Niño3.4, and Niño4) Forecast Data — get_ENSO_forecast","text":"","code":"if (FALSE) { # Get the ENSO forecast data enso_forecast <- get_ENSO_forecast()  # Display the ENSO forecast data print(enso_forecast) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_ENSO_historical.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and Process Historical ENSO Data (Niño3, Niño3.4, Niño4) — get_ENSO_historical","title":"Download and Process Historical ENSO Data (Niño3, Niño3.4, Niño4) — get_ENSO_historical","text":"function downloads historical ENSO data Niño3, Niño3.4, Niño4 NOAA processes single data frame columns year (integer), month, month_name, variable (ENSO3, ENSO34, ENSO4), value.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_ENSO_historical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and Process Historical ENSO Data (Niño3, Niño3.4, Niño4) — get_ENSO_historical","text":"","code":"get_ENSO_historical()"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_ENSO_historical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and Process Historical ENSO Data (Niño3, Niño3.4, Niño4) — get_ENSO_historical","text":"data frame columns year, month, month_name, variable, value.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_ENSO_historical.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download and Process Historical ENSO Data (Niño3, Niño3.4, Niño4) — get_ENSO_historical","text":"historical ENSO data downloaded NOAA's historical ENSO data pages. data includes sea surface temperature anomalies Niño3, Niño3.4, Niño4 regions.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_ENSO_historical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and Process Historical ENSO Data (Niño3, Niño3.4, Niño4) — get_ENSO_historical","text":"","code":"if (FALSE) { # Get the historical ENSO data enso_historical <- get_ENSO_historical()  # Display the historical ENSO data print(enso_historical) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_WASH_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download, Process, and Save WASH Coverage Data — get_WASH_data","title":"Download, Process, and Save WASH Coverage Data — get_WASH_data","text":"function processes WASH (Water, Sanitation, Hygiene) coverage data African countries Sikder et al. (2023). data includes indicators water sanitation access, including piped water, improved sanitation, unimproved water sources, open defecation. processed data saved CSV file specified path.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_WASH_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download, Process, and Save WASH Coverage Data — get_WASH_data","text":"","code":"get_WASH_data(PATHS)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_WASH_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download, Process, and Save WASH Coverage Data — get_WASH_data","text":"PATHS list containing paths WASH data saved. Typically generated get_paths() function include: DATA_WASH: Path directory processed WASH data saved.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_WASH_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download, Process, and Save WASH Coverage Data — get_WASH_data","text":"function return value processes WASH coverage data saves specified directory CSV file.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_WASH_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download, Process, and Save WASH Coverage Data — get_WASH_data","text":"WASH coverage data based percentages population access piped water, improved water sources, septic sewer sanitation, improved sanitation. data also includes proportions population using unimproved water sources, surface water, unimproved sanitation, practicing open defecation. risk-related variables (unimproved water, surface water, unimproved sanitation, open defecation) converted complement (1 - value) reflect protective factors. data scaled 0 1. Data Source: Sikder et al. (2023). Water, Sanitation, Hygiene Coverage Cholera Incidence Sub-Saharan Africa. doi:10.1021/acs.est.3c01317 .","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_WASH_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download, Process, and Save WASH Coverage Data — get_WASH_data","text":"","code":"if (FALSE) { # Define paths for saving WASH data PATHS <- get_paths()  # Download, process, and save WASH coverage data get_WASH_data(PATHS) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_WHO_vaccination_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get WHO Vaccination Data — get_WHO_vaccination_data","title":"Get WHO Vaccination Data — get_WHO_vaccination_data","text":"function processes raw vaccination request data converts format suitable use MOSAIC cholera model. extracts relevant information tab-separated text data various years, year, country, request number, status, context, ICG decision date, number doses requested, approved, shipped, well date vaccination campaign. data compiled data frame saved CSV format analysis.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_WHO_vaccination_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get WHO Vaccination Data — get_WHO_vaccination_data","text":"","code":"get_WHO_vaccination_data(PATHS)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_WHO_vaccination_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Get WHO Vaccination Data — get_WHO_vaccination_data","text":"data used function sourced ICG (International Coordinating Group Vaccine Provision) dashboard, can accessed via following Power BI link: https://app.powerbi.com/view?r=eyJrIjoiYmFmZTBmM2EtYWM3Mi00NWYwLTg3YjgtN2Q0MjM5ZmE1ZjFkIiwidCI6ImY2MTBjMGI3LWJkMjQtNGIzOS04MTBiLTNkYzI4MGFmYjU5MCIsImMiOjh9","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_WHO_vaccination_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get WHO Vaccination Data — get_WHO_vaccination_data","text":"PATHS list file paths, include following element: DATA_SCRAPE_WHO_VACCINATION path folder processed vaccination data saved CSV file.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_WHO_vaccination_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get WHO Vaccination Data — get_WHO_vaccination_data","text":"data frame containing processed vaccination request data. function also prints summary information, including total number observations, total requested doses, approved doses, shipped doses, start end dates requests.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_WHO_vaccination_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get WHO Vaccination Data — get_WHO_vaccination_data","text":"function performs following steps: Reads raw vaccination request data tab-separated text multiple years (e.g., 2016-2024). Extracts relevant columns Year, Country, Request Number, Status, Context, Decision Date, Doses Requested, Approved, Shipped. Handles missing values checks duplicated rows, removing duplicates printing rows removed. Summarizes data, printing total number observations, total doses requested, approved, shipped, well first last decision dates. Saves processed vaccination data CSV file location specified PATHS argument.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_WHO_vaccination_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get WHO Vaccination Data — get_WHO_vaccination_data","text":"","code":"if (FALSE) { PATHS <- list(DATA_SCRAPE_WHO_VACCINATION = \"path/to/save\") who_data <- get_WHO_vaccination_data(PATHS) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_centroid.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Centroid of a Country from its Shapefile — get_centroid","title":"Calculate the Centroid of a Country from its Shapefile — get_centroid","text":"function reads country shapefile, calculates centroid, returns centroid coordinates (longitude latitude) along ISO3 country code.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_centroid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Centroid of a Country from its Shapefile — get_centroid","text":"","code":"get_centroid(shapefile)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_centroid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Centroid of a Country from its Shapefile — get_centroid","text":"shapefile character string representing file path country shapefile (.shp format).","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_centroid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Centroid of a Country from its Shapefile — get_centroid","text":"data frame following columns: iso3: ISO3 country code extracted shapefile name. lon: longitude country's centroid. lat: latitude country's centroid.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_centroid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate the Centroid of a Country from its Shapefile — get_centroid","text":"function reads shapefile using sf::st_read(), calculates centroid country using sf::st_centroid(), extracts coordinates centroid sf::st_coordinates(). ISO3 code extracted filename shapefile, assuming first three characters shapefile name represent ISO3 country code.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_centroid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Centroid of a Country from its Shapefile — get_centroid","text":"","code":"if (FALSE) { # Example usage: # Assuming you have a shapefile \"ZAF_ADM0.shp\" for South Africa shapefile_path <- \"path/to/shapefile/ZAF_ADM0.shp\" centroid_data <- get_centroid(shapefile_path) print(centroid_data) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_climate_forecast.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Climate Forecast Data (Daily) — get_climate_forecast","title":"Get Climate Forecast Data (Daily) — get_climate_forecast","text":"function retrieves daily climate forecast data specified location one climate variables range forecast days using Open-Meteo API.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_climate_forecast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Climate Forecast Data (Daily) — get_climate_forecast","text":"","code":"get_climate_forecast(lat, lon, n_days, climate_variables, api_key = NULL)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_climate_forecast.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Climate Forecast Data (Daily) — get_climate_forecast","text":"lat numeric value representing latitude location. lon numeric value representing longitude location. n_days integer representing number forecast days retrieve (maximum value 15). climate_variables character vector climate variables retrieve (e.g., c(\"temperature_2m_max\", \"precipitation_sum\")). api_key character string representing API key Open-Meteo API.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_climate_forecast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Climate Forecast Data (Daily) — get_climate_forecast","text":"data frame columns: date date forecast (class Date). climate_variable name climate variable. climate_value value climate variable date.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_climate_forecast.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Climate Forecast Data (Daily) — get_climate_forecast","text":"function queries Open-Meteo API daily weather forecast data specified latitude, longitude, range forecast days (15 days). API request successful, function returns data frame containing date, climate variable, value. request fails, function returns NULL issues warning HTTP status code.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_climate_forecast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Climate Forecast Data (Daily) — get_climate_forecast","text":"","code":"if (FALSE) { # Example usage to get forecast data for multiple climate variables lat <- 52.52 lon <- 13.41 n_days <- 15 climate_variables <- c(\"temperature_2m_max\", \"precipitation_sum\") api_key <- \"your_api_key_here\" forecast_data <- get_climate_forecast(lat, lon, n_days, climate_variables, api_key) print(forecast_data) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_climate_future.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Future Climate Data for Multiple Locations (One Model at a Time) — get_climate_future","title":"Download Future Climate Data for Multiple Locations (One Model at a Time) — get_climate_future","text":"function retrieves daily future climate data multiple specified locations climate variables specified date range using specified climate model.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_climate_future.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Future Climate Data for Multiple Locations (One Model at a Time) — get_climate_future","text":"","code":"get_climate_future(   lat,   lon,   date_start,   date_stop,   climate_variables,   climate_model,   api_key = NULL )"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_climate_future.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Future Climate Data for Multiple Locations (One Model at a Time) — get_climate_future","text":"lat numeric vector representing latitudes locations. lon numeric vector representing longitudes locations. date_start character string representing start date data \"YYYY-MM-DD\" format. date_stop character string representing end date data \"YYYY-MM-DD\" format. climate_variables character vector climate variables retrieve. Valid options include: temperature_2m_mean: Mean 2m air temperature. temperature_2m_max: Maximum 2m air temperature. temperature_2m_min: Minimum 2m air temperature. wind_speed_10m_mean: Mean 10m wind speed. wind_speed_10m_max: Maximum 10m wind speed. cloud_cover_mean: Mean cloud cover. shortwave_radiation_sum: Sum shortwave radiation. relative_humidity_2m_mean: Mean 2m relative humidity. relative_humidity_2m_max: Maximum 2m relative humidity. relative_humidity_2m_min: Minimum 2m relative humidity. dew_point_2m_mean: Mean 2m dew point temperature. dew_point_2m_min: Minimum 2m dew point temperature. dew_point_2m_max: Maximum 2m dew point temperature. precipitation_sum: Total precipitation. rain_sum: Total rainfall. snowfall_sum: Total snowfall. pressure_msl_mean: Mean sea level pressure. soil_moisture_0_to_10cm_mean: Mean soil moisture (0-10 cm depth). et0_fao_evapotranspiration_sum: Sum evapotranspiration (FAO standard). climate_model single character string representing climate model use. Available models include: CMCC_CM2_VHR4 FGOALS_f3_H HiRAM_SIT_HR MRI_AGCM3_2_S EC_Earth3P_HR MPI_ESM1_2_XR NICAM16_8S api_key character string representing API key climate data API. provided, function assumes API key required.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_climate_future.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Future Climate Data for Multiple Locations (One Model at a Time) — get_climate_future","text":"data frame columns: date: date climate data. latitude: latitude location. longitude: longitude location. climate_model: climate model used data. variable_name: climate variable retrieved (e.g., temperature_2m_mean, precipitation_sum). value: value climate variable date.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_climate_future.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download Future Climate Data for Multiple Locations (One Model at a Time) — get_climate_future","text":"function retrieves daily future climate data multiple specified locations using Open-Meteo Climate API. downloads specified climate variables latitude longitude provided, using single climate model. data retrieved date range specified date_start date_stop. progress bar displayed indicate download progress.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_climate_future.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Future Climate Data for Multiple Locations (One Model at a Time) — get_climate_future","text":"","code":"if (FALSE) { # Define latitudes and longitudes for the locations lat <- c(40.7128, 34.0522) lon <- c(-74.0060, -118.2437)  # Define the climate variables and model climate_vars <- c(\"temperature_2m_mean\", \"precipitation_sum\") climate_model <- \"MRI_AGCM3_2_S\"  # Set the date range and API key date_start <- \"2023-01-01\" date_stop <- \"2030-12-31\" api_key <- \"your_api_key_here\"  # Download the climate data climate_data <- get_climate_future(lat, lon, date_start, date_stop,                                    climate_vars, climate_model, api_key)  # Display the climate data head(climate_data) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_climate_historical.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Historical Climate Data — get_climate_historical","title":"Get Historical Climate Data — get_climate_historical","text":"function retrieves historical weather data specified location one climate variables date range. uses Open-Meteo API.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_climate_historical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Historical Climate Data — get_climate_historical","text":"","code":"get_climate_historical(   lat,   lon,   start_date,   end_date,   climate_variables,   api_key = NULL )"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_climate_historical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Historical Climate Data — get_climate_historical","text":"lat numeric value representing latitude location. lon numeric value representing longitude location. start_date character string representing start date \"YYYY-MM-DD\" format. end_date character string representing end date \"YYYY-MM-DD\" format. climate_variables character vector climate variables retrieve (e.g., c(\"precipitation_sum\", \"temperature_2m_max\")). api_key character string representing API key Open-Meteo API. provided, default key used.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_climate_historical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Historical Climate Data — get_climate_historical","text":"data frame columns: date date observation (class Date). climate_variable name climate variable. climate_value value climate variable date.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_climate_historical.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Historical Climate Data — get_climate_historical","text":"function queries Open-Meteo API historical weather data given latitude, longitude, climate variables specified date range. API request successful, function returns data frame containing date, climate variable, value. request fails, function returns NULL issues warning HTTP status code.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_climate_historical.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Historical Climate Data — get_climate_historical","text":"","code":"if (FALSE) { # Example usage to get historical data for multiple climate variables lat <- 40.7128 lon <- -74.0060 start_date <- \"2020-01-01\" end_date <- \"2020-12-31\" climate_variables <- c(\"temperature_2m_max\", \"precipitation_sum\") api_key <- \"your_api_key_here\"  # Replace with your actual API key climate_data <- get_climate_historical(lat, lon, start_date, end_date, climate_variables, api_key) print(climate_data) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_country_shp.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a country shapefile from GeoBoundaries API — get_country_shp","title":"Get a country shapefile from GeoBoundaries API — get_country_shp","text":"function retrieves shapefile given iso3 code GeoBoundaries data API.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_country_shp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a country shapefile from GeoBoundaries API — get_country_shp","text":"","code":"get_country_shp(iso3, path_output = NULL)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_country_shp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a country shapefile from GeoBoundaries API — get_country_shp","text":"iso3 three-letter capitalized character string. Must follow ISO-3166 Alpha-3 country code standard (https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3). path_output file path save country shapefile","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_country_shp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a country shapefile from GeoBoundaries API — get_country_shp","text":"sf class shapefile","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_country_shp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a country shapefile from GeoBoundaries API — get_country_shp","text":"","code":"if (FALSE) {  tmp <- get_country_shp(iso3 = 'MCO') plot(tmp)  }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_elevation.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Mean or Median Elevation from Downloaded DEM Data Using Country Boundaries — get_elevation","title":"Get Mean or Median Elevation from Downloaded DEM Data Using Country Boundaries — get_elevation","text":"function calculates mean median elevation given set ISO3 country codes loading downloaded DEM files extracting raster values within country's boundary.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_elevation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Mean or Median Elevation from Downloaded DEM Data Using Country Boundaries — get_elevation","text":"","code":"get_elevation(PATHS, iso_codes, method = \"median\")"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_elevation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Mean or Median Elevation from Downloaded DEM Data Using Country Boundaries — get_elevation","text":"PATHS list containing paths DEM data stored. Typically generated get_paths() function include: DATA_DEM: Path directory DEM rasters saved (GeoTIFF format). DATA_SHAPEFILES: Path directory shapefiles saved. iso_codes character vector ISO3 country codes elevation data calculated. method character string specifying method use calculating elevation statistics. Can \"mean\" \"median\" (default \"median\").","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_elevation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Mean or Median Elevation from Downloaded DEM Data Using Country Boundaries — get_elevation","text":"data frame ISO3 codes, country names, calculated mean median elevation country.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_elevation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Mean or Median Elevation from Downloaded DEM Data Using Country Boundaries — get_elevation","text":"","code":"if (FALSE) { # Define the ISO3 country codes iso_codes <- c(\"ZAF\", \"KEN\", \"NGA\")  # Get paths for data storage PATHS <- get_paths()  # Calculate mean elevation for the countries mean_elevations <- get_elevation(iso_codes, PATHS, method = \"mean\") print(mean_elevations) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_generation_time_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the Generation Time Distribution for Days and Weeks — get_generation_time_distribution","title":"Estimate the Generation Time Distribution for Days and Weeks — get_generation_time_distribution","text":"function generates probability distribution generation time cholera based gamma distribution. allows specification mean generation time, adjusts shape rate parameters. day-wise week-wise probabilities saved CSV files.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_generation_time_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the Generation Time Distribution for Days and Weeks — get_generation_time_distribution","text":"","code":"get_generation_time_distribution(PATHS, mean_generation_time)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_generation_time_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the Generation Time Distribution for Days and Weeks — get_generation_time_distribution","text":"PATHS list containing paths output tables saved. Typically generated get_paths() function include: MODEL_INPUT: Path directory model input data saved. DOCS_TABLES: Path directory day-wise week-wise generation time tables saved. mean_generation_time numeric value representing desired mean generation time (days). value used adjust shape rate parameters gamma distribution.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_ggplot_legend.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the Legend from a ggplot Object — get_ggplot_legend","title":"Extract the Legend from a ggplot Object — get_ggplot_legend","text":"function extracts legend ggplot object returns grob (graphical object). extracted legend can used independently, instance, combine legend plots.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_ggplot_legend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the Legend from a ggplot Object — get_ggplot_legend","text":"","code":"get_ggplot_legend(plot)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_ggplot_legend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the Legend from a ggplot Object — get_ggplot_legend","text":"plot ggplot object legend extracted.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_ggplot_legend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the Legend from a ggplot Object — get_ggplot_legend","text":"grob representing legend ggplot object.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_ggplot_legend.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract the Legend from a ggplot Object — get_ggplot_legend","text":"function converts ggplot object grob using ggplotGrob() extracts legend, stored grob name \"guide-box\". function can used separate legend plot combine plots needed.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_ggplot_legend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the Legend from a ggplot Object — get_ggplot_legend","text":"","code":"# Create a simple ggplot object p <- ggplot2::ggplot(mtcars, ggplot2::aes(x = wt, y = mpg, color = factor(gear))) +      ggplot2::geom_point() +      ggplot2::scale_color_discrete(name = \"Gear\")  # Extract the legend from the plot legend <- get_ggplot_legend(p)  # Display the extracted legend grid::grid.draw(legend)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_greek_unicode.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Unicode Hex Key for a Greek Letter — get_greek_unicode","title":"Get Unicode Hex Key for a Greek Letter — get_greek_unicode","text":"function returns Unicode hex key specified Greek letter name. user can choose whether returned letter uppercase lowercase.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_greek_unicode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Unicode Hex Key for a Greek Letter — get_greek_unicode","text":"","code":"get_greek_unicode(letter_name, uppercase = TRUE)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_greek_unicode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Unicode Hex Key for a Greek Letter — get_greek_unicode","text":"letter_name character string representing name Greek letter. Accepted values English names Greek letters (e.g., \"alpha\", \"beta\", \"gamma\"). uppercase logical argument indicating whether return uppercase version Greek letter (default TRUE).","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_greek_unicode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Unicode Hex Key for a Greek Letter — get_greek_unicode","text":"character string representing Unicode hex key specified Greek letter. can used plots, titles, text Greek symbols needed.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_greek_unicode.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Unicode Hex Key for a Greek Letter — get_greek_unicode","text":"function allows users obtain Unicode hex representation common Greek letter name. function supports uppercase lowercase Greek letters. returned hex key can inserted directly strings titles, example, ggplot2 plots.","code":""},{"path":[]},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_greek_unicode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Unicode Hex Key for a Greek Letter — get_greek_unicode","text":"","code":"# Get the Unicode for uppercase Alpha get_greek_unicode(\"alpha\", TRUE) #> [1] \"Α\"  # Get the Unicode for lowercase Omega get_greek_unicode(\"omega\", FALSE) #> [1] \"ω\"  # Get the Unicode for uppercase Sigma get_greek_unicode(\"sigma\", TRUE) #> [1] \"Σ\"  # Use in ggplot2 title ggplot() + labs(title = paste(\"Example with Greek letter\", get_greek_unicode(\"Psi\", TRUE))) #> Error in ggplot(): could not find function \"ggplot\""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_immune_decay_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Immune Decay Data — get_immune_decay_data","title":"Get Immune Decay Data — get_immune_decay_data","text":"function retrieves immune durability data based known values various studies. data includes time (days), effectiveness, confidence intervals studies.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_immune_decay_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Immune Decay Data — get_immune_decay_data","text":"","code":"get_immune_decay_data(PATHS)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_immune_decay_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Immune Decay Data — get_immune_decay_data","text":"PATHS list containing paths data figures saved. Typically generated get_paths() function include: DATA_IMMUNE_DURABILITY: Path directory immune durability data saved.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_immune_decay_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Immune Decay Data — get_immune_decay_data","text":"data frame columns: day, effectiveness, effectiveness_hi, effectiveness_lo, source.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_immune_decay_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Immune Decay Data — get_immune_decay_data","text":"","code":"if (FALSE) { # Assuming PATHS is generated from get_paths() PATHS <- get_paths() immune_data <- get_immune_decay_data(PATHS) print(immune_data) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_paths.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Directory Paths for the MOSAIC Project — get_paths","title":"Generate Directory Paths for the MOSAIC Project — get_paths","text":"get_paths() function generates structured list file paths different data document directories MOSAIC project, based provided root directory.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Directory Paths for the MOSAIC Project — get_paths","text":"","code":"get_paths(root = NULL)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_paths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Directory Paths for the MOSAIC Project — get_paths","text":"root string specifying root directory MOSAIC project. paths generated relative root.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_paths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Directory Paths for the MOSAIC Project — get_paths","text":"named list containing following paths: ROOT root directory provided user. DATA_RAW Path raw data directory (\"MOSAIC-data/data/raw\"). DATA_PROCESSED Path processed data directory (\"MOSAIC-data/data/processed\"). MODEL_INPUT NULL, reserved path model input (applicable). MODEL_OUTPUT NULL, reserved path model output (applicable). DOCS_FIGURES Path figures directory (\"MOSAIC-docs/figures\"). DOCS_TABLES Path tables directory (\"MOSAIC-docs/tables\"). DOCS_PARAMS Path parameters directory (\"MOSAIC-docs/parameters\").","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_paths.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Directory Paths for the MOSAIC Project — get_paths","text":"function helps organize directory structure data document storage MOSAIC project generating paths raw data, processed data, figures, tables, parameters. paths returned named list can used streamline access various project-related directories.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_paths.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Directory Paths for the MOSAIC Project — get_paths","text":"","code":"if (FALSE) { root_dir <- \"/{full file path}/MOSAIC\" PATHS <- get_paths(root_dir) print(PATHS$DATA_RAW) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_suspected_cases.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Proportion of Suspected Cholera Cases and Save Parameter Data Frame — get_suspected_cases","title":"Get Proportion of Suspected Cholera Cases and Save Parameter Data Frame — get_suspected_cases","text":"function generates parameters proportion suspected cholera cases (rho) saves parameter data frame.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_suspected_cases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Proportion of Suspected Cholera Cases and Save Parameter Data Frame — get_suspected_cases","text":"","code":"get_suspected_cases(PATHS)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_suspected_cases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Proportion of Suspected Cholera Cases and Save Parameter Data Frame — get_suspected_cases","text":"PATHS list containing paths parameter data saved. Typically generated get_paths() function include: MODEL_INPUT: Path directory parameter data frame saved.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_suspected_cases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Proportion of Suspected Cholera Cases and Save Parameter Data Frame — get_suspected_cases","text":"data frame containing parameter values proportion suspected cholera cases (rho).","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_symptomatic_prop_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Symptomatic Proportion Data — get_symptomatic_prop_data","title":"Get Symptomatic Proportion Data — get_symptomatic_prop_data","text":"function creates data frame studies reporting proportion cholera infections symptomatic saves CSV file.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_symptomatic_prop_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Symptomatic Proportion Data — get_symptomatic_prop_data","text":"","code":"get_symptomatic_prop_data(PATHS)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_symptomatic_prop_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Symptomatic Proportion Data — get_symptomatic_prop_data","text":"PATHS list containing paths symptomatic proportion data saved. Typically generated get_paths() function include: DATA_PROCESSED: Path save symptomatic proportion data.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_symptomatic_prop_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Symptomatic Proportion Data — get_symptomatic_prop_data","text":"function return value saves data frame CSV file.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_symptomatic_prop_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Symptomatic Proportion Data — get_symptomatic_prop_data","text":"","code":"if (FALSE) { # Generate and save symptomatic proportion data PATHS <- get_paths() get_symptomatic_prop_data(PATHS) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_vaccine_effectiveness_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Vaccine Effectiveness Data — get_vaccine_effectiveness_data","title":"Get Vaccine Effectiveness Data — get_vaccine_effectiveness_data","text":"function saves dataset containing vaccine effectiveness data extracted multiple studies. data saved CSV file.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_vaccine_effectiveness_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Vaccine Effectiveness Data — get_vaccine_effectiveness_data","text":"","code":"get_vaccine_effectiveness_data(PATHS)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/get_vaccine_effectiveness_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Vaccine Effectiveness Data — get_vaccine_effectiveness_data","text":"PATHS list containing paths data saved. Typically generated get_paths() function include: DATA_VACCINE_EFFECTIVENESS: Path directory vaccine effectiveness data saved.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/install_dependencies.html","id":null,"dir":"Reference","previous_headings":"","what":"Install R and Python Dependencies for MOSAIC — install_dependencies","title":"Install R and Python Dependencies for MOSAIC — install_dependencies","text":"Sets Python virtual environment installs packages listed requirements.txt, along R packages keras3 tensorflow. Ensures Keras + TensorFlow backend usable.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/install_dependencies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install R and Python Dependencies for MOSAIC — install_dependencies","text":"","code":"install_dependencies(force = FALSE)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/install_dependencies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Install R and Python Dependencies for MOSAIC — install_dependencies","text":"force Logical. TRUE, deletes recreates Python virtual environment scratch. Default FALSE.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/install_dependencies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Install R and Python Dependencies for MOSAIC — install_dependencies","text":"return value. Side effect: installs R Python dependencies configures backend.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/inv_logit.html","id":null,"dir":"Reference","previous_headings":"","what":"Inverse Logit (Logistic) Transformation — inv_logit","title":"Inverse Logit (Logistic) Transformation — inv_logit","text":"Applies inverse logit (logistic) transformation real-valued input, mapping real line (-Inf, Inf) interval (0, 1).","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/inv_logit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inverse Logit (Logistic) Transformation — inv_logit","text":"","code":"inv_logit(x)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/inv_logit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inverse Logit (Logistic) Transformation — inv_logit","text":"x numeric vector real values.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/inv_logit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inverse Logit (Logistic) Transformation — inv_logit","text":"numeric vector value inverse logit corresponding input, representing probability range (0, 1).","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/inv_logit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Inverse Logit (Logistic) Transformation — inv_logit","text":"inverse logit function defined : $$inv\\_logit(x) = \\frac{e^x}{1 + e^x}$$ often used map real-valued predictions (e.g., logistic regression) back probabilities.","code":""},{"path":[]},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/inv_logit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inverse Logit (Logistic) Transformation — inv_logit","text":"","code":"inv_logit(0)     # Returns 0.5 #> [1] 0.5 inv_logit(1.39)  # Returns approximately 0.8 #> [1] 0.8005922 inv_logit(-1.39) # Returns approximately 0.2 #> [1] 0.1994078"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/iso_codes_africa.html","id":null,"dir":"Reference","previous_headings":"","what":"ISO3 Country Codes for All African Countries — iso_codes_africa","title":"ISO3 Country Codes for All African Countries — iso_codes_africa","text":"character vector containing ISO3 country codes 54 countries Africa.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/iso_codes_africa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ISO3 Country Codes for All African Countries — iso_codes_africa","text":"","code":"iso_codes_africa"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/iso_codes_africa.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ISO3 Country Codes for All African Countries — iso_codes_africa","text":"character vector ISO3 country codes.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/iso_codes_africa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ISO3 Country Codes for All African Countries — iso_codes_africa","text":"","code":"# Access ISO3 codes for all African countries iso_codes_africa #>  [1] \"AGO\" \"BDI\" \"BEN\" \"BFA\" \"BWA\" \"CAF\" \"CIV\" \"CMR\" \"COD\" \"COG\" \"COM\" \"CPV\" #> [13] \"DJI\" \"DZA\" \"EGY\" \"ERI\" \"ETH\" \"GAB\" \"GHA\" \"GIN\" \"GMB\" \"GNB\" \"GNQ\" \"KEN\" #> [25] \"LBR\" \"LBY\" \"LSO\" \"MAR\" \"MDG\" \"MLI\" \"MOZ\" \"MRT\" \"MUS\" \"MWI\" \"NAM\" \"NER\" #> [37] \"NGA\" \"RWA\" \"SDN\" \"SEN\" \"SLE\" \"SOM\" \"SSD\" \"STP\" \"SWZ\" \"SYC\" \"TCD\" \"TGO\" #> [49] \"TUN\" \"TZA\" \"UGA\" \"ZAF\" \"ZMB\" \"ZWE\""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/iso_codes_africa_central.html","id":null,"dir":"Reference","previous_headings":"","what":"ISO3 Country Codes for Central African Countries — iso_codes_africa_central","title":"ISO3 Country Codes for Central African Countries — iso_codes_africa_central","text":"character vector containing ISO3 country codes 8 countries Central Africa.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/iso_codes_africa_central.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ISO3 Country Codes for Central African Countries — iso_codes_africa_central","text":"","code":"iso_codes_africa_central"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/iso_codes_africa_central.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ISO3 Country Codes for Central African Countries — iso_codes_africa_central","text":"character vector ISO3 country codes.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/iso_codes_africa_central.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ISO3 Country Codes for Central African Countries — iso_codes_africa_central","text":"","code":"# Access ISO3 codes for Central African countries iso_codes_africa_central #> [1] \"AGO\" \"CAF\" \"COD\" \"COG\" \"GAB\" \"GNQ\" \"STP\" \"TCD\""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/iso_codes_africa_east.html","id":null,"dir":"Reference","previous_headings":"","what":"ISO3 Country Codes for East African Countries — iso_codes_africa_east","title":"ISO3 Country Codes for East African Countries — iso_codes_africa_east","text":"character vector containing ISO3 country codes 14 countries East Africa.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/iso_codes_africa_east.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ISO3 Country Codes for East African Countries — iso_codes_africa_east","text":"","code":"iso_codes_africa_east"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/iso_codes_africa_east.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ISO3 Country Codes for East African Countries — iso_codes_africa_east","text":"character vector ISO3 country codes.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/iso_codes_africa_east.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ISO3 Country Codes for East African Countries — iso_codes_africa_east","text":"","code":"# Access ISO3 codes for East African countries iso_codes_africa_east #>  [1] \"BDI\" \"COM\" \"DJI\" \"ERI\" \"ETH\" \"KEN\" \"MDG\" \"MWI\" \"RWA\" \"SOM\" \"SSD\" \"SYC\" #> [13] \"TZA\" \"UGA\""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/iso_codes_africa_north.html","id":null,"dir":"Reference","previous_headings":"","what":"ISO3 Country Codes for North African Countries — iso_codes_africa_north","title":"ISO3 Country Codes for North African Countries — iso_codes_africa_north","text":"character vector containing ISO3 country codes 6 countries North Africa.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/iso_codes_africa_north.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ISO3 Country Codes for North African Countries — iso_codes_africa_north","text":"","code":"iso_codes_africa_north"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/iso_codes_africa_north.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ISO3 Country Codes for North African Countries — iso_codes_africa_north","text":"character vector ISO3 country codes.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/iso_codes_africa_north.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ISO3 Country Codes for North African Countries — iso_codes_africa_north","text":"","code":"# Access ISO3 codes for North African countries iso_codes_africa_north #> [1] \"DZA\" \"EGY\" \"LBY\" \"MAR\" \"SDN\" \"TUN\""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/iso_codes_africa_south.html","id":null,"dir":"Reference","previous_headings":"","what":"ISO3 Country Codes for Southern African Countries — iso_codes_africa_south","title":"ISO3 Country Codes for Southern African Countries — iso_codes_africa_south","text":"character vector containing ISO3 country codes 7 countries Southern Africa.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/iso_codes_africa_south.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ISO3 Country Codes for Southern African Countries — iso_codes_africa_south","text":"","code":"iso_codes_africa_south"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/iso_codes_africa_south.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ISO3 Country Codes for Southern African Countries — iso_codes_africa_south","text":"character vector ISO3 country codes.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/iso_codes_africa_south.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ISO3 Country Codes for Southern African Countries — iso_codes_africa_south","text":"","code":"# Access ISO3 codes for Southern African countries iso_codes_africa_south #> [1] \"BWA\" \"LSO\" \"NAM\" \"SWZ\" \"ZAF\" \"ZMB\" \"ZWE\""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/iso_codes_africa_west.html","id":null,"dir":"Reference","previous_headings":"","what":"ISO3 Country Codes for West African Countries — iso_codes_africa_west","title":"ISO3 Country Codes for West African Countries — iso_codes_africa_west","text":"character vector containing ISO3 country codes 16 countries West Africa.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/iso_codes_africa_west.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ISO3 Country Codes for West African Countries — iso_codes_africa_west","text":"","code":"iso_codes_africa_west"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/iso_codes_africa_west.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ISO3 Country Codes for West African Countries — iso_codes_africa_west","text":"character vector ISO3 country codes.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/iso_codes_africa_west.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ISO3 Country Codes for West African Countries — iso_codes_africa_west","text":"","code":"# Access ISO3 codes for West African countries iso_codes_africa_west #>  [1] \"BEN\" \"BFA\" \"CIV\" \"CPV\" \"GHA\" \"GIN\" \"GMB\" \"GNB\" \"LBR\" \"MLI\" \"MRT\" \"NER\" #> [13] \"NGA\" \"SEN\" \"SLE\" \"TGO\""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/iso_codes_mosaic.html","id":null,"dir":"Reference","previous_headings":"","what":"ISO3 Country Codes for MOSAIC Modeling Framework — iso_codes_mosaic","title":"ISO3 Country Codes for MOSAIC Modeling Framework — iso_codes_mosaic","text":"character vector containing ISO3 country codes 41 countries modeled MOSAIC framework.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/iso_codes_mosaic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ISO3 Country Codes for MOSAIC Modeling Framework — iso_codes_mosaic","text":"","code":"iso_codes_mosaic"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/iso_codes_mosaic.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ISO3 Country Codes for MOSAIC Modeling Framework — iso_codes_mosaic","text":"character vector ISO3 country codes.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/iso_codes_mosaic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ISO3 Country Codes for MOSAIC Modeling Framework — iso_codes_mosaic","text":"","code":"# Access ISO3 codes for countries modeled in the MOSAIC framework iso_codes_mosaic #>  [1] \"AGO\" \"BDI\" \"BEN\" \"BFA\" \"BWA\" \"CAF\" \"CIV\" \"CMR\" \"COD\" \"COG\" \"ERI\" \"ETH\" #> [13] \"GAB\" \"GHA\" \"GIN\" \"GMB\" \"GNB\" \"GNQ\" \"KEN\" \"LBR\" \"MLI\" \"MOZ\" \"MRT\" \"MWI\" #> [25] \"NAM\" \"NER\" \"NGA\" \"RWA\" \"SEN\" \"SLE\" \"SOM\" \"SSD\" \"SWZ\" \"TCD\" \"TGO\" \"TZA\" #> [37] \"UGA\" \"ZAF\" \"ZMB\" \"ZWE\""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/iso_codes_ssa.html","id":null,"dir":"Reference","previous_headings":"","what":"ISO3 Country Codes for Sub-Saharan African Countries — iso_codes_ssa","title":"ISO3 Country Codes for Sub-Saharan African Countries — iso_codes_ssa","text":"character vector containing ISO3 country codes 48 countries Sub-Saharan Africa.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/iso_codes_ssa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ISO3 Country Codes for Sub-Saharan African Countries — iso_codes_ssa","text":"","code":"iso_codes_ssa"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/iso_codes_ssa.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ISO3 Country Codes for Sub-Saharan African Countries — iso_codes_ssa","text":"character vector ISO3 country codes.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/iso_codes_ssa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ISO3 Country Codes for Sub-Saharan African Countries — iso_codes_ssa","text":"","code":"# Access ISO3 codes for Sub-Saharan African countries iso_codes_ssa #>  [1] \"AGO\" \"BDI\" \"BEN\" \"BFA\" \"BWA\" \"CAF\" \"CIV\" \"CMR\" \"COD\" \"COG\" \"COM\" \"CPV\" #> [13] \"DJI\" \"ERI\" \"ETH\" \"GAB\" \"GHA\" \"GIN\" \"GMB\" \"GNB\" \"GNQ\" \"KEN\" \"LBR\" \"LSO\" #> [25] \"MDG\" \"MLI\" \"MOZ\" \"MRT\" \"MUS\" \"MWI\" \"NAM\" \"NER\" \"NGA\" \"RWA\" \"SDN\" \"SEN\" #> [37] \"SLE\" \"SOM\" \"SSD\" \"STP\" \"SWZ\" \"SYC\" \"TCD\" \"TGO\" \"TZA\" \"UGA\" \"ZAF\" \"ZMB\" #> [49] \"ZWE\""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/iso_codes_who_afro.html","id":null,"dir":"Reference","previous_headings":"","what":"ISO3 Country Codes for WHO AFRO Region Countries — iso_codes_who_afro","title":"ISO3 Country Codes for WHO AFRO Region Countries — iso_codes_who_afro","text":"character vector containing ISO3 country codes 47 countries African Region (AFRO).","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/iso_codes_who_afro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ISO3 Country Codes for WHO AFRO Region Countries — iso_codes_who_afro","text":"","code":"iso_codes_who_afro"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/iso_codes_who_afro.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ISO3 Country Codes for WHO AFRO Region Countries — iso_codes_who_afro","text":"character vector ISO3 country codes.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/iso_codes_who_afro.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ISO3 Country Codes for WHO AFRO Region Countries — iso_codes_who_afro","text":"","code":"# Access ISO3 codes for WHO AFRO Region countries iso_codes_who_afro #>  [1] \"AGO\" \"BDI\" \"BEN\" \"BFA\" \"BWA\" \"CAF\" \"CIV\" \"CMR\" \"COD\" \"COG\" \"COM\" \"CPV\" #> [13] \"DJI\" \"DZA\" \"ERI\" \"ETH\" \"GAB\" \"GHA\" \"GIN\" \"GMB\" \"GNB\" \"GNQ\" \"KEN\" \"LBR\" #> [25] \"LSO\" \"MDG\" \"MLI\" \"MOZ\" \"MRT\" \"MUS\" \"MWI\" \"NAM\" \"NER\" \"NGA\" \"RWA\" \"SDN\" #> [37] \"SEN\" \"SLE\" \"SOM\" \"SSD\" \"STP\" \"SWZ\" \"SYC\" \"TCD\" \"TGO\" \"TZA\" \"UGA\" \"ZAF\" #> [49] \"ZMB\" \"ZWE\""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/load_or_install_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"Load or Install Required Packages (with GitHub handling for mobility, propvacc, and MOSAIC) — load_or_install_packages","title":"Load or Install Required Packages (with GitHub handling for mobility, propvacc, and MOSAIC) — load_or_install_packages","text":"function checks whether specified packages installed. package installed, installed. Special handling included mobility, propvacc, MOSAIC, installed GitHub.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/load_or_install_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load or Install Required Packages (with GitHub handling for mobility, propvacc, and MOSAIC) — load_or_install_packages","text":"","code":"load_or_install_packages(packages)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/load_or_install_packages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load or Install Required Packages (with GitHub handling for mobility, propvacc, and MOSAIC) — load_or_install_packages","text":"packages character vector package names load install.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/load_or_install_packages.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load or Install Required Packages (with GitHub handling for mobility, propvacc, and MOSAIC) — load_or_install_packages","text":"packages, function installs CRAN already installed. Special cases handled following packages: mobility: Installed GitHub https://github.com/COVID-19-Mobility-Data-Network/mobility. propvacc: Installed GitHub https://github.com/gilesjohnr/propvacc. MOSAIC: Installed GitHub https://github.com/InstituteforDiseaseModeling/MOSAIC-pkg.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/load_or_install_packages.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load or Install Required Packages (with GitHub handling for mobility, propvacc, and MOSAIC) — load_or_install_packages","text":"","code":"if (FALSE) { load_or_install_packages(c(\"ggplot2\", \"mobility\", \"propvacc\", \"MOSAIC\")) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/logit.html","id":null,"dir":"Reference","previous_headings":"","what":"Logit Transformation — logit","title":"Logit Transformation — logit","text":"Applies logit transformation probability value, mapping interval (0, 1) real line (-Inf, Inf).","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/logit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logit Transformation — logit","text":"","code":"logit(p)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/logit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logit Transformation — logit","text":"p numeric vector probabilities, value must interval (0, 1).","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/logit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logit Transformation — logit","text":"numeric vector value logit corresponding input probability. output range (-Inf, Inf).","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/logit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Logit Transformation — logit","text":"logit function defined : $$logit(p) = \\log\\left(\\frac{p}{1 - p}\\right)$$ commonly used logistic regression models probabilities need mapped real-valued scale.","code":""},{"path":[]},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/logit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Logit Transformation — logit","text":"","code":"logit(0.5)   # Returns 0 #> [1] 0 logit(0.8)   # Positive value #> [1] 1.386294 logit(0.2)   # Negative value #> [1] -1.386294"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/make_LASER_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Configuration File for LASER — make_LASER_config","title":"Create a Configuration File for LASER — make_LASER_config","text":"function generates JSON/HDF5/YAML/OBJ configuration file used LASER model simulation parameters. validates input parameters , output file path provided, writes parameters file. file extension determines output format used: .json .json.gz → written write_list_to_json, .h5, .h5.gz → written write_list_to_hdf5, .yaml .yaml.gz → written write_list_to_yaml. .obj .obj.gz → written write_list_to_obj (Python-compatible).","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/make_LASER_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Configuration File for LASER — make_LASER_config","text":"","code":"make_LASER_config(   output_file_path = NULL,   compress = FALSE,   seed = NULL,   date_start = NULL,   date_stop = NULL,   location_id = NULL,   location_name = NULL,   N_j_initial = NULL,   S_j_initial = NULL,   E_j_initial = NULL,   I_j_initial = NULL,   R_j_initial = NULL,   V1_j_initial = NULL,   V2_j_initial = NULL,   b_jt = NULL,   d_jt = NULL,   nu_1_jt = NULL,   nu_2_jt = NULL,   phi_1 = NULL,   phi_2 = NULL,   omega_1 = NULL,   omega_2 = NULL,   iota = NULL,   gamma_1 = NULL,   gamma_2 = NULL,   epsilon = NULL,   mu_jt = NULL,   rho = NULL,   sigma = NULL,   longitude = NULL,   latitude = NULL,   mobility_omega = NULL,   mobility_gamma = NULL,   tau_i = NULL,   beta_j0_hum = NULL,   a_1_j = NULL,   a_2_j = NULL,   b_1_j = NULL,   b_2_j = NULL,   p = NULL,   alpha_1 = NULL,   alpha_2 = NULL,   beta_j0_env = NULL,   theta_j = NULL,   psi_jt = NULL,   zeta_1 = NULL,   zeta_2 = NULL,   kappa = NULL,   decay_days_short = NULL,   decay_days_long = NULL,   decay_shape_1 = NULL,   decay_shape_2 = NULL,   return = NULL )"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/make_LASER_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Configuration File for LASER — make_LASER_config","text":"output_file_path character string representing full file path output file. Must .json, .json.gz, .h5, .hdf5, .h5.gz, .yaml, .yaml.gz extension. NULL, file written parameters returned. seed Integer scalar giving random seed value simulation run. date_start Start date simulation period \"YYYY-MM-DD\" format. provided character string, converted Date object. date_stop End date simulation period \"YYYY-MM-DD\" format. provided character string, converted Date object. location_id vector integers giving numerical index metapopulations. location_name character vector giving names metapopulation location. order names must match used initial population vectors. N_j_initial named numeric integer vector length equal location_id giving total initial population size location. Names must match values location_name. S_j_initial named numeric integer vector length equal location_id giving starting number susceptible individuals location. Names must match location_name. E_j_initial named numeric integer vector length equal location_id giving starting number exposed individuals location. Names must match location_name. I_j_initial named numeric integer vector length equal location_id giving starting number infected individuals location. Names must match location_name. R_j_initial named numeric integer vector length equal location_id giving starting number recovered individuals location. Names must match location_name. V1_j_initial named numeric integer vector length equal location_id giving starting number individuals vaccine compartment V1 location. Names must match location_name. V2_j_initial named numeric integer vector length equal location_id giving starting number individuals vaccine compartment V2 location. Names must match location_name. b_jt matrix birth rates rows equal length(location_id) columns equal daily sequence date_start date_stop. d_jt matrix mortality rates rows equal length(location_id) columns equal daily sequence date_start date_stop. nu_1_jt matrix first-dose OCV vaccinations location time step. nu_2_jt matrix second-dose OCV vaccinations location time step. phi_1 Effectiveness one dose OCV (numeric 0, 1). phi_2 Effectiveness two doses OCV (numeric 0, 1). omega_1 Waning immunity rate one dose (numeric >= 0). omega_2 Waning immunity rate two doses (numeric >= 0). iota Incubation period (numeric > 0). gamma_1 Recovery rate severe infection (numeric >= 0). gamma_2 Recovery rate mild infection (numeric >= 0). epsilon Waning immunity rate (numeric >= 0). mu_jt matrix time-varying probabilities mortality due infection, rows equal length(location_id) columns equal length(t). values must numeric 0 1. rho Proportion true infections (numeric 0, 1). sigma Proportion symptomatic infections (numeric 0, 1). longitude numeric vector longitudes location. Must length location_id. latitude numeric vector latitudes location. Must length location_id. mobility_omega Exponent weight destination population gravity mobility model. Must numeric ≥ 0. mobility_gamma Exponent weight distance decay gravity mobility model. Must numeric ≥ 0. tau_i Departure probability origin location (numeric vector length(location_id) 0, 1). beta_j0_hum Baseline human--human transmission rate (numeric vector length(location_id)). a_1_j Vector sine amplitude coefficients (1st harmonic) location. Numeric, length = length(location_id). a_2_j Vector sine amplitude coefficients (2nd harmonic) location. Numeric, length = length(location_id). b_1_j Vector cosine amplitude coefficients (1st harmonic) location. Numeric, length = length(location_id). b_2_j Vector cosine amplitude coefficients (2nd harmonic) location. Numeric, length = length(location_id). p Period seasonal forcing function. Scalar numeric > 0. Default 366 daily annual seasonality including leap year. alpha_1 Transmission parameter mixing (numeric 0, 1). alpha_2 Transmission parameter density dependence (numeric 0, 1). beta_j0_env Baseline environment--human transmission rate (numeric vector length(location_id)). theta_j Proportion adequate WASH (numeric vector length(location_id) 0, 1). psi_jt Matrix environmental suitability values (matrix rows = length(location_id) columns equal daily sequence date_start date_stop). zeta_1 Shedding rate (numeric > 0). zeta_2 Shedding rate (numeric > 0; must less zeta_1). kappa Concentration required 50% infection (numeric > 0). decay_days_short Time constant (days) short-term survival V. cholerae environment. Must > 0 < decay_days_long. decay_days_long Time constant (days) long-term survival V. cholerae environment. Must > 0 > decay_days_short. decay_shape_1 First shape parameter beta distribution controlling environmental suitability maps decay rate V. cholerae environment. Must numeric > 0. decay_shape_2 Second shape parameter beta distribution controlling environmental suitability maps decay rate V. cholerae environment. Must numeric > 0. return character vector model quantities return running LASER model. element one following: \"LL\" Log-likelihood fitted model. \"S\" Number susceptible individuals. \"E\" Number exposed (latent) individuals. \"\" Number infectious individuals. \"R\" Number recovered individuals. \"V1\" Number individuals one dose vaccine. Includes V1 subcompartments. \"V2\" Number individuals two doses vaccine. Includes V2 subcompartments. \"W\" Environmental concentration V. cholerae. \"C\" Estimated number symptomatic cholera cases. \"D\" Estimated number cholera deaths.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/make_LASER_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Configuration File for LASER — make_LASER_config","text":"Returns validated list parameters. output_file_path provided, parameters written file format determined file extension.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/make_LASER_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Configuration File for LASER — make_LASER_config","text":"","code":"if (FALSE) { make_LASER_config(      output_file_path = \"parameters.json\",      compress = TRUE,      seed = 123,      date_start = \"2024-12-01\",      date_stop = \"2024-12-31\",      location_id = 1:2,      location_name = c(\"Location A\", \"Location B\"),      N_j_initial = c(\"Location A\" = 1000, \"Location B\" = 1000),      S_j_initial = c(\"Location A\" = 900, \"Location B\" = 900),      E_j_initial = c(\"Location A\" = 0, \"Location B\" = 0),      I_j_initial = c(\"Location A\" = 50, \"Location B\" = 50),      R_j_initial = c(\"Location A\" = 50, \"Location B\" = 50),      V1_j_initial = c(\"Location A\" = 0, \"Location B\" = 0),      V2_j_initial = c(\"Location A\" = 0, \"Location B\" = 0),      b_jt = matrix(data = 0.0015, nrow = 2, ncol = 366),      d_jt = matrix(data = 0.001, nrow = 2, ncol = 366),      nu_1_jt = matrix(data = 0, nrow = 2, ncol = 366),      nu_2_jt = matrix(data = 0, nrow = 2, ncol = 366),      phi_1 = 0.8,      phi_2 = 0.85,      omega_1 = 0.1,      omega_2 = 0.12,      iota = 1.4,      gamma_1 = 0.2,      gamma_2 = 0.25,      epsilon = 0.05,      mu_jt = matrix(0.01, nrow = 2, ncol = 31),      rho = 0.9,      sigma = 0.5,      beta_j0_hum = c(0.05, 0.03),      a_1_j = c(0.02, 0.02),      a_2_j = c(0.01, 0.01),      b_1_j = c(0.03, 0.03),      b_2_j = c(0.01, 0.01),      p     = 365,      longitude = c(36.8, 37.0),      latitude = c(-1.3, -1.2),      mobility_omega = 1.0,      mobility_gamma = 2.0,      tau_i = c(0.1, 0.2),      alpha_1 = 0.95,      alpha_2 = 1,      beta_j0_env = c(0.02, 0.04),      theta_j = c(0.6, 0.7),      psi_jt = matrix(data = 0, nrow = 2, ncol = 366),      zeta_1 = 0.5,      zeta_2 = 0.4,      kappa = 10^5,      decay_days_short  = 3,      decay_days_long   = 90,      decay_shape_1     = 1,      decay_shape_2     = 1,      return = \"LL\" ) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/make_lagged_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Lagged Versions of Data — make_lagged_data","title":"Create Lagged Versions of Data — make_lagged_data","text":"function generates lagged versions columns given data frame. creates new columns lag, allowing time series data structured way includes previous time steps predictors.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/make_lagged_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Lagged Versions of Data — make_lagged_data","text":"","code":"make_lagged_data(x, lags)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/make_lagged_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Lagged Versions of Data — make_lagged_data","text":"x data frame tibble containing variables lagged versions created. lags vector lag values indicating many time steps lag data. example, lags = 1:3 create 1-lagged, 2-lagged, 3-lagged versions variable.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/make_lagged_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Lagged Versions of Data — make_lagged_data","text":"data frame containing original data lagged versions variables. lagged columns named format <column_name>_lag_<lag>.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/make_lagged_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Lagged Versions of Data — make_lagged_data","text":"function takes data frame creates new columns lagged versions original columns. number lags specified lags argument. function creates new columns lag value, appending lag number original column names.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/make_lagged_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Lagged Versions of Data — make_lagged_data","text":"","code":"if (FALSE) { # Example usage of create_lagged_data: data <- data.frame(var1 = 1:10, var2 = 11:20) make_lagged_data(data, lags = 1:2) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/make_param_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Template for Parameter Values — make_param_df","title":"Get Template for Parameter Values — make_param_df","text":"function generates template long-form data frame parameter values, including origin (), destination (j), time (t), used simulate variables sigma.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/make_param_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Template for Parameter Values — make_param_df","text":"","code":"make_param_df(   variable_name = NULL,   variable_description = NULL,   parameter_distribution = NULL,   i = NULL,   j = NULL,   t = NULL,   parameter_name = NULL,   parameter_value = NULL )"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/make_param_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Template for Parameter Values — make_param_df","text":"variable_name character string representing name variable (e.g., 'sigma'). variable_description character string describing variable (e.g., 'proportion symptomatic'). parameter_distribution character string representing distribution parameter (e.g., 'beta'). vector representing origin locations. j vector representing destination locations. t vector representing time points. parameter_name character vector parameter names (e.g., shape1, shape2 beta distribution). parameter_value numeric vector parameter values (corresponding parameter names).","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/make_param_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Template for Parameter Values — make_param_df","text":"data frame containing long-form template parameter values. arguments NULL, empty data frame returned.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/make_param_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Template for Parameter Values — make_param_df","text":"","code":"# Example usage for sigma prm <- list(shape1 = 2, shape2 = 5) param_df <- make_param_df(\"sigma\", \"proportion symptomatic\", \"beta\",                           i = \"A\", j = \"B\", t = 1, names(prm), unlist(prm)) print(param_df) #>   variable_name   variable_description parameter_distribution i j t #> 1         sigma proportion symptomatic                   beta A B 1 #> 2         sigma proportion symptomatic                   beta A B 1 #>   parameter_name parameter_value #> 1         shape1               2 #> 2         shape2               5"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/make_param_yaml.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a YAML File for MOSAIC Model Parameters — make_param_yaml","title":"Create a YAML File for MOSAIC Model Parameters — make_param_yaml","text":"function generates YAML file MOSAIC model simulation parameters returns parameters list file output specified. validates input parameters ensure meet required constraints MOSAIC simulation framework. YAML file output designed use MOSAIC R package ensures compatibility downstream Python-based tools Light-agent Spatial Model ERadication (LASER) platform.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/make_param_yaml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a YAML File for MOSAIC Model Parameters — make_param_yaml","text":"","code":"make_param_yaml(   output_file_path = NULL,   date_start = NULL,   date_stop = NULL,   location_id = NULL,   location_name = NULL,   N_j_initial = NULL,   S_j_initial = NULL,   I_j_initial = NULL,   R_j_initial = NULL,   b_j = NULL,   d_j = NULL,   nu_jt = NULL,   phi = NULL,   omega = NULL,   epsilon = NULL,   gamma = NULL,   mu = NULL,   rho = NULL,   sigma = NULL,   beta_j0_hum = NULL,   beta_j_seasonality = NULL,   tau_i = NULL,   pi_ij = NULL,   alpha = NULL,   beta_j0_env = NULL,   theta_j = NULL,   psi_jt = NULL,   zeta = NULL,   kappa = NULL,   delta_min = NULL,   delta_max = NULL )"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/make_param_yaml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a YAML File for MOSAIC Model Parameters — make_param_yaml","text":"output_file_path character string representing full file path output YAML file (e.g., 'path//parameters.yaml'). NULL, file written. date_start Start date simulation period \"YYYY-MM-DD\" format. date_stop End date simulation period \"YYYY-MM-DD\" format. location_id vector integers giving numerical index metapopulations. location_name character vector giving names metapopulation location, matching length location_id. N_j_initial integer vector length location_id gives total initial population size j location. S_j_initial integer vector length location_id gives starting values number susceptible individuals j location. I_j_initial integer vector length location_id gives starting values number infected individuals j location. R_j_initial integer vector length location_id gives starting values number recovered individuals j location. b_j Birth rate population j. Must numeric, non-negative, length location_id. d_j Mortality rate population j. Must numeric, non-negative, length location_id. nu_jt matrix vaccination rates location (j) time step (t). Must rows equal length(location_id) columns equal daily sequence date_start date_stop. phi Effectiveness Oral Cholera Vaccine (OCV). Must numeric within range 0, 1. omega Waning immunity rate vaccinated individuals. Must numeric scalar greater equal zero. epsilon Waning immunity rate recovered individuals. Must numeric scalar greater equal zero. gamma Recovery rate infected individuals. Must numeric scalar greater equal zero. mu Mortality rate due V. cholerae infection. Must numeric scalar greater equal zero. rho Proportion suspected cholera cases true infections. Must numeric scalar 0 1. sigma Proportion symptomatic V. cholerae infections. Must numeric scalar 0 1. beta_j0_hum Baseline human--human transmission rate location. Must numeric vector length equal location_id values greater equal zero. beta_j_seasonality seasonal derivation mean transmission (beta_j0_hum) j location. seasonality term given Z-score indicating number standard deviations away mean rate transmission. Length 365 day year. Values estimated est_seasonal_dynamics() function. tau_i Departure probability origin location. Must numeric vector length equal location_id values 0 1. pi_ij matrix travel probabilities origin destination locations. Must dimensions equal length(location_id) x length(location_id) values 0 1. alpha Population mixing parameter. Must numeric scalar 0 1. beta_j0_env Baseline environment--human transmission rate location. Must numeric vector length equal location_id values greater equal zero. theta_j Proportion population adequate Water, Sanitation, Hygiene (WASH). Must numeric vector length equal location_id values 0 1. psi_jt 2D matrix environmental suitability values V. cholerae. Must rows equal length(location_id) columns equal daily sequence date_start date_stop, values 0 1. zeta Shedding rate V. cholerae environment. Must numeric scalar greater zero. kappa Concentration V. cholerae required 50% infection probability. Must numeric scalar greater zero. delta_min Minimum environmental decay rate V. cholerae. Must numeric scalar greater zero less delta_max (indicating faster decay rate). delta_max Maximum environmental decay rate V. cholerae.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/make_param_yaml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a YAML File for MOSAIC Model Parameters — make_param_yaml","text":"Returns validated list parameters. output_file_path provided, parameters also written YAML file.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/make_param_yaml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a YAML File for MOSAIC Model Parameters — make_param_yaml","text":"","code":"make_param_yaml(      output_file_path = \"parameters.yaml\",      date_start = \"2024-12-01\",      date_stop = \"2024-12-31\",      location_id = 1:2,      location_name = c(\"Location A\", \"Location B\"),      N_j_initial = as.integer(c(1000, 1000)),      S_j_initial = as.integer(c(999, 999)),      I_j_initial = as.integer(c(1, 1)),      R_j_initial = as.integer(c(0, 0)),      b_j = c(0.01, 0.02),      d_j = c(0.01, 0.02),      nu_jt = matrix(data = 0, nrow = 2, ncol = 31),      phi = 0.8,      omega = 0.1,      epsilon = 0.05,      gamma = 0.2,      mu = 0.01,      rho = 0.9,      sigma = 0.5,      beta_j0_hum = c(0.05, 0.03),      beta_j_seasonality = rep(0, 365),      tau_i = c(0.1, 0.2),      pi_ij = matrix(c(0.8, 0.2, 0.2, 0.8), nrow = 2),      alpha = 0.95,      beta_j0_env = c(0.02, 0.04),      theta_j = c(0.6, 0.7),      psi_jt = matrix(data = 0, nrow = 2, ncol = 31),      zeta = 0.5,      kappa = 10^5,      delta_min = 0.001,      delta_max = 0.01 ) #> Validating parameter values #> Error in make_param_yaml(output_file_path = \"parameters.yaml\", date_start = \"2024-12-01\",     date_stop = \"2024-12-31\", location_id = 1:2, location_name = c(\"Location A\",         \"Location B\"), N_j_initial = as.integer(c(1000, 1000)),     S_j_initial = as.integer(c(999, 999)), I_j_initial = as.integer(c(1,         1)), R_j_initial = as.integer(c(0, 0)), b_j = c(0.01,         0.02), d_j = c(0.01, 0.02), nu_jt = matrix(data = 0,         nrow = 2, ncol = 31), phi = 0.8, omega = 0.1, epsilon = 0.05,     gamma = 0.2, mu = 0.01, rho = 0.9, sigma = 0.5, beta_j0_hum = c(0.05,         0.03), beta_j_seasonality = rep(0, 365), tau_i = c(0.1,         0.2), pi_ij = matrix(c(0.8, 0.2, 0.2, 0.8), nrow = 2),     alpha = 0.95, beta_j0_env = c(0.02, 0.04), theta_j = c(0.6,         0.7), psi_jt = matrix(data = 0, nrow = 2, ncol = 31),     zeta = 0.5, kappa = 10^5, delta_min = 0.001, delta_max = 0.01): date_start must be in the format 'YYYY-MM-DD'. Provided: 2024-12-01"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_CFR_by_country.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Case Fatality Ratios, Total Cases, and Beta Distributions by Country — plot_CFR_by_country","title":"Plot Case Fatality Ratios, Total Cases, and Beta Distributions by Country — plot_CFR_by_country","text":"function creates two separate plots: one case fatality ratios (CFR) confidence intervals total cases country, another Beta distributions selected countries. plots generated based cholera data stored PATHS$DATA_WHO_ANNUAL directory.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_CFR_by_country.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Case Fatality Ratios, Total Cases, and Beta Distributions by Country — plot_CFR_by_country","text":"","code":"plot_CFR_by_country(PATHS)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_CFR_by_country.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Case Fatality Ratios, Total Cases, and Beta Distributions by Country — plot_CFR_by_country","text":"PATHS list containing paths cholera data figures saved. Typically generated get_paths() function include: DATA_WHO_ANNUAL: Path directory processed annual cholera data located. DOCS_FIGURES: Path directory plots saved.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_CFR_by_country.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Case Fatality Ratios, Total Cases, and Beta Distributions by Country — plot_CFR_by_country","text":"list containing two ggplot objects: one CFR total cases, one Beta distributions.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_CFR_by_country.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Case Fatality Ratios, Total Cases, and Beta Distributions by Country — plot_CFR_by_country","text":"","code":"if (FALSE) { PATHS <- get_paths() plot_CFR_by_country(PATHS) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_ENSO_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot ENSO and DMI Data — plot_ENSO_data","title":"Plot ENSO and DMI Data — plot_ENSO_data","text":"function creates facet plot visualize ENSO DMI data time, separate panels variable (DMI, ENSO3, ENSO34, ENSO4). horizontal line zero included indicate neutral value, vertical line marks current date, date displayed vertically left side line.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_ENSO_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot ENSO and DMI Data — plot_ENSO_data","text":"","code":"plot_ENSO_data(PATHS, frequency)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_ENSO_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot ENSO and DMI Data — plot_ENSO_data","text":"PATHS list containing paths ENSO DMI data stored output figures saved. Typically generated get_paths() function include: DATA_ENSO: Path directory containing compiled ENSO DMI data. DOCS_FIGURES: Path directory output figure saved.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_ENSO_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot ENSO and DMI Data — plot_ENSO_data","text":"ggplot facet plot showing time series DMI, ENSO3, ENSO34, ENSO4 time. plot includes: horizontal solid line zero indicate neutral sea surface temperature anomaly. vertical dashed line indicate current date, current date displayed vertical text. Facets variable, allowing easy comparison DMI ENSO regions.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_ENSO_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot ENSO and DMI Data — plot_ENSO_data","text":"function uses ggplot2 create line plot facets variable (DMI, ENSO3, ENSO34, ENSO4). adds horizontal reference line zero vertical line representing current date. current date displayed vertical text aligned left vertical line. data expected date, variable, value format.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_ENSO_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot ENSO and DMI Data — plot_ENSO_data","text":"","code":"if (FALSE) { # Load the ENSO and DMI data and plot it PATHS <- get_paths() plot_ENSO_data(PATHS) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_WHO_vaccination_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot WHO Vaccination Data — plot_WHO_vaccination_data","title":"Plot WHO Vaccination Data — plot_WHO_vaccination_data","text":"function creates plots based vaccination request data, displaying raw redistributed doses, highlighting proportion population vaccinated country. produces two types plots: (1) faceted plot showing cumulative vaccination data countries, (2) detailed plot zooming specific country selected date range.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_WHO_vaccination_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot WHO Vaccination Data — plot_WHO_vaccination_data","text":"","code":"plot_WHO_vaccination_data(PATHS)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_WHO_vaccination_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot WHO Vaccination Data — plot_WHO_vaccination_data","text":"PATHS list file paths, include following elements: MODEL_INPUT path folder containing processed vaccination data (data_vaccinations.csv). DOCS_FIGURES path folder plot images saved.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_WHO_vaccination_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot WHO Vaccination Data — plot_WHO_vaccination_data","text":"function returns R object saves two PNG files: faceted plot vaccination data across countries saved \"vaccination_by_country.png\". zoomed-plot selected country saved \"vaccination_example_<iso_code>.png\".","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_WHO_vaccination_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot WHO Vaccination Data — plot_WHO_vaccination_data","text":"function performs following steps: Loads processed vaccination data CSV file. Extracts last cumulative value country, displaying maximum proportion population vaccinated. Creates faceted plot showing raw doses shipped redistributed doses time, country, independent y-axes. Saves faceted plot PNG file specified folder. Creates zoomed-plot specific country date range, adding text labels highlight important milestones. Saves zoomed-plot PNG file.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_WHO_vaccination_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot WHO Vaccination Data — plot_WHO_vaccination_data","text":"","code":"if (FALSE) { PATHS <- list(   MODEL_INPUT = \"path/to/input/data\",   DOCS_FIGURES = \"path/to/save/figures\" ) plot_WHO_vaccination_data(PATHS) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_WHO_vaccination_maps.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot WHO Vaccination Maps — plot_WHO_vaccination_maps","title":"Plot WHO Vaccination Maps — plot_WHO_vaccination_maps","text":"Generates choropleth maps corresponding bar plots visualize -ICG OCV vaccination data across African countries.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_WHO_vaccination_maps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot WHO Vaccination Maps — plot_WHO_vaccination_maps","text":"","code":"plot_WHO_vaccination_maps(PATHS)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_WHO_vaccination_maps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot WHO Vaccination Maps — plot_WHO_vaccination_maps","text":"PATHS named list containing file paths required input output operations. include: MODEL_INPUT Directory path input CSV file data_vaccinations.csv located. DOCS_FIGURES Directory path generated plots saved.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_WHO_vaccination_maps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot WHO Vaccination Maps — plot_WHO_vaccination_maps","text":"function return value. generates saves PNG file containing vaccination maps barplots annotations.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_WHO_vaccination_maps.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot WHO Vaccination Maps — plot_WHO_vaccination_maps","text":"function performs following steps: Data Loading Processing: Reads vaccination data CSV file, converts date column Date objects, extracts latest cumulative doses distributed corresponding vaccination proportions country. Map Data Retrieval: Obtains map data African countries using rnaturalearth package. Data Merging: Merges vaccination data map data, identifying Sub-Saharan African countries based ISO codes provided MOSAIC::iso_codes_ssa dataset. Color Scale Definition: Defines distinct color scales cumulative doses distributed (green gradient) proportion vaccinated (purple gradient), including appropriate breaks labels. Choropleth Map Creation: Creates two choropleth maps—one cumulative doses distributed another proportion vaccinated—using ggplot2 layering map data accordingly. Barplot Generation: Constructs barplots metric, ordering countries descending values applying corresponding color scales. Plot Arrangement: Utilizes patchwork cowplot packages arrange maps barplots structured grid panel labels \"\" \"B\" adds footnote. Saving Plot: Saves final combined plot PNG file specified DOCS_FIGURES directory.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_WHO_vaccination_maps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot WHO Vaccination Maps — plot_WHO_vaccination_maps","text":"","code":"if (FALSE) { # Define the PATHS list with appropriate directories PATHS <- list(   MODEL_INPUT = \"path/to/model/input\",   DOCS_FIGURES = \"path/to/docs/figures\" )  # Call the function to generate and save the vaccination maps plot_WHO_vaccination_maps(PATHS) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_africa_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Africa Map with Cholera Outbreak Countries — plot_africa_map","title":"Plot Africa Map with Cholera Outbreak Countries — plot_africa_map","text":"function creates map Africa highlighting countries Sub-Saharan Africa cholera outbreaks past 5 10 years. map saved PNG file specified PATHS$DOCS_FIGURES directory.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_africa_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Africa Map with Cholera Outbreak Countries — plot_africa_map","text":"","code":"plot_africa_map(PATHS)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_africa_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Africa Map with Cholera Outbreak Countries — plot_africa_map","text":"PATHS list containing paths figure saved. Typically generated get_paths() function include: DOCS_FIGURES: Path directory map image saved.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_africa_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Africa Map with Cholera Outbreak Countries — plot_africa_map","text":"ggplot object showing map.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_africa_map.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Africa Map with Cholera Outbreak Countries — plot_africa_map","text":"function generates map Africa, highlighting Sub-Saharan African countries cholera outbreaks past 5 10 years. map saved PNG file.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_africa_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Africa Map with Cholera Outbreak Countries — plot_africa_map","text":"","code":"if (FALSE) { # Assuming PATHS is generated from get_paths() PATHS <- get_paths() plot_africa_map(PATHS) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_climate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Weekly Climate Data for a Given Country and Save to File — plot_climate_data","title":"Plot Weekly Climate Data for a Given Country and Save to File — plot_climate_data","text":"function loads weekly climate data Parquet file specified country ISO code plots faceted plot showing available climate variables time. vertical line indicates present day, plot saved DOCS_FIGURES directory.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_climate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Weekly Climate Data for a Given Country and Save to File — plot_climate_data","text":"","code":"plot_climate_data(PATHS, country_iso_code)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_climate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Weekly Climate Data for a Given Country and Save to File — plot_climate_data","text":"PATHS list containing paths climate data stored. Typically generated get_paths() function include: DATA_CLIMATE: Path directory processed climate data stored. DOCS_FIGURES: Path directory output figures saved. country_iso_code character string representing ISO3 code country plot climate data.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_climate_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Weekly Climate Data for a Given Country and Save to File — plot_climate_data","text":"function return value generates saves faceted plot weekly climate data specified country.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_generation_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Generation Time as Gamma Distribution for Days and Weeks — plot_generation_time","title":"Plot Generation Time as Gamma Distribution for Days and Weeks — plot_generation_time","text":"function generates combined plot generation time probability distribution days (based gamma distribution) aggregated weeks. resulting plot saved PNG file.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_generation_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Generation Time as Gamma Distribution for Days and Weeks — plot_generation_time","text":"","code":"plot_generation_time(PATHS)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_generation_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Generation Time as Gamma Distribution for Days and Weeks — plot_generation_time","text":"PATHS list containing paths plot saved. Typically generated get_paths() function include: DOCS_FIGURES: Path directory generation time plot saved.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_mobility.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Mobility Data, Mobility Network, and Results — plot_mobility","title":"Plot Mobility Data, Mobility Network, and Results — plot_mobility","text":"function loads visualizes mobility data, including flight data, travel probabilities, diffusion model estimates, mobility network.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_mobility.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Mobility Data, Mobility Network, and Results — plot_mobility","text":"","code":"plot_mobility(PATHS)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_mobility.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Mobility Data, Mobility Network, and Results — plot_mobility","text":"PATHS list containing paths data, models, figures stored. Typically generated get_paths() function include: MODEL_INPUT: Path directory mobility matrices parameter estimates saved. DATA_SHAPEFILES: Path directory containing shapefiles African countries. DOCS_FIGURES: Path directory figures saved.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_mobility.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Mobility Data, Mobility Network, and Results — plot_mobility","text":"function generates saves mobility-related visualizations PNG files.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_recovery_duration.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot recovery durations and rates for symptomatic and asymptomatic infections — plot_recovery_duration","title":"Plot recovery durations and rates for symptomatic and asymptomatic infections — plot_recovery_duration","text":"function visualizes assumed shedding durations corresponding recovery rates (1/duration) symptomatic asymptomatic cholera infections using transparent bars solid mean lines. Recovery duration shown x-axis.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_recovery_duration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot recovery durations and rates for symptomatic and asymptomatic infections — plot_recovery_duration","text":"","code":"plot_recovery_duration(   PATHS = NULL,   symp_range = c(3, 7),   asymp_range = c(7, 14) )"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_recovery_duration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot recovery durations and rates for symptomatic and asymptomatic infections — plot_recovery_duration","text":"PATHS Optional list containing output paths. provided, must include DOCS_FIGURES plot saved. symp_range numeric vector length 2 indicating minimum maximum shedding duration (days) symptomatic infections. Default c(3, 7). asymp_range numeric vector length 2 indicating minimum maximum shedding duration (days) asymptomatic infections. Default c(7, 14).","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_recovery_duration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot recovery durations and rates for symptomatic and asymptomatic infections — plot_recovery_duration","text":"Invisibly returns ggplot object. PATHS supplied, also saves PNG.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_recovery_duration.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot recovery durations and rates for symptomatic and asymptomatic infections — plot_recovery_duration","text":"list PATHS provided valid DOCS_FIGURES element, plot also saved PNG directory \"recovery_rates.png\".","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_recovery_duration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot recovery durations and rates for symptomatic and asymptomatic infections — plot_recovery_duration","text":"","code":"plot_recovery_duration() #> Error in geom_rect(aes(xmin = min_days, xmax = max_days, ymin = ymin,     ymax = ymax, fill = type), alpha = 0.4, color = NA): could not find function \"geom_rect\" plot_recovery_duration(symp_range = c(4, 6), asymp_range = c(8, 12)) #> Error in geom_rect(aes(xmin = min_days, xmax = max_days, ymin = ymin,     ymax = ymax, fill = type), alpha = 0.4, color = NA): could not find function \"geom_rect\""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_seasnoal_clustering.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Clustering of Countries Based on Seasonal Dynamics — plot_seasnoal_clustering","title":"Plot Clustering of Countries Based on Seasonal Dynamics — plot_seasnoal_clustering","text":"function visualizes clustering countries based seasonal precipitation cholera cases. generates map showing clusters, multi-panel plot showing fitted Fourier series values cluster.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_seasnoal_clustering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Clustering of Countries Based on Seasonal Dynamics — plot_seasnoal_clustering","text":"","code":"plot_seasnoal_clustering(   PATHS,   use_cases = FALSE,   set_inferred_to_na = TRUE,   clustering_method = \"hierarchical\",   k = 4 )"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_seasnoal_clustering.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Clustering of Countries Based on Seasonal Dynamics — plot_seasnoal_clustering","text":"PATHS list containing paths processed climate, cholera, fitted data stored. Typically generated get_paths() function include: DATA_SHAPEFILES: Path directory containing shapefiles African countries. DOCS_TABLES: Path load processed precipitation, fitted values, clustering results. DOCS_FIGURES: Path save output plot. use_cases logical value. TRUE, clustering based Fourier series fitted cholera cases. FALSE, clustering based precipitation. set_inferred_to_na logical value. TRUE, inferred countries set NA clustering. Default TRUE using precipitation, FALSE using cases. clustering_method character string specifying clustering method. Options \"kmeans\", \"hierarchical\", \"dbscan\", \"knn\". Default \"hierarchical\". k integer specifying number clusters k-means hierarchical clustering. Default 4.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_seasnoal_clustering.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Clustering of Countries Based on Seasonal Dynamics — plot_seasnoal_clustering","text":"function generates saves PNG file showing clustering countries based seasonal dynamics.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_seasonal_clustering.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Clustering of Countries Based on Seasonal Dynamics — plot_seasonal_clustering","title":"Plot Clustering of Countries Based on Seasonal Dynamics — plot_seasonal_clustering","text":"function visualizes clustering countries based seasonal precipitation cholera cases. generates map showing clusters, multi-panel plot showing fitted Fourier series values cluster.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_seasonal_clustering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Clustering of Countries Based on Seasonal Dynamics — plot_seasonal_clustering","text":"","code":"plot_seasonal_clustering(   PATHS,   use_cases = FALSE,   set_inferred_to_na = TRUE,   clustering_method = \"hierarchical\",   k = 4 )"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_seasonal_clustering.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Clustering of Countries Based on Seasonal Dynamics — plot_seasonal_clustering","text":"PATHS list containing paths processed climate, cholera, fitted data stored. Typically generated get_paths() function include: DATA_SHAPEFILES: Path directory containing shapefiles African countries. DOCS_TABLES: Path load processed precipitation, fitted values, clustering results. DOCS_FIGURES: Path save output plot. use_cases logical value. TRUE, clustering based Fourier series fitted cholera cases. FALSE, clustering based precipitation. set_inferred_to_na logical value. TRUE, inferred countries set NA clustering. Default TRUE using precipitation, FALSE using cases. clustering_method character string specifying clustering method. Options \"kmeans\", \"ward.D2\", \"dbscan\", \"knn\". Default \"ward.D2\" hierarchical clustering. k integer specifying number clusters k-means hierarchical clustering. Default 4.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_seasonal_clustering.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Clustering of Countries Based on Seasonal Dynamics — plot_seasonal_clustering","text":"function generates saves PNG file showing clustering countries based seasonal dynamics.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_seasonal_transmission.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Precipitation and Cholera Case Data with Fourier Series Fits — plot_seasonal_transmission","title":"Plot Precipitation and Cholera Case Data with Fourier Series Fits — plot_seasonal_transmission","text":"function visualizes seasonal precipitation cholera cases data, fitted double Fourier series model. generates plot Z-scored data country, indicating inferred countries cholera cases data imputed neighbors.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_seasonal_transmission.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Precipitation and Cholera Case Data with Fourier Series Fits — plot_seasonal_transmission","text":"","code":"plot_seasonal_transmission(PATHS)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_seasonal_transmission.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Precipitation and Cholera Case Data with Fourier Series Fits — plot_seasonal_transmission","text":"PATHS list containing paths processed climate, cholera, fitted data stored. Typically generated get_paths() function include: DOCS_FIGURES: Path save output plot.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_seasonal_transmission.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Precipitation and Cholera Case Data with Fourier Series Fits — plot_seasonal_transmission","text":"function generates saves PNG file showing seasonal dynamics precipitation cholera cases across multiple countries.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_seasonal_transmission_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Seasonal Transmission Example with Grid Points — plot_seasonal_transmission_example","title":"Plot Seasonal Transmission Example with Grid Points — plot_seasonal_transmission_example","text":"function plots map selected country grid points used climate data sampling, visualizes seasonal transmission dynamics using Fourier series precipitation cholera cases.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_seasonal_transmission_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Seasonal Transmission Example with Grid Points — plot_seasonal_transmission_example","text":"","code":"plot_seasonal_transmission_example(PATHS, country_iso_code, n_points = 30)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_seasonal_transmission_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Seasonal Transmission Example with Grid Points — plot_seasonal_transmission_example","text":"PATHS list containing paths processed climate, cholera, fitted data stored. Typically generated get_paths() function include: DATA_SHAPEFILES: Path directory containing shapefiles African countries. DOCS_TABLES: Path load processed precipitation fitted values data. DOCS_FIGURES: Path save output plot. country_iso_code character string representing ISO3 code country plot. n_points integer specifying number grid points generate within country sampling.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_seasonal_transmission_example.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Seasonal Transmission Example with Grid Points — plot_seasonal_transmission_example","text":"function generates saves PNG file showing grid points country map seasonal transmission dynamics.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_shedding_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Shedding Rate as a Function of Environmental Suitability — plot_shedding_rate","title":"Plot Shedding Rate as a Function of Environmental Suitability — plot_shedding_rate","text":"function generates plot visualizes suitability-dependent decay rate environmental shedding based climate-driven environmental suitability (\\(\\psi_{jt}\\)). function generates three models decay rate \\(\\delta_{jt}\\): \\(\\delta_{jt} = 1 - \\psi_{jt}\\): simple linear transformation \\(\\psi_{jt}\\). \\(\\delta_{jt} = 1 - \\frac{1}{1 + (1 - \\psi_{jt})}\\): nonlinear transformation \\(\\psi_{jt}\\). \\(\\delta_{jt} = \\delta_{\\min} + \\psi_{jt} \\cdot (\\delta_{\\max} - \\delta_{\\min})\\): linear transformation based minimum maximum decay rates. plot saved PNG file directory specified PATHS$DOCS_FIGURES.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_shedding_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Shedding Rate as a Function of Environmental Suitability — plot_shedding_rate","text":"","code":"plot_shedding_rate(PATHS)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_shedding_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Shedding Rate as a Function of Environmental Suitability — plot_shedding_rate","text":"PATHS list containing paths plot saved. Typically generated get_paths() function include: DOCS_FIGURES: Path directory plot saved.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_shedding_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Shedding Rate as a Function of Environmental Suitability — plot_shedding_rate","text":"","code":"if (FALSE) { # Assuming PATHS is generated from get_paths() PATHS <- get_paths() plot_shedding_rate(PATHS) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_suitability_and_cases.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Predicted Suitability and Reported Cholera Cases for a Specific Country — plot_suitability_and_cases","title":"Plot Predicted Suitability and Reported Cholera Cases for a Specific Country — plot_suitability_and_cases","text":"function plots reported cholera cases predicted environmental suitability specific country time, shaded regions indicating cholera outbreaks.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_suitability_and_cases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Predicted Suitability and Reported Cholera Cases for a Specific Country — plot_suitability_and_cases","text":"","code":"plot_suitability_and_cases(PATHS, plot_iso_code)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_suitability_and_cases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Predicted Suitability and Reported Cholera Cases for a Specific Country — plot_suitability_and_cases","text":"PATHS list paths directories data stored plots saved. plot_iso_code ISO code country plot.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_suitability_and_cases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Predicted Suitability and Reported Cholera Cases for a Specific Country — plot_suitability_and_cases","text":"combined plot reported cholera cases predicted environmental suitability.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_suitability_by_country.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Predicted Suitability for All Countries — plot_suitability_by_country","title":"Plot Predicted Suitability for All Countries — plot_suitability_by_country","text":"function generates facet plot predicted environmental suitability countries time, shaded regions indicating cholera outbreaks.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_suitability_by_country.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Predicted Suitability for All Countries — plot_suitability_by_country","text":"","code":"plot_suitability_by_country(PATHS)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_suitability_by_country.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Predicted Suitability for All Countries — plot_suitability_by_country","text":"PATHS list paths directories data stored plots saved.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_suitability_by_country.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Predicted Suitability for All Countries — plot_suitability_by_country","text":"facet plot predicted environmental suitability countries.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_suspected_cases.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Proportion of Suspected Cholera Cases — plot_suspected_cases","title":"Plot Proportion of Suspected Cholera Cases — plot_suspected_cases","text":"function loads parameter data frame proportion suspected cholera cases (rho) param_rho_suspected_cases.csv file generates plot showing probability distributions low high estimates, custom annotations formatting.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_suspected_cases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Proportion of Suspected Cholera Cases — plot_suspected_cases","text":"","code":"plot_suspected_cases(PATHS)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_suspected_cases.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Proportion of Suspected Cholera Cases — plot_suspected_cases","text":"PATHS list containing paths parameter data figures saved. Typically generated get_paths() function include: MODEL_INPUT: Path directory parameter data frame stored. DOCS_FIGURES: Path directory plot saved.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_vaccine_effectiveness.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Vaccine Effectiveness and Beta Distribution — plot_vaccine_effectiveness","title":"Plot Vaccine Effectiveness and Beta Distribution — plot_vaccine_effectiveness","text":"function generates two plots: one showing vaccine effectiveness decay time, another showing Beta distribution initial vaccine effectiveness.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_vaccine_effectiveness.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Vaccine Effectiveness and Beta Distribution — plot_vaccine_effectiveness","text":"","code":"plot_vaccine_effectiveness(PATHS)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_vaccine_effectiveness.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Vaccine Effectiveness and Beta Distribution — plot_vaccine_effectiveness","text":"PATHS list containing paths figures saved. Typically generated get_paths() function include: DOCS_FIGURES: Path directory figures saved.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_vibrio_decay_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Vibrio Decay Rate as a Function of Environmental Suitability — plot_vibrio_decay_rate","title":"Plot Vibrio Decay Rate as a Function of Environmental Suitability — plot_vibrio_decay_rate","text":"function generates plot visualizes suitability-dependent decay rate V. cholerae survival based climate-driven environmental suitability (\\(\\psi_{jt}\\)). figure compares five transformation types survival time using cumulative Beta distribution: Linear: \\(f(\\psi_{jt}) = \\text{pbeta}(\\psi_{jt} \\mid s_1 = 1, s_2 = 1)\\) Concave: \\(f(\\psi_{jt}) = \\text{pbeta}(\\psi_{jt} \\mid s_1 = 1, s_2 = 5)\\) Convex: \\(f(\\psi_{jt}) = \\text{pbeta}(\\psi_{jt} \\mid s_1 = 5, s_2 = 1)\\) Sigmoidal: \\(f(\\psi_{jt}) = \\text{pbeta}(\\psi_{jt} \\mid s_1 = 5, s_2 = 5)\\) Arcsine: \\(f(\\psi_{jt}) = \\text{pbeta}(\\psi_{jt} \\mid s_1 = 0.5, s_2 = 0.5)\\)","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_vibrio_decay_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Vibrio Decay Rate as a Function of Environmental Suitability — plot_vibrio_decay_rate","text":"","code":"plot_vibrio_decay_rate(PATHS, decay_days_short = 3, decay_days_long = 90)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_vibrio_decay_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Vibrio Decay Rate as a Function of Environmental Suitability — plot_vibrio_decay_rate","text":"PATHS list containing path locations saving output. Must include: DOCS_FIGURES: File path directory saving plot decay_days_short Numeric. Minimum survival time (days). Default 3. decay_days_long Numeric. Maximum survival time (days). Default 90.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_vibrio_decay_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Vibrio Decay Rate as a Function of Environmental Suitability — plot_vibrio_decay_rate","text":"Saves PNG file PATHS$DOCS_FIGURES. Invisibly returns ggplot object.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_vibrio_decay_rate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Vibrio Decay Rate as a Function of Environmental Suitability — plot_vibrio_decay_rate","text":"primary y-axis shows survival time days. secondary y-axis shows decay rate \\(\\delta_{jt} = 1 / \\text{days}(\\psi_{jt})\\). Horizontal dashed lines indicate minimum maximum bounds survival time. output plot saved PNG file directory specified PATHS$DOCS_FIGURES.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/plot_vibrio_decay_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Vibrio Decay Rate as a Function of Environmental Suitability — plot_vibrio_decay_rate","text":"","code":"if (FALSE) { PATHS <- get_paths() plot_vibrio_decay_rate(PATHS) plot_vibrio_decay_rate(PATHS, decay_days_short = 2, decay_days_long = 100) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_CFR_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Cholera Data to Calculate Aggregated Case Fatality Ratios and Fit Beta Distributions (2014-2024) — process_CFR_data","title":"Process Cholera Data to Calculate Aggregated Case Fatality Ratios and Fit Beta Distributions (2014-2024) — process_CFR_data","text":"function processes cholera data, aggregates cases deaths country period 2014-2024, calculates aggregated Case Fatality Ratio (CFR), fits Beta distributions country. Countries fewer cases min_obs CFR set value AFRO Region.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_CFR_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Cholera Data to Calculate Aggregated Case Fatality Ratios and Fit Beta Distributions (2014-2024) — process_CFR_data","text":"","code":"process_CFR_data(PATHS, min_obs)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_CFR_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Cholera Data to Calculate Aggregated Case Fatality Ratios and Fit Beta Distributions (2014-2024) — process_CFR_data","text":"PATHS list containing paths cholera data located. Typically generated get_paths() function include: DATA_WHO_ANNUAL: Path directory containing processed annual cholera data. DOCS_TABLES: Path directory processed CFR data saved. min_obs integer specifying minimum number cases required country CFR. Countries fewer cases threshold CFR set value AFRO Region.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_CFR_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Cholera Data to Calculate Aggregated Case Fatality Ratios and Fit Beta Distributions (2014-2024) — process_CFR_data","text":"data frame aggregated CFR, confidence intervals, Beta distribution parameters country.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_CFR_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process Cholera Data to Calculate Aggregated Case Fatality Ratios and Fit Beta Distributions (2014-2024) — process_CFR_data","text":"","code":"if (FALSE) { PATHS <- get_paths() cholera_data <- process_CFR_data(PATHS, min_obs = 100) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_ENSO_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile ENSO and DMI Data (Historical and Forecast) — process_ENSO_data","title":"Compile ENSO and DMI Data (Historical and Forecast) — process_ENSO_data","text":"function compiles historical forecast data DMI ENSO (Niño3, Niño3.4, Niño4) single data frame. data filtered include years specified year_start onwards. function also allows disaggregation monthly data daily weekly values using either linear interpolation spline interpolation.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_ENSO_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile ENSO and DMI Data (Historical and Forecast) — process_ENSO_data","text":"","code":"process_ENSO_data(year_start = NULL, frequency = \"monthly\", method = \"linear\")"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_ENSO_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compile ENSO and DMI Data (Historical and Forecast) — process_ENSO_data","text":"year_start integer representing start year filtering data. data year onward included compiled data. value must greater equal 1870. frequency character string specifying time resolution output data. Valid options \"daily\", \"weekly\", \"monthly\". method character string specifying interpolation method use. Valid options \"linear\" (linear interpolation using zoo::na.approx()) \"spline\" (spline interpolation using zoo::na.spline()).","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_ENSO_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compile ENSO and DMI Data (Historical and Forecast) — process_ENSO_data","text":"data frame combined historical forecast data DMI, ENSO3, ENSO34, ENSO4. data frame includes following columns: date: date data (daily, weekly, monthly) YYYY-MM-DD format. variable: variable name, can \"DMI\", \"ENSO3\", \"ENSO34\", \"ENSO4\". value: value variable (sea surface temperature anomaly). year: year corresponding date. month: month corresponding date. month_name: name month (e.g., \"Jan\"). week: week year (\"weekly\" \"daily\" frequency). doy: day year (\"daily\" frequency). date_start: Start date week month. date_stop: End date week month.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_ENSO_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compile ENSO and DMI Data (Historical and Forecast) — process_ENSO_data","text":"","code":"if (FALSE) { # Compile the ENSO and DMI data from the year 2000 onwards compiled_enso_data <- process_ENSO_data(2010, \"monthly\")  # Display the compiled data head(compiled_enso_data) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_OAG_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Process and Save OAG Flight Data for Africa — process_OAG_data","title":"Process and Save OAG Flight Data for Africa — process_OAG_data","text":"function processes raw OAG flight data African countries, including data cleaning, location date conversion, aggregation. processed data saved CSV files African countries subset countries used MOSAIC modeling framework.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_OAG_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process and Save OAG Flight Data for Africa — process_OAG_data","text":"","code":"process_OAG_data(PATHS)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_OAG_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process and Save OAG Flight Data for Africa — process_OAG_data","text":"PATHS list containing paths raw processed data stored. PATHS typically output get_paths() function include following components: DATA_RAW: Path directory containing raw data files. DATA_PROCESSED: Path directory processed data saved. DATA_SHAPEFILES: Path directory containing shapefiles African countries.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_OAG_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process and Save OAG Flight Data for Africa — process_OAG_data","text":"function processes OAG flight data saves aggregated results specified processed data paths.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_OAG_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process and Save OAG Flight Data for Africa — process_OAG_data","text":"","code":"if (FALSE) { # Define paths for raw and processed data using get_paths() PATHS <- get_paths()  # Process the OAG data and save the results process_OAG_data(PATHS) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_UN_demographics_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Process UN World Prospects Data for African Countries — process_UN_demographics_data","title":"Process UN World Prospects Data for African Countries — process_UN_demographics_data","text":"function processes demographic data UN World Population Prospects African countries. loads available data, gets total population, birth rates, death rates, saves processed data CSV file.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_UN_demographics_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process UN World Prospects Data for African Countries — process_UN_demographics_data","text":"","code":"process_UN_demographics_data(PATHS)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_UN_demographics_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process UN World Prospects Data for African Countries — process_UN_demographics_data","text":"PATHS list containing paths raw processed data stored. PATHS typically output get_paths() function include following components: DATA_RAW: Path directory containing raw UN World Population Prospects data. DATA_PROCESSED: Path directory processed demographic data saved.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_UN_demographics_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process UN World Prospects Data for African Countries — process_UN_demographics_data","text":"function return value. processes UN demographic data saves aggregated results CSV file specified directory.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_UN_demographics_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Process UN World Prospects Data for African Countries — process_UN_demographics_data","text":"function performs following steps: Loads raw demographic data CSV file. Gets population, birth rate, death rate per day country. Saves processed data CSV file processed data directory. processed data file saved PATHS$DATA_PROCESSED/demographics/ directory, filename includes year range available data. Data Source: United Nations World Population Prospects","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_UN_demographics_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process UN World Prospects Data for African Countries — process_UN_demographics_data","text":"","code":"if (FALSE) { # Define paths for raw and processed data using get_paths() PATHS <- get_paths()  # Process the UN World Prospects data for all available years and save the results process_demographics_data(PATHS) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_WHO_annual_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download, Process, and Save Historical Annual WHO Cholera Data for Africa — process_WHO_annual_data","title":"Download, Process, and Save Historical Annual WHO Cholera Data for Africa — process_WHO_annual_data","text":"function compiles historical cholera data African countries (AFRO region) years 1949 2024. data processed saved MOSAIC directory structure. includes reported cholera cases, deaths, case fatality ratios (CFR).","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_WHO_annual_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download, Process, and Save Historical Annual WHO Cholera Data for Africa — process_WHO_annual_data","text":"","code":"process_WHO_annual_data(PATHS)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_WHO_annual_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download, Process, and Save Historical Annual WHO Cholera Data for Africa — process_WHO_annual_data","text":"PATHS list containing paths raw processed data directories. Typically generated get_paths() include: DATA_RAW: Path directory containing raw cholera data. DATA_WHO_ANNUAL: Path directory processed cholera data saved.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_WHO_annual_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download, Process, and Save Historical Annual WHO Cholera Data for Africa — process_WHO_annual_data","text":"function return value processes saves historical cholera data CSV files processed data directory.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_WHO_annual_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download, Process, and Save Historical Annual WHO Cholera Data for Africa — process_WHO_annual_data","text":"function compiles cholera data African countries (AFRO region) processing historical data 1949-2024. data sources follows: 1949-2021: Data compiled annual reports World Data. See https://ourworldindata.org. 2022: Data manually extracted annual report. 2023-2024: Data downloaded directly AWD GIS dashboard. Additionally, function calculates 95% binomial confidence intervals CFR applicable, data saved CSV files processed data directory.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_WHO_annual_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download, Process, and Save Historical Annual WHO Cholera Data for Africa — process_WHO_annual_data","text":"","code":"if (FALSE) { # Assuming PATHS is generated from get_paths() PATHS <- get_paths()  # Download and process WHO annual cholera data process_WHO_annual_data(PATHS) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_WHO_vaccination_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Vaccination Data for MOSAIC Model — process_WHO_vaccination_data","title":"Process Vaccination Data for MOSAIC Model — process_WHO_vaccination_data","text":"function processes raw vaccination data associated population data create clean, structured dataset MOSAIC model. handles data cleaning, infers missing campaign dates, validates dataset, saves output use modeling cholera vaccination efforts.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_WHO_vaccination_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Vaccination Data for MOSAIC Model — process_WHO_vaccination_data","text":"","code":"process_WHO_vaccination_data(PATHS)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_WHO_vaccination_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Vaccination Data for MOSAIC Model — process_WHO_vaccination_data","text":"PATHS list containing file paths input output data. list include: DATA_DEMOGRAPHICS: Path directory demographic data stored. DATA_SCRAPE_WHO_VACCINATION: Path directory containing raw vaccination data. MODEL_INPUT: Path directory processed vaccination data saved.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_WHO_vaccination_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Vaccination Data for MOSAIC Model — process_WHO_vaccination_data","text":"function saves processed vaccination data CSV file directory specified PATHS$MODEL_INPUT. also returns processed data data frame use R.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_WHO_vaccination_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Process Vaccination Data for MOSAIC Model — process_WHO_vaccination_data","text":"function performs following steps: Load Filter Demographic Data: - Reads demographic data African countries CSV file. - Filters data year 2023 retains population sizes. Load Clean Vaccination Data: - Reads raw vaccination data. - Converts country names ISO codes consistency. - Filters data include countries MOSAIC database. Infer Missing Campaign Dates: - Computes delay decision campaign dates. - Infers missing campaign dates based mean delay possible. - Fixes missing decision dates grouped request numbers. Validate Filter Data: - Ensures rows valid campaign dates. - Removes rows doses_shipped zero missing. Save Processed Data: - Writes cleaned processed dataset CSV file modeling.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_WHO_vaccination_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process Vaccination Data for MOSAIC Model — process_WHO_vaccination_data","text":"","code":"# Example usage PATHS <- list(   DATA_DEMOGRAPHICS = \"path/to/demographics\",   DATA_SCRAPE_WHO_VACCINATION = \"path/to/who/vaccination\",   MODEL_INPUT = \"path/to/model/input\" )  processed_data <- process_WHO_vaccination_data(PATHS) #> Loading vaccination and population data #> Warning: cannot open file 'path/to/demographics/demographics_africa_2000_2023.csv': No such file or directory #> Error in file(file, \"rt\"): cannot open the connection"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_WHO_weekly_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Weekly Cholera Data: Convert Country Names to ISO3 and Filter by WHO AFRO Region with Cutoff for Binary Cases — process_WHO_weekly_data","title":"Process Weekly Cholera Data: Convert Country Names to ISO3 and Filter by WHO AFRO Region with Cutoff for Binary Cases — process_WHO_weekly_data","text":"function processes weekly cholera data converting country names ISO3 codes, filtering data countries AFRO region, organizing data year week. adds binary outbreak indicators based specified case cutoff value generates start stop dates ISO week.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_WHO_weekly_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Weekly Cholera Data: Convert Country Names to ISO3 and Filter by WHO AFRO Region with Cutoff for Binary Cases — process_WHO_weekly_data","text":"","code":"process_WHO_weekly_data(PATHS, cutoff)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_WHO_weekly_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Weekly Cholera Data: Convert Country Names to ISO3 and Filter by WHO AFRO Region with Cutoff for Binary Cases — process_WHO_weekly_data","text":"PATHS list containing paths raw processed data directories. Typically generated get_paths() function include: DATA_SCRAPE_WHO_WEEKLY: Path raw cholera data file (e.g., cholera_country_weekly.csv). DATA_WHO_WEEKLY: Path save processed cholera data (e.g., cholera_country_weekly_processed.csv). cutoff integer specifying case count threshold binary outbreak indicator set 1. Specific countries (e.g., Cameroon) can adjusted cutoff values.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_WHO_weekly_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Weekly Cholera Data: Convert Country Names to ISO3 and Filter by WHO AFRO Region with Cutoff for Binary Cases — process_WHO_weekly_data","text":"function processes cholera data, adds binary outbreak indicator, saves result CSV file. value returned.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_WHO_weekly_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Process Weekly Cholera Data: Convert Country Names to ISO3 and Filter by WHO AFRO Region with Cutoff for Binary Cases — process_WHO_weekly_data","text":"function performs following tasks: Reads raw cholera data CSV file. Converts country names ISO3 codes using MOSAIC::convert_country_to_iso MOSAIC::convert_iso_to_country functions. Filters dataset include countries AFRO region (based MOSAIC::iso_codes_who_afro). Orders data year, week, country. Renames columns consistency: cases_by_week cases deaths_by_week deaths. Adds date_start date_stop columns based ISO week, using ISOweek::ISOweek2date function. Adds binary outbreak indicator (cases_binary) based specified cutoff case counts, specific adjustments certain countries (e.g., Cameroon). Reorganizes columns clarity saves processed data specified path.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_WHO_weekly_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process Weekly Cholera Data: Convert Country Names to ISO3 and Filter by WHO AFRO Region with Cutoff for Binary Cases — process_WHO_weekly_data","text":"","code":"if (FALSE) { # Define paths for raw and processed cholera data PATHS <- get_paths()  # Process the weekly cholera data with a cutoff of 700 cases process_WHO_weekly_data(PATHS, cutoff = 700) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_climate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Process and Aggregate Climate Data for Each Country — process_climate_data","title":"Process and Aggregate Climate Data for Each Country — process_climate_data","text":"function processes climate data downloaded using download_climate_data function. creates three aggregated datasets: daily, weekly, monthly, country saves Parquet files country ISO code included file name.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_climate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process and Aggregate Climate Data for Each Country — process_climate_data","text":"","code":"process_climate_data(PATHS)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_climate_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process and Aggregate Climate Data for Each Country — process_climate_data","text":"PATHS list containing paths climate data stored processed. Typically generated get_paths() function include: DATA_RAW: Path directory raw climate data stored. DATA_CLIMATE: Path directory processed climate data saved.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_climate_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process and Aggregate Climate Data for Each Country — process_climate_data","text":"function return value. processes climate data saves daily, weekly, monthly aggregated datasets country Parquet format.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_country_similarity_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Country Similarity Data for African Countries — process_country_similarity_data","title":"Process Country Similarity Data for African Countries — process_country_similarity_data","text":"function processes global country similarity distance matrix extracts subset African countries, normalizes country names, matches ISO3 codes. resulting matrix African countries saved CSV file. Country similarity data comes Objective Lists Country Similarity Index.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_country_similarity_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Country Similarity Data for African Countries — process_country_similarity_data","text":"","code":"process_country_similarity_data(PATHS)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_country_similarity_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Country Similarity Data for African Countries — process_country_similarity_data","text":"PATHS list containing paths raw processed data stored. Typically generated get_paths() function, include: DATA_RAW: Path directory containing raw similarity matrix data. DATA_SIMILARITY_MATRIX: Path directory processed African similarity matrix saved.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_country_similarity_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Country Similarity Data for African Countries — process_country_similarity_data","text":"function saves processed similarity matrix African countries specified directory.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_country_similarity_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Process Country Similarity Data for African Countries — process_country_similarity_data","text":"function performs following steps: Loads global similarity distance matrix CSV file. Normalizes country names title case replaces non-standard names like \"Ivory Coast\" \"Côte d'Ivoire\" match ISO3 country standards. Subsets matrix include African countries, based ISO3 codes provided MOSAIC::iso_codes_africa. Outputs CSV file containing similarity matrix African countries, row column names ISO3 format.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_country_similarity_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process Country Similarity Data for African Countries — process_country_similarity_data","text":"","code":"if (FALSE) { # Example usage to process the country similarity matrix for African countries PATHS <- get_paths() process_country_similarity_data(PATHS) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_demographics_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Process UN World Prospects Data for African Countries — process_demographics_data","title":"Process UN World Prospects Data for African Countries — process_demographics_data","text":"function processes demographic data UN World Population Prospects African countries. filters data specified years, calculates population, birth rates, death rates per day, saves processed data CSV file.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_demographics_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process UN World Prospects Data for African Countries — process_demographics_data","text":"","code":"process_demographics_data(PATHS)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_demographics_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process UN World Prospects Data for African Countries — process_demographics_data","text":"PATHS list containing paths raw processed data stored. PATHS typically output get_paths() function include following components: DATA_RAW: Path directory containing raw UN World Population Prospects data. DATA_PROCESSED: Path directory processed demographic data saved.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_demographics_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process UN World Prospects Data for African Countries — process_demographics_data","text":"function return value. processes UN demographic data saves aggregated results CSV file specified directory.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_demographics_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Process UN World Prospects Data for African Countries — process_demographics_data","text":"function performs following steps: Loads raw demographic data CSV file. Filters data specified years African countries. Calculates population, birth rate, death rate per day country. Saves processed data CSV file processed data directory. processed data file saved PATHS$DATA_PROCESSED/demographics/ directory, filename includes year range data.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_demographics_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process UN World Prospects Data for African Countries — process_demographics_data","text":"","code":"if (FALSE) { # Define paths for raw and processed data using get_paths() PATHS <- get_paths()  # Process the UN World Prospects data and save the results process_demographics_data(PATHS) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_suitability_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Environmental Suitability Data for Cholera Transmission — process_suitability_data","title":"Process Environmental Suitability Data for Cholera Transmission — process_suitability_data","text":"function loads climate data, ENSO data, weekly cholera cases data, processes , merges dataset estimate environmental suitability cholera transmission based various environmental factors.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_suitability_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Environmental Suitability Data for Cholera Transmission — process_suitability_data","text":"","code":"process_suitability_data(PATHS)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_suitability_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Environmental Suitability Data for Cholera Transmission — process_suitability_data","text":"PATHS list containing paths data stored. Typically generated get_paths() function include: DATA_CLIMATE: Path directory processed climate data stored. DATA_ENSO: Path directory ENSO data stored. DATA_WHO_WEEKLY: Path directory containing processed weekly cholera cases data.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_suitability_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Environmental Suitability Data for Cholera Transmission — process_suitability_data","text":"function processes data merges climate, ENSO, cholera cases data single dataset. processed dataset saved CSV file.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_vaccination_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Vaccination Data for Cholera Model — process_vaccination_data","title":"Process Vaccination Data for Cholera Model — process_vaccination_data","text":"function processes cholera vaccination request data, converting information format suitable use cholera model. filters data, converts country names ISO codes, extracts relevant time variables year, month, week. resulting data written CSV file containing vaccination rate parameters modeling.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_vaccination_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Vaccination Data for Cholera Model — process_vaccination_data","text":"","code":"process_vaccination_data(PATHS)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_vaccination_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Vaccination Data for Cholera Model — process_vaccination_data","text":"PATHS list file paths, include following elements: DATA_SCRAPE_GTFCC Path folder containing scraped GTFCC data. MODEL_INPUT Path folder processed vaccination parameter file saved.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_vaccination_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Vaccination Data for Cholera Model — process_vaccination_data","text":"Saves CSV file containing processed vaccination data parameter values modeling. function return R object.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_vaccination_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Process Vaccination Data for Cholera Model — process_vaccination_data","text":"function performs following steps: Reads vaccination request data CSV file. Converts country names ISO codes using MOSAIC::convert_country_to_iso function. Filters data include events labeled \"Round\" ensures data contains valid ISO country codes MOSAIC::iso_codes_mosaic list. Extracts relevant time variables year, month, ISO week vaccination event dates. Prepares parameter data frame using MOSAIC::make_param_df function, representing vaccination rate (parameter \"nu\") time, doses vaccines administered. Writes resulting parameter data frame CSV file use cholera modeling.","code":""},{"path":[]},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/process_vaccination_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process Vaccination Data for Cholera Model — process_vaccination_data","text":"","code":"if (FALSE) { PATHS <- list(   DATA_SCRAPE_GTFCC = \"path/to/scraped/data\",   MODEL_INPUT = \"path/to/model/input\" ) process_vaccination_data(PATHS) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/read_hdf5_to_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Read an HDF5 File into an R List — read_hdf5_to_list","title":"Read an HDF5 File into an R List — read_hdf5_to_list","text":"Reads HDF5 file (supports .h5 .h5.gz formats) named R list.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/read_hdf5_to_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read an HDF5 File into an R List — read_hdf5_to_list","text":"","code":"read_hdf5_to_list(file_path)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/read_hdf5_to_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read an HDF5 File into an R List — read_hdf5_to_list","text":"file_path Path .h5 .h5.gz file.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/read_hdf5_to_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read an HDF5 File into an R List — read_hdf5_to_list","text":"named R list representing hierarchical structure HDF5 file.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/read_json_to_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a JSON File into an R List — read_json_to_list","title":"Read a JSON File into an R List — read_json_to_list","text":"Reads JSON file (optionally compressed gzip) converts named R list.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/read_json_to_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a JSON File into an R List — read_json_to_list","text":"","code":"read_json_to_list(file_path)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/read_json_to_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a JSON File into an R List — read_json_to_list","text":"file_path character string specifying full file path input JSON file.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/read_json_to_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a JSON File into an R List — read_json_to_list","text":"named R list containing data JSON file.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/read_json_to_list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read a JSON File into an R List — read_json_to_list","text":"function first verifies specified file exists. file name ends \".gz\" (ignoring case), assumed gzipped read using gzfile connection. Otherwise, file read directly. JSON text parsed jsonlite::fromJSON() R list.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/read_json_to_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a JSON File into an R List — read_json_to_list","text":"","code":"if (FALSE) {   # Read from a plain JSON file.   data_list <- read_json_to_list(\"output.json\")   print(data_list)    # Read from a gzipped JSON file.   data_list_gz <- read_json_to_list(\"output.json.gz\")   print(data_list_gz) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/read_obj_to_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a Python-Compatible Object File into an R List — read_obj_to_list","title":"Read a Python-Compatible Object File into an R List — read_obj_to_list","text":"Reads Python-compatible .obj .obj.gz file converts back R list.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/read_obj_to_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a Python-Compatible Object File into an R List — read_obj_to_list","text":"","code":"read_obj_to_list(file_path)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/read_obj_to_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a Python-Compatible Object File into an R List — read_obj_to_list","text":"file_path character string specifying full file path .obj .obj.gz file load.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/read_obj_to_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a Python-Compatible Object File into an R List — read_obj_to_list","text":"named R list containing data .obj file.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/read_obj_to_list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read a Python-Compatible Object File into an R List — read_obj_to_list","text":"function uses sciris.sc.load() Python read .obj file, converted back R list using reticulate::py_to_r(). file compressed (.obj.gz), automatically decompressed. function assumes virtual Python environment already activated via .onAttach().","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/read_obj_to_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a Python-Compatible Object File into an R List — read_obj_to_list","text":"","code":"if (FALSE) {   # Load an uncompressed .obj file   params <- read_obj_to_list(\"config.obj\")    # Load a compressed .obj.gz file   params_gz <- read_obj_to_list(\"config.obj.gz\")    # Inspect contents   str(params) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/read_yaml_to_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a YAML File into an R List — read_yaml_to_list","title":"Read a YAML File into an R List — read_yaml_to_list","text":"Reads YAML file converts contents named R list.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/read_yaml_to_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a YAML File into an R List — read_yaml_to_list","text":"","code":"read_yaml_to_list(file_path)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/read_yaml_to_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a YAML File into an R List — read_yaml_to_list","text":"file_path character string specifying full file path input YAML file.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/read_yaml_to_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a YAML File into an R List — read_yaml_to_list","text":"named R list containing data read YAML file.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/read_yaml_to_list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read a YAML File into an R List — read_yaml_to_list","text":"function reads YAML file disk. file gzipped (.e., name ends .gz), file decompressed fly using connection opened gzfile(). YAML content parsed using yaml::read_yaml() yaml::yaml.load().","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/read_yaml_to_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a YAML File into an R List — read_yaml_to_list","text":"","code":"if (FALSE) {   # Read from a plain YAML file.   input_file <- \"output.yaml\"   data_list <- read_yaml_to_list(file_path = input_file)   print(data_list)    # Read from a gzipped YAML file.   input_file_gz <- \"output.yaml.gz\"   data_list_gz <- read_yaml_to_list(file_path = input_file_gz)   print(data_list_gz) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/run_WHO_annual_data_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Shiny Application for Visualizing WHO Annual Cholera Data in AFRO Countries — run_WHO_annual_data_app","title":"Run Shiny Application for Visualizing WHO Annual Cholera Data in AFRO Countries — run_WHO_annual_data_app","text":"function launches Shiny app visualizes cholera cases, deaths, case fatality rate (CFR) countries AFRO region 1970 2024. Users can select metric (cases, deaths, CFR) filter specific countries.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/run_WHO_annual_data_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Shiny Application for Visualizing WHO Annual Cholera Data in AFRO Countries — run_WHO_annual_data_app","text":"","code":"run_WHO_annual_data_app(PATHS)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/run_WHO_annual_data_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Shiny Application for Visualizing WHO Annual Cholera Data in AFRO Countries — run_WHO_annual_data_app","text":"PATHS list containing paths processed cholera data file. Typically generated get_paths() function include: DATA_WHO_ANNUAL: Path directory containing processed cholera data file (e.g., who_afro_annual_1949_2024.csv).","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/run_WHO_annual_data_app.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run Shiny Application for Visualizing WHO Annual Cholera Data in AFRO Countries — run_WHO_annual_data_app","text":"function creates Shiny app allows users explore cholera incidence data across AFRO countries 1970 2024. Users can choose viewing cases, deaths, CFR can select specific countries visualization. app generates bar plots cases deaths, point plots error bars CFR.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/run_WHO_annual_data_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Shiny Application for Visualizing WHO Annual Cholera Data in AFRO Countries — run_WHO_annual_data_app","text":"","code":"if (FALSE) { # Define paths for processed data PATHS <- get_paths()  # Run the cholera Shiny app run_WHO_annual_data_app(PATHS) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/set_openmeteo_api_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Set OpenMeteo API Key — set_openmeteo_api_key","title":"Set OpenMeteo API Key — set_openmeteo_api_key","text":"function sets OpenMeteo API key stores global option called openmeteo_api_key. API key provided argument, used. , function prompt key interactively.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/set_openmeteo_api_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set OpenMeteo API Key — set_openmeteo_api_key","text":"","code":"set_openmeteo_api_key(api_key = NULL)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/set_openmeteo_api_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set OpenMeteo API Key — set_openmeteo_api_key","text":"api_key character string representing OpenMeteo API key. NULL, function prompt key interactively.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/set_openmeteo_api_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set OpenMeteo API Key — set_openmeteo_api_key","text":"message confirming API key set, instructions retrieving key.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/set_openmeteo_api_key.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set OpenMeteo API Key — set_openmeteo_api_key","text":"API key stored global option called openmeteo_api_key using options(). key can retrieved time using getOption(\"openmeteo_api_key\").","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/set_openmeteo_api_key.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set OpenMeteo API Key — set_openmeteo_api_key","text":"","code":"# Set the OpenMeteo API key interactively set_openmeteo_api_key() #> Please enter your OpenMeteo API key:  #> Error in set_openmeteo_api_key(): API key cannot be empty. Please provide a valid API key.  # Set the OpenMeteo API key programmatically set_openmeteo_api_key(\"your-api-key-here\") #> OpenMeteo API key set successfully. #> Retrieve with getOption('openmeteo_api_key')  # Access the API key getOption(\"openmeteo_api_key\") #> [1] \"your-api-key-here\""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/set_root_directory.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Root Directory — set_root_directory","title":"Set Root Directory — set_root_directory","text":"function sets root directory user-specified path , provided, prompts user enter root directory interactively. directory path stored global option called root_directory also returned.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/set_root_directory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Root Directory — set_root_directory","text":"","code":"set_root_directory(root = NULL)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/set_root_directory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Root Directory — set_root_directory","text":"root character string representing path root directory. NULL, function prompt user enter root directory interactively.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/set_root_directory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Root Directory — set_root_directory","text":"character string representing root directory. root directory also stored globally option root_directory.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/set_root_directory.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set Root Directory — set_root_directory","text":"function uses either user-specified path path provided interactively set root directory. path validated ensure exists. validated, path stored global option root_directory, can accessed using getOption(\"root_directory\"). path invalid (.e., exist), function throws error.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/set_root_directory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Root Directory — set_root_directory","text":"","code":"if (FALSE) { # Set and display the root directory interactively root_dir <- set_root_directory() cat(\"Root directory:\", root_dir, \"\\n\")  # Set the root directory programmatically root_dir <- set_root_directory(\"/path/to/root\") cat(\"Root directory:\", root_dir, \"\\n\")  # Access the root directory from the global options getOption(\"root_directory\") }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/write_list_to_hdf5.html","id":null,"dir":"Reference","previous_headings":"","what":"Write an R list to an HDF5 file — write_list_to_hdf5","title":"Write an R list to an HDF5 file — write_list_to_hdf5","text":"Writes R list HDF5 file (.h5 .h5.gz) format.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/write_list_to_hdf5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write an R list to an HDF5 file — write_list_to_hdf5","text":"","code":"write_list_to_hdf5(   data_list,   file_path,   compress_chunks = FALSE,   compress_file = FALSE )"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/write_list_to_hdf5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write an R list to an HDF5 file — write_list_to_hdf5","text":"data_list named list containing data write. file_path character string specifying full file path, including file extension (.h5 .h5.gz). compress_chunks Logical. TRUE, applies internal dataset compression (level 9). compress_file Logical. TRUE, creates gzip-compressed copy (.gz) without removing original file.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/write_list_to_hdf5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write an R list to an HDF5 file — write_list_to_hdf5","text":"value returned. Prints message upon successful writing.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/write_list_to_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Write an R List to a JSON File — write_list_to_json","title":"Write an R List to a JSON File — write_list_to_json","text":"Takes named R list writes JSON file.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/write_list_to_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write an R List to a JSON File — write_list_to_json","text":"","code":"write_list_to_json(data_list, file_path, compress = FALSE)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/write_list_to_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write an R List to a JSON File — write_list_to_json","text":"data_list named list containing data write. file_path character string specifying full file path output JSON file. compress Logical. TRUE, JSON written gzipped format file extension forced .json.gz. Default FALSE.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/write_list_to_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write an R List to a JSON File — write_list_to_json","text":"function return value. prints message indicating file successfully written.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/write_list_to_json.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write an R List to a JSON File — write_list_to_json","text":"function converts R list JSON text using jsonlite::toJSON() (pretty printing enabled) writes either plain text file gzipped file compress = TRUE. gzipped file created using connection opened gzfile().","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/write_list_to_json.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write an R List to a JSON File — write_list_to_json","text":"","code":"if (FALSE) {   sample_data <- list(     group1 = list(       value1 = rnorm(100),       value2 = runif(100)     ),     group2 = list(       message = \"Hello, MOSAIC!\",       timestamp = Sys.time()     )   )    # Write to a plain JSON file.   output_file <- \"output.json\"   write_list_to_json(data_list = sample_data, file_path = output_file, compress = FALSE)    # Write to a gzipped JSON file.   output_file_gz <- \"output.json\"  # Note: the function will change this to output.json.gz   write_list_to_json(data_list = sample_data, file_path = output_file_gz, compress = TRUE)    # Load the plain JSON file to inspect its contents.   json_data <- jsonlite::read_json(output_file)   print(json_data) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/write_list_to_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Write an R List to a Python-Compatible Object — write_list_to_obj","title":"Write an R List to a Python-Compatible Object — write_list_to_obj","text":"Takes named R list writes Python-compatible .obj .obj.gz file, preserving dictionary-like structure.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/write_list_to_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write an R List to a Python-Compatible Object — write_list_to_obj","text":"","code":"write_list_to_obj(data_list, file_path, compress = FALSE)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/write_list_to_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write an R List to a Python-Compatible Object — write_list_to_obj","text":"data_list named list containing data write. file_path character string specifying full file path output .obj .obj.gz file. compress Logical. TRUE, file saved gzip-compressed .obj.gz file. Default FALSE.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/write_list_to_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write an R List to a Python-Compatible Object — write_list_to_obj","text":"function return value. prints message indicating file successfully written.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/write_list_to_obj.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write an R List to a Python-Compatible Object — write_list_to_obj","text":"function converts R list Python-compatible dictionary using reticulate::r_to_py() writes .obj .obj.gz file using sciris.sc.save(). Since virtual Python environment already activated via .onAttach(), function assumes correct environment use. function leverages sciris.sc.save() file storage. Full documentation sciris.sc.save() can found : Sciris save() documentation","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/write_list_to_obj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write an R List to a Python-Compatible Object — write_list_to_obj","text":"","code":"if (FALSE) {   sample_data <- list(     group1 = list(       value1 = rnorm(100),       value2 = runif(100)     ),     group2 = list(       message = \"Hello, MOSAIC!\",       timestamp = Sys.time()     )   )    # Write to an uncompressed Python-compatible object file.   output_file <- \"output.obj\"   write_list_to_obj(data_list = sample_data, file_path = output_file, compress = FALSE)    # Write to a compressed Python-compatible object file.   output_file_gz <- \"output.obj.gz\"   write_list_to_obj(data_list = sample_data, file_path = output_file_gz, compress = TRUE)    # Load in Python:   # import sciris as sc   # params = sc.load('output.obj.gz')   # print(params) }"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/write_list_to_yaml.html","id":null,"dir":"Reference","previous_headings":"","what":"Write an R List to a YAML File — write_list_to_yaml","title":"Write an R List to a YAML File — write_list_to_yaml","text":"Takes named R list writes YAML file.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/write_list_to_yaml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write an R List to a YAML File — write_list_to_yaml","text":"","code":"write_list_to_yaml(data_list, file_path, compress = FALSE)"},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/write_list_to_yaml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write an R List to a YAML File — write_list_to_yaml","text":"data_list named list containing data write. file_path character string specifying full file path output YAML file. compress Logical. TRUE, YAML written gzipped format file extension forced .yaml.gz. Default FALSE.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/write_list_to_yaml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write an R List to a YAML File — write_list_to_yaml","text":"function return value. prints message indicating file successfully written.","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/write_list_to_yaml.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write an R List to a YAML File — write_list_to_yaml","text":"function converts R list YAML text using yaml::.yaml() writes either plain text file gzipped file compress = TRUE. gzipped file created using connection opened gzfile().","code":""},{"path":"institutefordiseasemodeling.github.io/MOSAIC-pkg/reference/write_list_to_yaml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write an R List to a YAML File — write_list_to_yaml","text":"","code":"if (FALSE) {   sample_data <- list(     group1 = list(       value1 = rnorm(100),       value2 = runif(100)     ),     group2 = list(       message = \"Hello, MOSAIC!\",       timestamp = Sys.time()     )   )    # Write to a plain YAML file.   output_file <- \"output.yaml\"   write_list_to_yaml(data_list = sample_data, file_path = output_file, compress = FALSE)    # Write to a gzipped YAML file.   output_file_gz <- \"output.yaml\"  # Note: the function will change this to output.yaml.gz   write_list_to_yaml(data_list = sample_data, file_path = output_file_gz, compress = TRUE)    # Load the plain YAML file to inspect its contents.   yaml_data <- yaml::read_yaml(output_file)   print(yaml_data) }"}]
