% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calc_diffusion_matrix_pi.R
\name{calc_diffusion_matrix_pi}
\alias{calc_diffusion_matrix_pi}
\title{Compute Diffusion Matrix Based on Gravity Model}
\usage{
calc_diffusion_matrix_pi(D, N, omega, gamma)
}
\arguments{
\item{D}{A square numeric distance matrix between locations. Units are kilometers.}

\item{N}{A numeric vector of population sizes. Length must match \code{nrow(D)}. May be named.}

\item{omega}{Numeric exponent for population scaling.}

\item{gamma}{Numeric exponent for distance decay.}
}
\value{
A numeric matrix of diffusion probabilities \eqn{\pi_{ij}}, with diagonals set to \code{NA}.
}
\description{
Computes a connectivity matrix \eqn{\pi_{ij}} between locations using a normalized gravity model.
}
\details{
The normalized gravity model has the following form:

\deqn{\pi_{ij} = \frac{N_j^\omega \, d_{ij}^{-\gamma}}{\sum_{j \ne i} N_j^\omega \, d_{ij}^{-\gamma}}, \quad \forall \; i,\, j}

where \eqn{d_{ij}} is the distance between locations \eqn{i} and \eqn{j}, and \eqn{N_j} is the population
or weight of location \eqn{j}. The diagonal of the output matrix is set to \code{NA}, as \eqn{\pi_{ij}} is intended
to be used conditionally alongside the departure probability \eqn{\tau_i}.
}
\examples{
\dontrun{
set.seed(123)
D <- matrix(runif(100, 1, 10), nrow = 10)
D <- (D + t(D)) / 2; diag(D) <- 0
N <- runif(10, 100, 1000)
names(N) <- LETTERS[1:10]

pi_mat <- calc_diffusion_matrix_pi(D, N, omega = 0.5, gamma = 2)
}

}
