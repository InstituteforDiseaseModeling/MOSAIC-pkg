% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_distance_matrix.R
\name{get_distance_matrix}
\alias{get_distance_matrix}
\title{Build distance matrix from longitude/latitude coordinates}
\usage{
get_distance_matrix(x, y, id, method = c("spherical", "planar"))
}
\arguments{
\item{x}{Numeric vector of longitudes (degrees).}

\item{y}{Numeric vector of latitudes (degrees).}

\item{id}{Character vector of names for each location.}

\item{method}{Character string, either \code{"spherical"} (default) for
Haversine distances on a sphere of radius 6371 km, or \code{"planar"}
for Euclidean distances in degree‐space converted by 111.35 km/deg.}
}
\value{
A square matrix of pairwise distances (km) among locations,
with row and column names from \code{id}, sorted alphabetically.
}
\description{
This function builds the pairwise distance matrix (in kilometers)
from vectors of longitude (\code{x}) and latitude (\code{y}), either by
planar approximation or great-circle (Haversine) formula.
}
\examples{
\dontrun{
# Sample lon/lat for three cities
lon <- c(-122.33, -118.24, -74.00)
lat <- c(  47.61,   34.05,   40.71)
id  <- c("Seattle", "LosAngeles", "NewYork")

# 1. Great‐circle (Haversine) distances in km
D_spherical <- get_distance_matrix(lon, lat, id)

# 2. Planar approximation (× 111.35 km/deg)
D_planar <- get_distance_matrix(lon, lat, id, method = "planar")

# Inspect results
print(D_spherical)
print(D_planar)
}

}
