% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/process_JHU_data.R
\name{process_JHU_weekly_data}
\alias{process_JHU_weekly_data}
\title{Process Weekly Cholera Data from JHU: Convert to MOSAIC Format}
\usage{
process_JHU_weekly_data(PATHS)
}
\arguments{
\item{PATHS}{A list containing paths to the raw and processed data directories. Should include:
\itemize{
\item \strong{DATA_RAW}: Path to the directory containing \code{Public_surveillance_dataset.rds}.
\item \strong{DATA_JHU_WEEKLY}: Path to save the processed cholera data (e.g., \code{cholera_country_weekly_processed.csv}).
}}
}
\value{
Invisibly returns \code{NULL}. Side effects:
\itemize{
\item Reads raw data with \code{readRDS()}.
\item Writes processed data to \code{PATHS$DATA_JHU_WEEKLY/cholera_country_weekly_processed.csv} via \code{write.csv()}.
}
}
\description{
This function processes raw weekly cholera surveillance data from the JHU Public Surveillance Dataset,
aggregates to country level, parses ISO-weeks, computes week start/end dates, and prepares the data
for the MOSAIC framework.
}
\details{
Steps performed:
\itemize{
\item Load \code{Public_surveillance_dataset.rds} and keep only \code{spatial_scale == "country"}.
\item Extract \code{iso_code} from \code{location_name} (suffix after “::”) and convert to full country name.
\item Split \code{epiweek} (e.g. "2017-15") into \code{year} and \code{week}.
\item Create \code{date_start} (Monday) and \code{date_stop} (Sunday) for each ISO week via \code{ISOweek::ISOweek2date()}.
\item Compute \code{month} from \code{date_start} using \code{lubridate::month()}.
\item Define \code{cases} using suspected (\code{sCh}) if present, else confirmed (\code{cCh}), defaulting to 0.
\item Define \code{deaths} (zero if \code{NA}).
\item Save a data.frame with columns:
\code{country, iso_code, year, month, week, date_start, date_stop, cases, deaths}.
}
}
\examples{
\dontrun{
PATHS <- list(
  DATA_RAW        = "data/raw",
  DATA_JHU_WEEKLY = "data/processed/jhu_weekly"
)
process_JHU_weekly_data(PATHS)
}
}
